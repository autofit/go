// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deviceshadow.proto

/*
Package deviceshadow is a generated protocol buffer package.

It is generated from these files:
	deviceshadow.proto

It has these top-level messages:
	DeviceregReq
	DeviceregResp
	BaseCmd
	GateData
	CmdSetList
	DeviceList
	GeneralList
	GeneralState
	MultimediaList
	DataParm
	MultimediaState
	VolumeState
	OutputState
	ChannelValue
	AlarmList
	FarmState
	FarmList
	LightList
	LightExtra
	LightState
	AirConditioningList
	AirConditioningState
	DevicedisconnReq
*/
package deviceshadow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DigitalCtl int32

const (
	DigitalCtl_GeneralCtl         DigitalCtl = 0
	DigitalCtl_LightCtl           DigitalCtl = 1
	DigitalCtl_AirConditioningCtl DigitalCtl = 2
	DigitalCtl_FarmCtl            DigitalCtl = 3
	DigitalCtl_MultimediaCtl      DigitalCtl = 4
)

var DigitalCtl_name = map[int32]string{
	0: "GeneralCtl",
	1: "LightCtl",
	2: "AirConditioningCtl",
	3: "FarmCtl",
	4: "MultimediaCtl",
}
var DigitalCtl_value = map[string]int32{
	"GeneralCtl":         0,
	"LightCtl":           1,
	"AirConditioningCtl": 2,
	"FarmCtl":            3,
	"MultimediaCtl":      4,
}

func (x DigitalCtl) String() string {
	return proto.EnumName(DigitalCtl_name, int32(x))
}
func (DigitalCtl) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeviceregReq struct {
	DeviceType    string `protobuf:"bytes,1,opt,name=DeviceType" json:"DeviceType,omitempty"`
	DeviceRegCode string `protobuf:"bytes,2,opt,name=DeviceRegCode" json:"DeviceRegCode,omitempty"`
	DeviceId      string `protobuf:"bytes,3,opt,name=DeviceId" json:"DeviceId,omitempty"`
	MsgSeq        string `protobuf:"bytes,4,opt,name=MsgSeq" json:"MsgSeq,omitempty"`
	TempId        string `protobuf:"bytes,5,opt,name=TempId" json:"TempId,omitempty"`
}

func (m *DeviceregReq) Reset()                    { *m = DeviceregReq{} }
func (m *DeviceregReq) String() string            { return proto.CompactTextString(m) }
func (*DeviceregReq) ProtoMessage()               {}
func (*DeviceregReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeviceregReq) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *DeviceregReq) GetDeviceRegCode() string {
	if m != nil {
		return m.DeviceRegCode
	}
	return ""
}

func (m *DeviceregReq) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceregReq) GetMsgSeq() string {
	if m != nil {
		return m.MsgSeq
	}
	return ""
}

func (m *DeviceregReq) GetTempId() string {
	if m != nil {
		return m.TempId
	}
	return ""
}

type DeviceregResp struct {
	DeviceType      string `protobuf:"bytes,1,opt,name=DeviceType" json:"DeviceType,omitempty"`
	DeviceId        string `protobuf:"bytes,2,opt,name=DeviceId" json:"DeviceId,omitempty"`
	BrokerAddr      string `protobuf:"bytes,3,opt,name=BrokerAddr" json:"BrokerAddr,omitempty"`
	MsgSeq          string `protobuf:"bytes,4,opt,name=MsgSeq" json:"MsgSeq,omitempty"`
	ServerPublicKey string `protobuf:"bytes,5,opt,name=ServerPublicKey" json:"ServerPublicKey,omitempty"`
	PrivateKey      string `protobuf:"bytes,6,opt,name=PrivateKey" json:"PrivateKey,omitempty"`
	Error           string `protobuf:"bytes,7,opt,name=Error" json:"Error,omitempty"`
}

func (m *DeviceregResp) Reset()                    { *m = DeviceregResp{} }
func (m *DeviceregResp) String() string            { return proto.CompactTextString(m) }
func (*DeviceregResp) ProtoMessage()               {}
func (*DeviceregResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeviceregResp) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *DeviceregResp) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceregResp) GetBrokerAddr() string {
	if m != nil {
		return m.BrokerAddr
	}
	return ""
}

func (m *DeviceregResp) GetMsgSeq() string {
	if m != nil {
		return m.MsgSeq
	}
	return ""
}

func (m *DeviceregResp) GetServerPublicKey() string {
	if m != nil {
		return m.ServerPublicKey
	}
	return ""
}

func (m *DeviceregResp) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *DeviceregResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type BaseCmd struct {
	DeviceType string `protobuf:"bytes,1,opt,name=DeviceType" json:"DeviceType,omitempty"`
	DeviceId   string `protobuf:"bytes,2,opt,name=DeviceId" json:"DeviceId,omitempty"`
	Ip         string `protobuf:"bytes,3,opt,name=Ip" json:"Ip,omitempty"`
	MsgSeq     string `protobuf:"bytes,4,opt,name=MsgSeq" json:"MsgSeq,omitempty"`
	Mark       string `protobuf:"bytes,5,opt,name=Mark" json:"Mark,omitempty"`
	Cmd        string `protobuf:"bytes,6,opt,name=Cmd" json:"Cmd,omitempty"`
	DeviceList string `protobuf:"bytes,7,opt,name=DeviceList" json:"DeviceList,omitempty"`
	Data       string `protobuf:"bytes,8,opt,name=Data" json:"Data,omitempty"`
	ServerId   string `protobuf:"bytes,9,opt,name=ServerId" json:"ServerId,omitempty"`
	UserName   string `protobuf:"bytes,10,opt,name=UserName" json:"UserName,omitempty"`
	Error      string `protobuf:"bytes,11,opt,name=Error" json:"Error,omitempty"`
	BrokerAddr string `protobuf:"bytes,12,opt,name=BrokerAddr" json:"BrokerAddr,omitempty"`
	GateId     string `protobuf:"bytes,13,opt,name=GateId" json:"GateId,omitempty"`
	Token      string `protobuf:"bytes,14,opt,name=Token" json:"Token,omitempty"`
}

func (m *BaseCmd) Reset()                    { *m = BaseCmd{} }
func (m *BaseCmd) String() string            { return proto.CompactTextString(m) }
func (*BaseCmd) ProtoMessage()               {}
func (*BaseCmd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BaseCmd) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *BaseCmd) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *BaseCmd) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BaseCmd) GetMsgSeq() string {
	if m != nil {
		return m.MsgSeq
	}
	return ""
}

func (m *BaseCmd) GetMark() string {
	if m != nil {
		return m.Mark
	}
	return ""
}

func (m *BaseCmd) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *BaseCmd) GetDeviceList() string {
	if m != nil {
		return m.DeviceList
	}
	return ""
}

func (m *BaseCmd) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *BaseCmd) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *BaseCmd) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *BaseCmd) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BaseCmd) GetBrokerAddr() string {
	if m != nil {
		return m.BrokerAddr
	}
	return ""
}

func (m *BaseCmd) GetGateId() string {
	if m != nil {
		return m.GateId
	}
	return ""
}

func (m *BaseCmd) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GateData struct {
	GateId    string        `protobuf:"bytes,1,opt,name=GateId" json:"GateId,omitempty"`
	Token     string        `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	Server    string        `protobuf:"bytes,3,opt,name=Server" json:"Server,omitempty"`
	BakServer string        `protobuf:"bytes,4,opt,name=BakServer" json:"BakServer,omitempty"`
	CmdSet    []*CmdSetList `protobuf:"bytes,5,rep,name=CmdSet" json:"CmdSet,omitempty"`
	Device    []*DeviceList `protobuf:"bytes,6,rep,name=Device" json:"Device,omitempty"`
}

func (m *GateData) Reset()                    { *m = GateData{} }
func (m *GateData) String() string            { return proto.CompactTextString(m) }
func (*GateData) ProtoMessage()               {}
func (*GateData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GateData) GetGateId() string {
	if m != nil {
		return m.GateId
	}
	return ""
}

func (m *GateData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GateData) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *GateData) GetBakServer() string {
	if m != nil {
		return m.BakServer
	}
	return ""
}

func (m *GateData) GetCmdSet() []*CmdSetList {
	if m != nil {
		return m.CmdSet
	}
	return nil
}

func (m *GateData) GetDevice() []*DeviceList {
	if m != nil {
		return m.Device
	}
	return nil
}

type CmdSetList struct {
	Cmd    string        `protobuf:"bytes,1,opt,name=Cmd" json:"Cmd,omitempty"`
	Device []*DeviceList `protobuf:"bytes,2,rep,name=Device" json:"Device,omitempty"`
}

func (m *CmdSetList) Reset()                    { *m = CmdSetList{} }
func (m *CmdSetList) String() string            { return proto.CompactTextString(m) }
func (*CmdSetList) ProtoMessage()               {}
func (*CmdSetList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CmdSetList) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *CmdSetList) GetDevice() []*DeviceList {
	if m != nil {
		return m.Device
	}
	return nil
}

type DeviceList struct {
	DeviceId             string                `protobuf:"bytes,1,opt,name=DeviceId" json:"DeviceId,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Category             string                `protobuf:"bytes,3,opt,name=Category" json:"Category,omitempty"`
	Sleep                string                `protobuf:"bytes,4,opt,name=Sleep" json:"Sleep,omitempty"`
	Touch                string                `protobuf:"bytes,5,opt,name=Touch" json:"Touch,omitempty"`
	MsgSeq               string                `protobuf:"bytes,6,opt,name=MsgSeq" json:"MsgSeq,omitempty"`
	DigitalCtl           DigitalCtl            `protobuf:"varint,7,opt,name=DigitalCtl,enum=deviceshadow.DigitalCtl" json:"DigitalCtl,omitempty"`
	GeneralCtl           *GeneralList          `protobuf:"bytes,8,opt,name=GeneralCtl" json:"GeneralCtl,omitempty"`
	GeneralState         *GeneralState         `protobuf:"bytes,9,opt,name=GeneralState" json:"GeneralState,omitempty"`
	LightCtl             *LightList            `protobuf:"bytes,10,opt,name=LightCtl" json:"LightCtl,omitempty"`
	LightState           *LightState           `protobuf:"bytes,11,opt,name=LightState" json:"LightState,omitempty"`
	AirConditioningCtl   *AirConditioningList  `protobuf:"bytes,12,opt,name=AirConditioningCtl" json:"AirConditioningCtl,omitempty"`
	AirConditioningState *AirConditioningState `protobuf:"bytes,13,opt,name=AirConditioningState" json:"AirConditioningState,omitempty"`
	FarmCtl              *FarmList             `protobuf:"bytes,14,opt,name=FarmCtl" json:"FarmCtl,omitempty"`
	FarmState            *FarmState            `protobuf:"bytes,15,opt,name=FarmState" json:"FarmState,omitempty"`
	MultimediaCtl        *MultimediaList       `protobuf:"bytes,16,opt,name=MultimediaCtl" json:"MultimediaCtl,omitempty"`
	MultimediaState      *MultimediaState      `protobuf:"bytes,17,opt,name=MultimediaState" json:"MultimediaState,omitempty"`
}

func (m *DeviceList) Reset()                    { *m = DeviceList{} }
func (m *DeviceList) String() string            { return proto.CompactTextString(m) }
func (*DeviceList) ProtoMessage()               {}
func (*DeviceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeviceList) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DeviceList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceList) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *DeviceList) GetSleep() string {
	if m != nil {
		return m.Sleep
	}
	return ""
}

func (m *DeviceList) GetTouch() string {
	if m != nil {
		return m.Touch
	}
	return ""
}

func (m *DeviceList) GetMsgSeq() string {
	if m != nil {
		return m.MsgSeq
	}
	return ""
}

func (m *DeviceList) GetDigitalCtl() DigitalCtl {
	if m != nil {
		return m.DigitalCtl
	}
	return DigitalCtl_GeneralCtl
}

func (m *DeviceList) GetGeneralCtl() *GeneralList {
	if m != nil {
		return m.GeneralCtl
	}
	return nil
}

func (m *DeviceList) GetGeneralState() *GeneralState {
	if m != nil {
		return m.GeneralState
	}
	return nil
}

func (m *DeviceList) GetLightCtl() *LightList {
	if m != nil {
		return m.LightCtl
	}
	return nil
}

func (m *DeviceList) GetLightState() *LightState {
	if m != nil {
		return m.LightState
	}
	return nil
}

func (m *DeviceList) GetAirConditioningCtl() *AirConditioningList {
	if m != nil {
		return m.AirConditioningCtl
	}
	return nil
}

func (m *DeviceList) GetAirConditioningState() *AirConditioningState {
	if m != nil {
		return m.AirConditioningState
	}
	return nil
}

func (m *DeviceList) GetFarmCtl() *FarmList {
	if m != nil {
		return m.FarmCtl
	}
	return nil
}

func (m *DeviceList) GetFarmState() *FarmState {
	if m != nil {
		return m.FarmState
	}
	return nil
}

func (m *DeviceList) GetMultimediaCtl() *MultimediaList {
	if m != nil {
		return m.MultimediaCtl
	}
	return nil
}

func (m *DeviceList) GetMultimediaState() *MultimediaState {
	if m != nil {
		return m.MultimediaState
	}
	return nil
}

type GeneralList struct {
	Temperature   string `protobuf:"bytes,1,opt,name=Temperature" json:"Temperature,omitempty"`
	Volume        string `protobuf:"bytes,2,opt,name=Volume" json:"Volume,omitempty"`
	Poslition     string `protobuf:"bytes,3,opt,name=Poslition" json:"Poslition,omitempty"`
	Cmd           string `protobuf:"bytes,4,opt,name=Cmd" json:"Cmd,omitempty"`
	Switch        string `protobuf:"bytes,5,opt,name=Switch" json:"Switch,omitempty"`
	WindDirection string `protobuf:"bytes,6,opt,name=WindDirection" json:"WindDirection,omitempty"`
	Mode          string `protobuf:"bytes,7,opt,name=Mode" json:"Mode,omitempty"`
	Sensitivity   string `protobuf:"bytes,8,opt,name=Sensitivity" json:"Sensitivity,omitempty"`
}

func (m *GeneralList) Reset()                    { *m = GeneralList{} }
func (m *GeneralList) String() string            { return proto.CompactTextString(m) }
func (*GeneralList) ProtoMessage()               {}
func (*GeneralList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GeneralList) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *GeneralList) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *GeneralList) GetPoslition() string {
	if m != nil {
		return m.Poslition
	}
	return ""
}

func (m *GeneralList) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *GeneralList) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *GeneralList) GetWindDirection() string {
	if m != nil {
		return m.WindDirection
	}
	return ""
}

func (m *GeneralList) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *GeneralList) GetSensitivity() string {
	if m != nil {
		return m.Sensitivity
	}
	return ""
}

type GeneralState struct {
	Switch         string     `protobuf:"bytes,1,opt,name=Switch" json:"Switch,omitempty"`
	Temperature    string     `protobuf:"bytes,2,opt,name=Temperature" json:"Temperature,omitempty"`
	Volume         string     `protobuf:"bytes,3,opt,name=Volume" json:"Volume,omitempty"`
	Poslition      string     `protobuf:"bytes,4,opt,name=Poslition" json:"Poslition,omitempty"`
	O2             string     `protobuf:"bytes,5,opt,name=O2" json:"O2,omitempty"`
	CO2            string     `protobuf:"bytes,6,opt,name=CO2" json:"CO2,omitempty"`
	CO             string     `protobuf:"bytes,7,opt,name=CO" json:"CO,omitempty"`
	WindDirection  string     `protobuf:"bytes,8,opt,name=WindDirection" json:"WindDirection,omitempty"`
	Mode           string     `protobuf:"bytes,9,opt,name=Mode" json:"Mode,omitempty"`
	Sensitivity    string     `protobuf:"bytes,10,opt,name=Sensitivity" json:"Sensitivity,omitempty"`
	LockState      string     `protobuf:"bytes,11,opt,name=LockState" json:"LockState,omitempty"`
	Beatingofheart string     `protobuf:"bytes,12,opt,name=Beatingofheart" json:"Beatingofheart,omitempty"`
	Brigness       string     `protobuf:"bytes,13,opt,name=Brigness" json:"Brigness,omitempty"`
	Alarm          *AlarmList `protobuf:"bytes,14,opt,name=Alarm" json:"Alarm,omitempty"`
}

func (m *GeneralState) Reset()                    { *m = GeneralState{} }
func (m *GeneralState) String() string            { return proto.CompactTextString(m) }
func (*GeneralState) ProtoMessage()               {}
func (*GeneralState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GeneralState) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *GeneralState) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *GeneralState) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *GeneralState) GetPoslition() string {
	if m != nil {
		return m.Poslition
	}
	return ""
}

func (m *GeneralState) GetO2() string {
	if m != nil {
		return m.O2
	}
	return ""
}

func (m *GeneralState) GetCO2() string {
	if m != nil {
		return m.CO2
	}
	return ""
}

func (m *GeneralState) GetCO() string {
	if m != nil {
		return m.CO
	}
	return ""
}

func (m *GeneralState) GetWindDirection() string {
	if m != nil {
		return m.WindDirection
	}
	return ""
}

func (m *GeneralState) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *GeneralState) GetSensitivity() string {
	if m != nil {
		return m.Sensitivity
	}
	return ""
}

func (m *GeneralState) GetLockState() string {
	if m != nil {
		return m.LockState
	}
	return ""
}

func (m *GeneralState) GetBeatingofheart() string {
	if m != nil {
		return m.Beatingofheart
	}
	return ""
}

func (m *GeneralState) GetBrigness() string {
	if m != nil {
		return m.Brigness
	}
	return ""
}

func (m *GeneralState) GetAlarm() *AlarmList {
	if m != nil {
		return m.Alarm
	}
	return nil
}

type MultimediaList struct {
	Path         string    `protobuf:"bytes,1,opt,name=Path" json:"Path,omitempty"`
	Press        string    `protobuf:"bytes,2,opt,name=Press" json:"Press,omitempty"`
	Switch       string    `protobuf:"bytes,3,opt,name=Switch" json:"Switch,omitempty"`
	Sort         string    `protobuf:"bytes,4,opt,name=Sort" json:"Sort,omitempty"`
	Scenario     string    `protobuf:"bytes,5,opt,name=Scenario" json:"Scenario,omitempty"`
	Channel      string    `protobuf:"bytes,6,opt,name=Channel" json:"Channel,omitempty"`
	StartChannel string    `protobuf:"bytes,7,opt,name=StartChannel" json:"StartChannel,omitempty"`
	EndChannel   string    `protobuf:"bytes,8,opt,name=EndChannel" json:"EndChannel,omitempty"`
	Volume       string    `protobuf:"bytes,9,opt,name=Volume" json:"Volume,omitempty"`
	Mute         string    `protobuf:"bytes,10,opt,name=Mute" json:"Mute,omitempty"`
	Mode         string    `protobuf:"bytes,11,opt,name=Mode" json:"Mode,omitempty"`
	MeetingName  string    `protobuf:"bytes,12,opt,name=MeetingName" json:"MeetingName,omitempty"`
	State        string    `protobuf:"bytes,13,opt,name=State" json:"State,omitempty"`
	Data         *DataParm `protobuf:"bytes,14,opt,name=Data" json:"Data,omitempty"`
}

func (m *MultimediaList) Reset()                    { *m = MultimediaList{} }
func (m *MultimediaList) String() string            { return proto.CompactTextString(m) }
func (*MultimediaList) ProtoMessage()               {}
func (*MultimediaList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MultimediaList) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MultimediaList) GetPress() string {
	if m != nil {
		return m.Press
	}
	return ""
}

func (m *MultimediaList) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *MultimediaList) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *MultimediaList) GetScenario() string {
	if m != nil {
		return m.Scenario
	}
	return ""
}

func (m *MultimediaList) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *MultimediaList) GetStartChannel() string {
	if m != nil {
		return m.StartChannel
	}
	return ""
}

func (m *MultimediaList) GetEndChannel() string {
	if m != nil {
		return m.EndChannel
	}
	return ""
}

func (m *MultimediaList) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *MultimediaList) GetMute() string {
	if m != nil {
		return m.Mute
	}
	return ""
}

func (m *MultimediaList) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *MultimediaList) GetMeetingName() string {
	if m != nil {
		return m.MeetingName
	}
	return ""
}

func (m *MultimediaList) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MultimediaList) GetData() *DataParm {
	if m != nil {
		return m.Data
	}
	return nil
}

type DataParm struct {
	DevType     string `protobuf:"bytes,1,opt,name=DevType" json:"DevType,omitempty"`
	DevIp       string `protobuf:"bytes,2,opt,name=DevIp" json:"DevIp,omitempty"`
	DevPort     string `protobuf:"bytes,3,opt,name=DevPort" json:"DevPort,omitempty"`
	DevUsername string `protobuf:"bytes,4,opt,name=DevUsername" json:"DevUsername,omitempty"`
	DevPassword string `protobuf:"bytes,5,opt,name=DevPassword" json:"DevPassword,omitempty"`
}

func (m *DataParm) Reset()                    { *m = DataParm{} }
func (m *DataParm) String() string            { return proto.CompactTextString(m) }
func (*DataParm) ProtoMessage()               {}
func (*DataParm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DataParm) GetDevType() string {
	if m != nil {
		return m.DevType
	}
	return ""
}

func (m *DataParm) GetDevIp() string {
	if m != nil {
		return m.DevIp
	}
	return ""
}

func (m *DataParm) GetDevPort() string {
	if m != nil {
		return m.DevPort
	}
	return ""
}

func (m *DataParm) GetDevUsername() string {
	if m != nil {
		return m.DevUsername
	}
	return ""
}

func (m *DataParm) GetDevPassword() string {
	if m != nil {
		return m.DevPassword
	}
	return ""
}

type MultimediaState struct {
	Volume *VolumeState `protobuf:"bytes,1,opt,name=Volume" json:"Volume,omitempty"`
}

func (m *MultimediaState) Reset()                    { *m = MultimediaState{} }
func (m *MultimediaState) String() string            { return proto.CompactTextString(m) }
func (*MultimediaState) ProtoMessage()               {}
func (*MultimediaState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MultimediaState) GetVolume() *VolumeState {
	if m != nil {
		return m.Volume
	}
	return nil
}

type VolumeState struct {
	Output *OutputState `protobuf:"bytes,1,opt,name=Output" json:"Output,omitempty"`
	Input  *OutputState `protobuf:"bytes,2,opt,name=Input" json:"Input,omitempty"`
}

func (m *VolumeState) Reset()                    { *m = VolumeState{} }
func (m *VolumeState) String() string            { return proto.CompactTextString(m) }
func (*VolumeState) ProtoMessage()               {}
func (*VolumeState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *VolumeState) GetOutput() *OutputState {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *VolumeState) GetInput() *OutputState {
	if m != nil {
		return m.Input
	}
	return nil
}

type OutputState struct {
	ChannelValue []*ChannelValue `protobuf:"bytes,1,rep,name=ChannelValue" json:"ChannelValue,omitempty"`
}

func (m *OutputState) Reset()                    { *m = OutputState{} }
func (m *OutputState) String() string            { return proto.CompactTextString(m) }
func (*OutputState) ProtoMessage()               {}
func (*OutputState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *OutputState) GetChannelValue() []*ChannelValue {
	if m != nil {
		return m.ChannelValue
	}
	return nil
}

type ChannelValue struct {
	Channel string `protobuf:"bytes,1,opt,name=Channel" json:"Channel,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *ChannelValue) Reset()                    { *m = ChannelValue{} }
func (m *ChannelValue) String() string            { return proto.CompactTextString(m) }
func (*ChannelValue) ProtoMessage()               {}
func (*ChannelValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ChannelValue) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChannelValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AlarmList struct {
	GasAlarm            string `protobuf:"bytes,1,opt,name=GasAlarm" json:"GasAlarm,omitempty"`
	SmokeAlarm          string `protobuf:"bytes,2,opt,name=SmokeAlarm" json:"SmokeAlarm,omitempty"`
	ShockAlarm          string `protobuf:"bytes,3,opt,name=ShockAlarm" json:"ShockAlarm,omitempty"`
	LeakAlarm           string `protobuf:"bytes,4,opt,name=LeakAlarm" json:"LeakAlarm,omitempty"`
	FallAlarm           string `protobuf:"bytes,5,opt,name=FallAlarm" json:"FallAlarm,omitempty"`
	HeartAlarm          string `protobuf:"bytes,6,opt,name=HeartAlarm" json:"HeartAlarm,omitempty"`
	PoslitionAlarm      string `protobuf:"bytes,7,opt,name=PoslitionAlarm" json:"PoslitionAlarm,omitempty"`
	LowTemperatureAlarm string `protobuf:"bytes,8,opt,name=LowTemperatureAlarm" json:"LowTemperatureAlarm,omitempty"`
	CoAlarm             string `protobuf:"bytes,9,opt,name=CoAlarm" json:"CoAlarm,omitempty"`
	EarmarkAlarm        string `protobuf:"bytes,10,opt,name=EarmarkAlarm" json:"EarmarkAlarm,omitempty"`
	CollarAlarm         string `protobuf:"bytes,11,opt,name=CollarAlarm" json:"CollarAlarm,omitempty"`
}

func (m *AlarmList) Reset()                    { *m = AlarmList{} }
func (m *AlarmList) String() string            { return proto.CompactTextString(m) }
func (*AlarmList) ProtoMessage()               {}
func (*AlarmList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AlarmList) GetGasAlarm() string {
	if m != nil {
		return m.GasAlarm
	}
	return ""
}

func (m *AlarmList) GetSmokeAlarm() string {
	if m != nil {
		return m.SmokeAlarm
	}
	return ""
}

func (m *AlarmList) GetShockAlarm() string {
	if m != nil {
		return m.ShockAlarm
	}
	return ""
}

func (m *AlarmList) GetLeakAlarm() string {
	if m != nil {
		return m.LeakAlarm
	}
	return ""
}

func (m *AlarmList) GetFallAlarm() string {
	if m != nil {
		return m.FallAlarm
	}
	return ""
}

func (m *AlarmList) GetHeartAlarm() string {
	if m != nil {
		return m.HeartAlarm
	}
	return ""
}

func (m *AlarmList) GetPoslitionAlarm() string {
	if m != nil {
		return m.PoslitionAlarm
	}
	return ""
}

func (m *AlarmList) GetLowTemperatureAlarm() string {
	if m != nil {
		return m.LowTemperatureAlarm
	}
	return ""
}

func (m *AlarmList) GetCoAlarm() string {
	if m != nil {
		return m.CoAlarm
	}
	return ""
}

func (m *AlarmList) GetEarmarkAlarm() string {
	if m != nil {
		return m.EarmarkAlarm
	}
	return ""
}

func (m *AlarmList) GetCollarAlarm() string {
	if m != nil {
		return m.CollarAlarm
	}
	return ""
}

type FarmState struct {
	N                  string `protobuf:"bytes,1,opt,name=N" json:"N,omitempty"`
	P                  string `protobuf:"bytes,2,opt,name=P" json:"P,omitempty"`
	K                  string `protobuf:"bytes,3,opt,name=K" json:"K,omitempty"`
	O2                 string `protobuf:"bytes,4,opt,name=O2" json:"O2,omitempty"`
	CO2                string `protobuf:"bytes,5,opt,name=CO2" json:"CO2,omitempty"`
	CO                 string `protobuf:"bytes,6,opt,name=CO" json:"CO,omitempty"`
	Illumination       string `protobuf:"bytes,7,opt,name=Illumination" json:"Illumination,omitempty"`
	WindDirection      string `protobuf:"bytes,8,opt,name=WindDirection" json:"WindDirection,omitempty"`
	PH                 string `protobuf:"bytes,9,opt,name=PH" json:"PH,omitempty"`
	AirPressure        string `protobuf:"bytes,10,opt,name=AirPressure" json:"AirPressure,omitempty"`
	Flow               string `protobuf:"bytes,11,opt,name=Flow" json:"Flow,omitempty"`
	Temperature        string `protobuf:"bytes,12,opt,name=Temperature" json:"Temperature,omitempty"`
	EarmarkTemperature string `protobuf:"bytes,13,opt,name=EarmarkTemperature" json:"EarmarkTemperature,omitempty"`
	Poslition          string `protobuf:"bytes,14,opt,name=Poslition" json:"Poslition,omitempty"`
	CollarPoslition    string `protobuf:"bytes,15,opt,name=CollarPoslition" json:"CollarPoslition,omitempty"`
	ValveSwitch        string `protobuf:"bytes,16,opt,name=ValveSwitch" json:"ValveSwitch,omitempty"`
	FlowSwitch         string `protobuf:"bytes,17,opt,name=FlowSwitch" json:"FlowSwitch,omitempty"`
	WarmUpSwitch       string `protobuf:"bytes,18,opt,name=WarmUpSwitch" json:"WarmUpSwitch,omitempty"`
	ShadeTheSunSwitch  string `protobuf:"bytes,19,opt,name=ShadeTheSunSwitch" json:"ShadeTheSunSwitch,omitempty"`
	RainSwitch         string `protobuf:"bytes,20,opt,name=rainSwitch" json:"rainSwitch,omitempty"`
}

func (m *FarmState) Reset()                    { *m = FarmState{} }
func (m *FarmState) String() string            { return proto.CompactTextString(m) }
func (*FarmState) ProtoMessage()               {}
func (*FarmState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *FarmState) GetN() string {
	if m != nil {
		return m.N
	}
	return ""
}

func (m *FarmState) GetP() string {
	if m != nil {
		return m.P
	}
	return ""
}

func (m *FarmState) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *FarmState) GetO2() string {
	if m != nil {
		return m.O2
	}
	return ""
}

func (m *FarmState) GetCO2() string {
	if m != nil {
		return m.CO2
	}
	return ""
}

func (m *FarmState) GetCO() string {
	if m != nil {
		return m.CO
	}
	return ""
}

func (m *FarmState) GetIllumination() string {
	if m != nil {
		return m.Illumination
	}
	return ""
}

func (m *FarmState) GetWindDirection() string {
	if m != nil {
		return m.WindDirection
	}
	return ""
}

func (m *FarmState) GetPH() string {
	if m != nil {
		return m.PH
	}
	return ""
}

func (m *FarmState) GetAirPressure() string {
	if m != nil {
		return m.AirPressure
	}
	return ""
}

func (m *FarmState) GetFlow() string {
	if m != nil {
		return m.Flow
	}
	return ""
}

func (m *FarmState) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *FarmState) GetEarmarkTemperature() string {
	if m != nil {
		return m.EarmarkTemperature
	}
	return ""
}

func (m *FarmState) GetPoslition() string {
	if m != nil {
		return m.Poslition
	}
	return ""
}

func (m *FarmState) GetCollarPoslition() string {
	if m != nil {
		return m.CollarPoslition
	}
	return ""
}

func (m *FarmState) GetValveSwitch() string {
	if m != nil {
		return m.ValveSwitch
	}
	return ""
}

func (m *FarmState) GetFlowSwitch() string {
	if m != nil {
		return m.FlowSwitch
	}
	return ""
}

func (m *FarmState) GetWarmUpSwitch() string {
	if m != nil {
		return m.WarmUpSwitch
	}
	return ""
}

func (m *FarmState) GetShadeTheSunSwitch() string {
	if m != nil {
		return m.ShadeTheSunSwitch
	}
	return ""
}

func (m *FarmState) GetRainSwitch() string {
	if m != nil {
		return m.RainSwitch
	}
	return ""
}

type FarmList struct {
	ValveSwitch       string `protobuf:"bytes,1,opt,name=ValveSwitch" json:"ValveSwitch,omitempty"`
	FlowSwitch        string `protobuf:"bytes,2,opt,name=FlowSwitch" json:"FlowSwitch,omitempty"`
	WarmUpSwitch      string `protobuf:"bytes,3,opt,name=WarmUpSwitch" json:"WarmUpSwitch,omitempty"`
	ShadeTheSunSwitch string `protobuf:"bytes,4,opt,name=ShadeTheSunSwitch" json:"ShadeTheSunSwitch,omitempty"`
	RainSwitch        string `protobuf:"bytes,5,opt,name=rainSwitch" json:"rainSwitch,omitempty"`
}

func (m *FarmList) Reset()                    { *m = FarmList{} }
func (m *FarmList) String() string            { return proto.CompactTextString(m) }
func (*FarmList) ProtoMessage()               {}
func (*FarmList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *FarmList) GetValveSwitch() string {
	if m != nil {
		return m.ValveSwitch
	}
	return ""
}

func (m *FarmList) GetFlowSwitch() string {
	if m != nil {
		return m.FlowSwitch
	}
	return ""
}

func (m *FarmList) GetWarmUpSwitch() string {
	if m != nil {
		return m.WarmUpSwitch
	}
	return ""
}

func (m *FarmList) GetShadeTheSunSwitch() string {
	if m != nil {
		return m.ShadeTheSunSwitch
	}
	return ""
}

func (m *FarmList) GetRainSwitch() string {
	if m != nil {
		return m.RainSwitch
	}
	return ""
}

type LightList struct {
	Switch       string      `protobuf:"bytes,1,opt,name=Switch" json:"Switch,omitempty"`
	WorkMode     string      `protobuf:"bytes,2,opt,name=WorkMode" json:"WorkMode,omitempty"`
	Bright       string      `protobuf:"bytes,3,opt,name=Bright" json:"Bright,omitempty"`
	Temp         string      `protobuf:"bytes,4,opt,name=Temp" json:"Temp,omitempty"`
	Colour       string      `protobuf:"bytes,5,opt,name=Colour" json:"Colour,omitempty"`
	Scene        string      `protobuf:"bytes,6,opt,name=Scene" json:"Scene,omitempty"`
	SceneData    string      `protobuf:"bytes,7,opt,name=SceneData" json:"SceneData,omitempty"`
	ControlData  string      `protobuf:"bytes,8,opt,name=ControlData" json:"ControlData,omitempty"`
	CountClose   string      `protobuf:"bytes,9,opt,name=CountClose" json:"CountClose,omitempty"`
	CountOpen    string      `protobuf:"bytes,10,opt,name=CountOpen" json:"CountOpen,omitempty"`
	Control      string      `protobuf:"bytes,11,opt,name=Control" json:"Control,omitempty"`
	Sleep        string      `protobuf:"bytes,12,opt,name=Sleep" json:"Sleep,omitempty"`
	WakeUp       string      `protobuf:"bytes,13,opt,name=WakeUp" json:"WakeUp,omitempty"`
	PowerMemory  string      `protobuf:"bytes,14,opt,name=PowerMemory" json:"PowerMemory,omitempty"`
	DoNotdisturb string      `protobuf:"bytes,15,opt,name=DoNotdisturb" json:"DoNotdisturb,omitempty"`
	MicMusic     string      `protobuf:"bytes,16,opt,name=MicMusic" json:"MicMusic,omitempty"`
	Music        string      `protobuf:"bytes,17,opt,name=Music" json:"Music,omitempty"`
	MusicData    string      `protobuf:"bytes,18,opt,name=MusicData" json:"MusicData,omitempty"`
	LightExtra   *LightExtra `protobuf:"bytes,19,opt,name=LightExtra" json:"LightExtra,omitempty"`
}

func (m *LightList) Reset()                    { *m = LightList{} }
func (m *LightList) String() string            { return proto.CompactTextString(m) }
func (*LightList) ProtoMessage()               {}
func (*LightList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *LightList) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *LightList) GetWorkMode() string {
	if m != nil {
		return m.WorkMode
	}
	return ""
}

func (m *LightList) GetBright() string {
	if m != nil {
		return m.Bright
	}
	return ""
}

func (m *LightList) GetTemp() string {
	if m != nil {
		return m.Temp
	}
	return ""
}

func (m *LightList) GetColour() string {
	if m != nil {
		return m.Colour
	}
	return ""
}

func (m *LightList) GetScene() string {
	if m != nil {
		return m.Scene
	}
	return ""
}

func (m *LightList) GetSceneData() string {
	if m != nil {
		return m.SceneData
	}
	return ""
}

func (m *LightList) GetControlData() string {
	if m != nil {
		return m.ControlData
	}
	return ""
}

func (m *LightList) GetCountClose() string {
	if m != nil {
		return m.CountClose
	}
	return ""
}

func (m *LightList) GetCountOpen() string {
	if m != nil {
		return m.CountOpen
	}
	return ""
}

func (m *LightList) GetControl() string {
	if m != nil {
		return m.Control
	}
	return ""
}

func (m *LightList) GetSleep() string {
	if m != nil {
		return m.Sleep
	}
	return ""
}

func (m *LightList) GetWakeUp() string {
	if m != nil {
		return m.WakeUp
	}
	return ""
}

func (m *LightList) GetPowerMemory() string {
	if m != nil {
		return m.PowerMemory
	}
	return ""
}

func (m *LightList) GetDoNotdisturb() string {
	if m != nil {
		return m.DoNotdisturb
	}
	return ""
}

func (m *LightList) GetMicMusic() string {
	if m != nil {
		return m.MicMusic
	}
	return ""
}

func (m *LightList) GetMusic() string {
	if m != nil {
		return m.Music
	}
	return ""
}

func (m *LightList) GetMusicData() string {
	if m != nil {
		return m.MusicData
	}
	return ""
}

func (m *LightList) GetLightExtra() *LightExtra {
	if m != nil {
		return m.LightExtra
	}
	return nil
}

type LightExtra struct {
	SwitchGradint    string `protobuf:"bytes,1,opt,name=SwitchGradint" json:"SwitchGradint,omitempty"`
	MixLightScene    string `protobuf:"bytes,2,opt,name=MixLightScene" json:"MixLightScene,omitempty"`
	MixRgbcw         string `protobuf:"bytes,3,opt,name=MixRgbcw" json:"MixRgbcw,omitempty"`
	SegmentDimming   string `protobuf:"bytes,4,opt,name=SegmentDimming" json:"SegmentDimming,omitempty"`
	SwitchNightLight string `protobuf:"bytes,5,opt,name=SwitchNightLight" json:"SwitchNightLight,omitempty"`
	CycleTiming      string `protobuf:"bytes,6,opt,name=CycleTiming" json:"CycleTiming,omitempty"`
	RandomTiming     string `protobuf:"bytes,7,opt,name=RandomTiming" json:"RandomTiming,omitempty"`
	CountDown        string `protobuf:"bytes,8,opt,name=CountDown" json:"CountDown,omitempty"`
}

func (m *LightExtra) Reset()                    { *m = LightExtra{} }
func (m *LightExtra) String() string            { return proto.CompactTextString(m) }
func (*LightExtra) ProtoMessage()               {}
func (*LightExtra) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *LightExtra) GetSwitchGradint() string {
	if m != nil {
		return m.SwitchGradint
	}
	return ""
}

func (m *LightExtra) GetMixLightScene() string {
	if m != nil {
		return m.MixLightScene
	}
	return ""
}

func (m *LightExtra) GetMixRgbcw() string {
	if m != nil {
		return m.MixRgbcw
	}
	return ""
}

func (m *LightExtra) GetSegmentDimming() string {
	if m != nil {
		return m.SegmentDimming
	}
	return ""
}

func (m *LightExtra) GetSwitchNightLight() string {
	if m != nil {
		return m.SwitchNightLight
	}
	return ""
}

func (m *LightExtra) GetCycleTiming() string {
	if m != nil {
		return m.CycleTiming
	}
	return ""
}

func (m *LightExtra) GetRandomTiming() string {
	if m != nil {
		return m.RandomTiming
	}
	return ""
}

func (m *LightExtra) GetCountDown() string {
	if m != nil {
		return m.CountDown
	}
	return ""
}

type LightState struct {
	Sleep            string `protobuf:"bytes,1,opt,name=Sleep" json:"Sleep,omitempty"`
	WakeUp           string `protobuf:"bytes,2,opt,name=WakeUp" json:"WakeUp,omitempty"`
	PowerMemory      string `protobuf:"bytes,3,opt,name=PowerMemory" json:"PowerMemory,omitempty"`
	DoNotdisturb     string `protobuf:"bytes,4,opt,name=DoNotdisturb" json:"DoNotdisturb,omitempty"`
	SceneData        string `protobuf:"bytes,5,opt,name=SceneData" json:"SceneData,omitempty"`
	Switch           string `protobuf:"bytes,6,opt,name=Switch" json:"Switch,omitempty"`
	WorkMode         string `protobuf:"bytes,7,opt,name=WorkMode" json:"WorkMode,omitempty"`
	Bright           string `protobuf:"bytes,8,opt,name=Bright" json:"Bright,omitempty"`
	Temp             string `protobuf:"bytes,9,opt,name=Temp" json:"Temp,omitempty"`
	Colour           string `protobuf:"bytes,10,opt,name=Colour" json:"Colour,omitempty"`
	MicMusic         string `protobuf:"bytes,11,opt,name=MicMusic" json:"MicMusic,omitempty"`
	SwitchGradint    string `protobuf:"bytes,12,opt,name=SwitchGradint" json:"SwitchGradint,omitempty"`
	MixLightScene    string `protobuf:"bytes,13,opt,name=MixLightScene" json:"MixLightScene,omitempty"`
	MixRgbcw         string `protobuf:"bytes,14,opt,name=MixRgbcw" json:"MixRgbcw,omitempty"`
	SegmentDimming   string `protobuf:"bytes,15,opt,name=SegmentDimming" json:"SegmentDimming,omitempty"`
	SwitchNightLight string `protobuf:"bytes,16,opt,name=SwitchNightLight" json:"SwitchNightLight,omitempty"`
	CycleTiming      string `protobuf:"bytes,17,opt,name=CycleTiming" json:"CycleTiming,omitempty"`
	RandomTiming     string `protobuf:"bytes,18,opt,name=RandomTiming" json:"RandomTiming,omitempty"`
	CountDown        string `protobuf:"bytes,19,opt,name=CountDown" json:"CountDown,omitempty"`
}

func (m *LightState) Reset()                    { *m = LightState{} }
func (m *LightState) String() string            { return proto.CompactTextString(m) }
func (*LightState) ProtoMessage()               {}
func (*LightState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *LightState) GetSleep() string {
	if m != nil {
		return m.Sleep
	}
	return ""
}

func (m *LightState) GetWakeUp() string {
	if m != nil {
		return m.WakeUp
	}
	return ""
}

func (m *LightState) GetPowerMemory() string {
	if m != nil {
		return m.PowerMemory
	}
	return ""
}

func (m *LightState) GetDoNotdisturb() string {
	if m != nil {
		return m.DoNotdisturb
	}
	return ""
}

func (m *LightState) GetSceneData() string {
	if m != nil {
		return m.SceneData
	}
	return ""
}

func (m *LightState) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *LightState) GetWorkMode() string {
	if m != nil {
		return m.WorkMode
	}
	return ""
}

func (m *LightState) GetBright() string {
	if m != nil {
		return m.Bright
	}
	return ""
}

func (m *LightState) GetTemp() string {
	if m != nil {
		return m.Temp
	}
	return ""
}

func (m *LightState) GetColour() string {
	if m != nil {
		return m.Colour
	}
	return ""
}

func (m *LightState) GetMicMusic() string {
	if m != nil {
		return m.MicMusic
	}
	return ""
}

func (m *LightState) GetSwitchGradint() string {
	if m != nil {
		return m.SwitchGradint
	}
	return ""
}

func (m *LightState) GetMixLightScene() string {
	if m != nil {
		return m.MixLightScene
	}
	return ""
}

func (m *LightState) GetMixRgbcw() string {
	if m != nil {
		return m.MixRgbcw
	}
	return ""
}

func (m *LightState) GetSegmentDimming() string {
	if m != nil {
		return m.SegmentDimming
	}
	return ""
}

func (m *LightState) GetSwitchNightLight() string {
	if m != nil {
		return m.SwitchNightLight
	}
	return ""
}

func (m *LightState) GetCycleTiming() string {
	if m != nil {
		return m.CycleTiming
	}
	return ""
}

func (m *LightState) GetRandomTiming() string {
	if m != nil {
		return m.RandomTiming
	}
	return ""
}

func (m *LightState) GetCountDown() string {
	if m != nil {
		return m.CountDown
	}
	return ""
}

type AirConditioningList struct {
	Switch                   string `protobuf:"bytes,1,opt,name=Switch" json:"Switch,omitempty"`
	AirConditioningMode      string `protobuf:"bytes,2,opt,name=AirConditioningMode" json:"AirConditioningMode,omitempty"`
	AirConditioningFlowSpeed string `protobuf:"bytes,3,opt,name=AirConditioningFlowSpeed" json:"AirConditioningFlowSpeed,omitempty"`
	Anion                    string `protobuf:"bytes,4,opt,name=Anion" json:"Anion,omitempty"`
	ChildLock                string `protobuf:"bytes,5,opt,name=ChildLock" json:"ChildLock,omitempty"`
	Light                    string `protobuf:"bytes,6,opt,name=Light" json:"Light,omitempty"`
	Uv                       string `protobuf:"bytes,7,opt,name=Uv" json:"Uv,omitempty"`
	Wet                      string `protobuf:"bytes,8,opt,name=Wet" json:"Wet,omitempty"`
	FliterReset              string `protobuf:"bytes,9,opt,name=FliterReset" json:"FliterReset,omitempty"`
	SetTemp                  string `protobuf:"bytes,10,opt,name=SetTemp" json:"SetTemp,omitempty"`
	SetHumi                  string `protobuf:"bytes,11,opt,name=SetHumi" json:"SetHumi,omitempty"`
	SleepMode                string `protobuf:"bytes,12,opt,name=SleepMode" json:"SleepMode,omitempty"`
	ConstantTemp             string `protobuf:"bytes,13,opt,name=ConstantTemp" json:"ConstantTemp,omitempty"`
	ConstantHume             string `protobuf:"bytes,14,opt,name=ConstantHume" json:"ConstantHume,omitempty"`
	ConstantFresh            string `protobuf:"bytes,15,opt,name=ConstantFresh" json:"ConstantFresh,omitempty"`
	FreshFanSpeed            string `protobuf:"bytes,16,opt,name=FreshFanSpeed" json:"FreshFanSpeed,omitempty"`
}

func (m *AirConditioningList) Reset()                    { *m = AirConditioningList{} }
func (m *AirConditioningList) String() string            { return proto.CompactTextString(m) }
func (*AirConditioningList) ProtoMessage()               {}
func (*AirConditioningList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AirConditioningList) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *AirConditioningList) GetAirConditioningMode() string {
	if m != nil {
		return m.AirConditioningMode
	}
	return ""
}

func (m *AirConditioningList) GetAirConditioningFlowSpeed() string {
	if m != nil {
		return m.AirConditioningFlowSpeed
	}
	return ""
}

func (m *AirConditioningList) GetAnion() string {
	if m != nil {
		return m.Anion
	}
	return ""
}

func (m *AirConditioningList) GetChildLock() string {
	if m != nil {
		return m.ChildLock
	}
	return ""
}

func (m *AirConditioningList) GetLight() string {
	if m != nil {
		return m.Light
	}
	return ""
}

func (m *AirConditioningList) GetUv() string {
	if m != nil {
		return m.Uv
	}
	return ""
}

func (m *AirConditioningList) GetWet() string {
	if m != nil {
		return m.Wet
	}
	return ""
}

func (m *AirConditioningList) GetFliterReset() string {
	if m != nil {
		return m.FliterReset
	}
	return ""
}

func (m *AirConditioningList) GetSetTemp() string {
	if m != nil {
		return m.SetTemp
	}
	return ""
}

func (m *AirConditioningList) GetSetHumi() string {
	if m != nil {
		return m.SetHumi
	}
	return ""
}

func (m *AirConditioningList) GetSleepMode() string {
	if m != nil {
		return m.SleepMode
	}
	return ""
}

func (m *AirConditioningList) GetConstantTemp() string {
	if m != nil {
		return m.ConstantTemp
	}
	return ""
}

func (m *AirConditioningList) GetConstantHume() string {
	if m != nil {
		return m.ConstantHume
	}
	return ""
}

func (m *AirConditioningList) GetConstantFresh() string {
	if m != nil {
		return m.ConstantFresh
	}
	return ""
}

func (m *AirConditioningList) GetFreshFanSpeed() string {
	if m != nil {
		return m.FreshFanSpeed
	}
	return ""
}

type AirConditioningState struct {
	Switch                   string `protobuf:"bytes,1,opt,name=Switch" json:"Switch,omitempty"`
	PM25                     string `protobuf:"bytes,2,opt,name=PM25" json:"PM25,omitempty"`
	AirConditioningMode      string `protobuf:"bytes,3,opt,name=AirConditioningMode" json:"AirConditioningMode,omitempty"`
	AirConditioningFlowSpeed string `protobuf:"bytes,4,opt,name=AirConditioningFlowSpeed" json:"AirConditioningFlowSpeed,omitempty"`
	FilterLife               string `protobuf:"bytes,5,opt,name=FilterLife" json:"FilterLife,omitempty"`
	Anion                    string `protobuf:"bytes,6,opt,name=Anion" json:"Anion,omitempty"`
	ChildLock                string `protobuf:"bytes,7,opt,name=ChildLock" json:"ChildLock,omitempty"`
	Light                    string `protobuf:"bytes,8,opt,name=Light" json:"Light,omitempty"`
	Uv                       string `protobuf:"bytes,9,opt,name=Uv" json:"Uv,omitempty"`
	Wet                      string `protobuf:"bytes,10,opt,name=Wet" json:"Wet,omitempty"`
	FliterReset              string `protobuf:"bytes,11,opt,name=FliterReset" json:"FliterReset,omitempty"`
	IndoorTemp               string `protobuf:"bytes,12,opt,name=IndoorTemp" json:"IndoorTemp,omitempty"`
	OutdoorTemp              string `protobuf:"bytes,13,opt,name=OutdoorTemp" json:"OutdoorTemp,omitempty"`
	IndoorHumidity           string `protobuf:"bytes,14,opt,name=IndoorHumidity" json:"IndoorHumidity,omitempty"`
	OutdoorHumidity          string `protobuf:"bytes,15,opt,name=OutdoorHumidity" json:"OutdoorHumidity,omitempty"`
	CO2                      string `protobuf:"bytes,16,opt,name=CO2" json:"CO2,omitempty"`
	Ch2OValue                string `protobuf:"bytes,17,opt,name=Ch2oValue" json:"Ch2oValue,omitempty"`
	Fault                    string `protobuf:"bytes,18,opt,name=Fault" json:"Fault,omitempty"`
}

func (m *AirConditioningState) Reset()                    { *m = AirConditioningState{} }
func (m *AirConditioningState) String() string            { return proto.CompactTextString(m) }
func (*AirConditioningState) ProtoMessage()               {}
func (*AirConditioningState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AirConditioningState) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *AirConditioningState) GetPM25() string {
	if m != nil {
		return m.PM25
	}
	return ""
}

func (m *AirConditioningState) GetAirConditioningMode() string {
	if m != nil {
		return m.AirConditioningMode
	}
	return ""
}

func (m *AirConditioningState) GetAirConditioningFlowSpeed() string {
	if m != nil {
		return m.AirConditioningFlowSpeed
	}
	return ""
}

func (m *AirConditioningState) GetFilterLife() string {
	if m != nil {
		return m.FilterLife
	}
	return ""
}

func (m *AirConditioningState) GetAnion() string {
	if m != nil {
		return m.Anion
	}
	return ""
}

func (m *AirConditioningState) GetChildLock() string {
	if m != nil {
		return m.ChildLock
	}
	return ""
}

func (m *AirConditioningState) GetLight() string {
	if m != nil {
		return m.Light
	}
	return ""
}

func (m *AirConditioningState) GetUv() string {
	if m != nil {
		return m.Uv
	}
	return ""
}

func (m *AirConditioningState) GetWet() string {
	if m != nil {
		return m.Wet
	}
	return ""
}

func (m *AirConditioningState) GetFliterReset() string {
	if m != nil {
		return m.FliterReset
	}
	return ""
}

func (m *AirConditioningState) GetIndoorTemp() string {
	if m != nil {
		return m.IndoorTemp
	}
	return ""
}

func (m *AirConditioningState) GetOutdoorTemp() string {
	if m != nil {
		return m.OutdoorTemp
	}
	return ""
}

func (m *AirConditioningState) GetIndoorHumidity() string {
	if m != nil {
		return m.IndoorHumidity
	}
	return ""
}

func (m *AirConditioningState) GetOutdoorHumidity() string {
	if m != nil {
		return m.OutdoorHumidity
	}
	return ""
}

func (m *AirConditioningState) GetCO2() string {
	if m != nil {
		return m.CO2
	}
	return ""
}

func (m *AirConditioningState) GetCh2OValue() string {
	if m != nil {
		return m.Ch2OValue
	}
	return ""
}

func (m *AirConditioningState) GetFault() string {
	if m != nil {
		return m.Fault
	}
	return ""
}

type DevicedisconnReq struct {
	DeviceType string `protobuf:"bytes,1,opt,name=DeviceType" json:"DeviceType,omitempty"`
	DeviceId   string `protobuf:"bytes,2,opt,name=DeviceId" json:"DeviceId,omitempty"`
	MsgSeq     string `protobuf:"bytes,3,opt,name=MsgSeq" json:"MsgSeq,omitempty"`
}

func (m *DevicedisconnReq) Reset()                    { *m = DevicedisconnReq{} }
func (m *DevicedisconnReq) String() string            { return proto.CompactTextString(m) }
func (*DevicedisconnReq) ProtoMessage()               {}
func (*DevicedisconnReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *DevicedisconnReq) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *DevicedisconnReq) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *DevicedisconnReq) GetMsgSeq() string {
	if m != nil {
		return m.MsgSeq
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceregReq)(nil), "deviceshadow.DeviceregReq")
	proto.RegisterType((*DeviceregResp)(nil), "deviceshadow.DeviceregResp")
	proto.RegisterType((*BaseCmd)(nil), "deviceshadow.BaseCmd")
	proto.RegisterType((*GateData)(nil), "deviceshadow.GateData")
	proto.RegisterType((*CmdSetList)(nil), "deviceshadow.cmdSetList")
	proto.RegisterType((*DeviceList)(nil), "deviceshadow.deviceList")
	proto.RegisterType((*GeneralList)(nil), "deviceshadow.generalList")
	proto.RegisterType((*GeneralState)(nil), "deviceshadow.generalState")
	proto.RegisterType((*MultimediaList)(nil), "deviceshadow.multimediaList")
	proto.RegisterType((*DataParm)(nil), "deviceshadow.dataParm")
	proto.RegisterType((*MultimediaState)(nil), "deviceshadow.multimediaState")
	proto.RegisterType((*VolumeState)(nil), "deviceshadow.volumeState")
	proto.RegisterType((*OutputState)(nil), "deviceshadow.outputState")
	proto.RegisterType((*ChannelValue)(nil), "deviceshadow.channelValue")
	proto.RegisterType((*AlarmList)(nil), "deviceshadow.alarmList")
	proto.RegisterType((*FarmState)(nil), "deviceshadow.farmState")
	proto.RegisterType((*FarmList)(nil), "deviceshadow.farmList")
	proto.RegisterType((*LightList)(nil), "deviceshadow.lightList")
	proto.RegisterType((*LightExtra)(nil), "deviceshadow.lightExtra")
	proto.RegisterType((*LightState)(nil), "deviceshadow.lightState")
	proto.RegisterType((*AirConditioningList)(nil), "deviceshadow.airConditioningList")
	proto.RegisterType((*AirConditioningState)(nil), "deviceshadow.airConditioningState")
	proto.RegisterType((*DevicedisconnReq)(nil), "deviceshadow.DevicedisconnReq")
	proto.RegisterEnum("deviceshadow.DigitalCtl", DigitalCtl_name, DigitalCtl_value)
}

func init() { proto.RegisterFile("deviceshadow.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xcd, 0x6e, 0x1b, 0xc9,
	0x11, 0xce, 0x90, 0x14, 0x25, 0x16, 0x69, 0x8a, 0x6a, 0x1b, 0x0e, 0x63, 0x6c, 0x0c, 0x67, 0x10,
	0x04, 0x86, 0x91, 0x38, 0x8e, 0x16, 0x0b, 0x24, 0x39, 0x2c, 0x60, 0x91, 0x96, 0x2d, 0xd8, 0xb4,
	0x18, 0xd2, 0x3f, 0xe7, 0x36, 0xa7, 0x4d, 0x0e, 0x34, 0x3f, 0x74, 0xb3, 0x49, 0xd9, 0xf7, 0xdc,
	0x73, 0xcd, 0x25, 0x40, 0x1e, 0x20, 0x40, 0xae, 0x39, 0xe5, 0x96, 0x17, 0xd8, 0x37, 0x08, 0xf6,
	0x98, 0x67, 0x08, 0x10, 0x54, 0x57, 0xf7, 0x4c, 0xcf, 0x70, 0x28, 0x09, 0xd9, 0xdb, 0xd4, 0x57,
	0xd5, 0x7f, 0xd5, 0x5f, 0x55, 0x75, 0xf7, 0x00, 0x0b, 0xc4, 0x26, 0x9c, 0x89, 0xd5, 0x82, 0x07,
	0xe9, 0xe5, 0xe3, 0xa5, 0x4c, 0x55, 0xca, 0x3a, 0x2e, 0xe6, 0xff, 0xd5, 0x83, 0xce, 0x50, 0x03,
	0x52, 0xcc, 0x27, 0xe2, 0x13, 0xbb, 0x0f, 0x40, 0xf2, 0x9b, 0x2f, 0x4b, 0xd1, 0xf7, 0x1e, 0x78,
	0x0f, 0x5b, 0x13, 0x07, 0x61, 0x3f, 0x87, 0x5b, 0x24, 0x4d, 0xc4, 0x7c, 0x90, 0x06, 0xa2, 0x5f,
	0xd3, 0x26, 0x45, 0x90, 0xdd, 0x83, 0x03, 0x02, 0xce, 0x82, 0x7e, 0x5d, 0x1b, 0x64, 0x32, 0xbb,
	0x0b, 0xcd, 0xd1, 0x6a, 0x3e, 0x15, 0x9f, 0xfa, 0x0d, 0xad, 0x31, 0x12, 0xe2, 0x6f, 0x44, 0xbc,
	0x3c, 0x0b, 0xfa, 0x7b, 0x84, 0x93, 0xe4, 0x7f, 0xef, 0xd9, 0x21, 0xf5, 0x14, 0x57, 0xcb, 0x6b,
	0xe7, 0xe8, 0x8e, 0x5e, 0x2b, 0x8d, 0x7e, 0x1f, 0xe0, 0x44, 0xa6, 0x17, 0x42, 0x3e, 0x0d, 0x02,
	0x69, 0xe6, 0xe6, 0x20, 0x3b, 0x67, 0xf7, 0x10, 0x0e, 0xa7, 0x42, 0x6e, 0x84, 0x1c, 0xaf, 0x3f,
	0x44, 0xe1, 0xec, 0xa5, 0xf8, 0x62, 0xa6, 0x59, 0x86, 0x71, 0x84, 0xb1, 0x0c, 0x37, 0x5c, 0x09,
	0x34, 0x6a, 0xd2, 0x08, 0x39, 0xc2, 0xee, 0xc0, 0xde, 0x33, 0x29, 0x53, 0xd9, 0xdf, 0xd7, 0x2a,
	0x12, 0xfc, 0xef, 0x6b, 0xb0, 0x7f, 0xc2, 0x57, 0x62, 0x10, 0x07, 0x3f, 0x68, 0x7d, 0x5d, 0xa8,
	0x9d, 0x2d, 0xcd, 0xba, 0x6a, 0x67, 0xcb, 0x9d, 0xeb, 0x61, 0xd0, 0x18, 0x71, 0x79, 0x61, 0x16,
	0xa1, 0xbf, 0x59, 0x0f, 0xea, 0x83, 0x38, 0x30, 0x53, 0xae, 0x17, 0x66, 0xf2, 0x2a, 0x5c, 0x29,
	0x33, 0x61, 0x07, 0xc1, 0x5e, 0x86, 0x5c, 0xf1, 0xfe, 0x01, 0xf5, 0x82, 0xdf, 0x38, 0x3b, 0x72,
	0xc9, 0x59, 0xd0, 0x6f, 0xd1, 0xec, 0xac, 0x8c, 0xba, 0xb7, 0x2b, 0x21, 0x5f, 0xf3, 0x58, 0xf4,
	0x81, 0x74, 0x56, 0xce, 0xfd, 0xd2, 0x76, 0xfc, 0x52, 0xda, 0xaf, 0x4e, 0xd5, 0x7e, 0x3d, 0xe7,
	0x0a, 0x3d, 0x71, 0x8b, 0xd6, 0x47, 0x12, 0xf6, 0xf6, 0x26, 0xbd, 0x10, 0x49, 0xbf, 0x4b, 0xbd,
	0x69, 0xc1, 0xff, 0xce, 0x83, 0x03, 0x34, 0xd0, 0x13, 0xcd, 0x9b, 0x7a, 0xd5, 0x4d, 0x6b, 0x4e,
	0x53, 0xb4, 0xa6, 0x65, 0x18, 0xe7, 0x1a, 0x89, 0x7d, 0x05, 0xad, 0x13, 0x7e, 0x61, 0x54, 0xe4,
	0xe3, 0x1c, 0x60, 0x4f, 0xa0, 0x39, 0x88, 0x83, 0xa9, 0x50, 0xfd, 0xbd, 0x07, 0xf5, 0x87, 0xed,
	0xe3, 0xfe, 0xe3, 0x42, 0x48, 0xce, 0xb4, 0x0e, 0x5d, 0x39, 0x31, 0x76, 0xd8, 0x82, 0x1c, 0xdc,
	0x6f, 0x56, 0xb5, 0x08, 0x32, 0xe7, 0x4f, 0x8c, 0x9d, 0x3f, 0x06, 0xc8, 0xfb, 0xb1, 0x9b, 0xe8,
	0xe5, 0x9b, 0x98, 0xf7, 0x58, 0xbb, 0x61, 0x8f, 0xff, 0x6e, 0x02, 0xe4, 0x70, 0x81, 0x6f, 0x5e,
	0x89, 0x6f, 0x0c, 0x1a, 0x7a, 0x37, 0xc9, 0x57, 0xfa, 0x1b, 0xed, 0x07, 0x5c, 0x89, 0x79, 0x2a,
	0xbf, 0xd8, 0xe8, 0xb7, 0x32, 0x3a, 0x77, 0x1a, 0x09, 0xb1, 0x34, 0xae, 0x22, 0x81, 0x5c, 0xbe,
	0x9e, 0x2d, 0x0c, 0x1d, 0x49, 0x70, 0xb8, 0xdb, 0x2c, 0x70, 0xf7, 0xb7, 0x00, 0xc3, 0x70, 0x1e,
	0x2a, 0x1e, 0x0d, 0x54, 0xa4, 0x59, 0xd9, 0xdd, 0x5a, 0x54, 0xa6, 0x9f, 0x38, 0xb6, 0xec, 0x77,
	0x00, 0xcf, 0x45, 0x22, 0x24, 0xb5, 0x44, 0xd6, 0xb6, 0x8f, 0x7f, 0x52, 0x6c, 0x39, 0x27, 0xbd,
	0xf6, 0x87, 0x63, 0xcc, 0xbe, 0x85, 0x8e, 0x91, 0xa6, 0x8a, 0x2b, 0xa1, 0xa9, 0xdd, 0x3e, 0xbe,
	0x57, 0xd9, 0x58, 0x5b, 0x4c, 0x0a, 0xf6, 0xec, 0x6b, 0x38, 0x78, 0x15, 0xce, 0x17, 0x0a, 0x07,
	0x06, 0xdd, 0xf6, 0xc7, 0xc5, 0xb6, 0x11, 0x6a, 0xf5, 0xb0, 0x99, 0x21, 0xae, 0x54, 0x7f, 0xd3,
	0x90, 0x6d, 0xdd, 0xac, 0x5f, 0xd1, 0x8c, 0x06, 0x74, 0x6c, 0xd9, 0x1f, 0x80, 0x3d, 0x0d, 0xe5,
	0x20, 0x4d, 0x82, 0x50, 0x85, 0x69, 0x12, 0x26, 0x73, 0x1c, 0xb8, 0xa3, 0x7b, 0xf8, 0x59, 0xb1,
	0x07, 0x5e, 0xb4, 0xd3, 0x53, 0xa8, 0x68, 0xcc, 0xde, 0xc1, 0x9d, 0x12, 0x4a, 0xd3, 0xba, 0xa5,
	0x3b, 0xf5, 0xaf, 0xec, 0x94, 0x26, 0x58, 0xd9, 0x9e, 0x3d, 0x81, 0xfd, 0x53, 0x2e, 0x63, 0x9c,
	0x5f, 0x57, 0x77, 0x75, 0xb7, 0xd8, 0xd5, 0x47, 0x2e, 0x63, 0x3d, 0x29, 0x6b, 0xc6, 0xbe, 0x81,
	0x16, 0x7e, 0xd2, 0xf0, 0x87, 0x55, 0xce, 0xfc, 0x68, 0xd5, 0x93, 0xdc, 0x92, 0x9d, 0xc0, 0xad,
	0xd1, 0x3a, 0x52, 0x61, 0x2c, 0x82, 0x90, 0xe3, 0x70, 0x3d, 0xdd, 0xf4, 0xab, 0x62, 0xd3, 0x38,
	0x33, 0xd1, 0x83, 0x16, 0x9b, 0xb0, 0xe7, 0x70, 0x98, 0x03, 0x34, 0x81, 0x23, 0xdd, 0xcb, 0x4f,
	0x77, 0xf5, 0x42, 0xd3, 0x28, 0xb7, 0xf2, 0xff, 0xe3, 0x41, 0xdb, 0xe1, 0x1a, 0x7b, 0x00, 0x6d,
	0x2c, 0x78, 0x42, 0x72, 0xb5, 0x96, 0x36, 0xeb, 0xbb, 0x10, 0x86, 0xc3, 0xbb, 0x34, 0x5a, 0x67,
	0xc1, 0x66, 0x24, 0xcc, 0x40, 0xe3, 0x74, 0x15, 0x69, 0xa7, 0x9a, 0x78, 0xcb, 0x01, 0x9b, 0x0f,
	0x1a, 0x79, 0x3e, 0xc0, 0x4c, 0x76, 0x19, 0xaa, 0x2c, 0xda, 0x8c, 0x84, 0xa5, 0xfd, 0x7d, 0x98,
	0x04, 0xc3, 0x50, 0x8a, 0x99, 0xee, 0x8b, 0xa2, 0xae, 0x08, 0xea, 0xc2, 0x81, 0x75, 0x7f, 0xdf,
	0x14, 0x0e, 0x2c, 0xf7, 0x0f, 0xa0, 0x3d, 0x15, 0xc9, 0x2a, 0x54, 0xe1, 0x26, 0x54, 0x5f, 0x4c,
	0x35, 0x70, 0x21, 0xff, 0x2f, 0x75, 0xe8, 0xb8, 0xc1, 0xe1, 0x4c, 0xc2, 0x2b, 0x4c, 0xa2, 0xe4,
	0x86, 0xda, 0x55, 0x6e, 0xa8, 0xef, 0x76, 0x43, 0xa3, 0xec, 0x86, 0x2e, 0xd4, 0xce, 0x8f, 0xcd,
	0x82, 0x6b, 0xe7, 0xc7, 0xda, 0x2d, 0xe7, 0xc7, 0x59, 0xad, 0x3b, 0x3f, 0x46, 0x8b, 0xc1, 0xb9,
	0x59, 0x56, 0x6d, 0x70, 0xbe, 0xed, 0x8e, 0x83, 0xab, 0xdc, 0xd1, 0xda, 0xed, 0x0e, 0xd8, 0x72,
	0x07, 0xce, 0xf5, 0x55, 0x3a, 0xbb, 0xc8, 0xc3, 0xba, 0x35, 0xc9, 0x01, 0xf6, 0x0b, 0xe8, 0x9e,
	0x08, 0xae, 0xc2, 0x64, 0x9e, 0x7e, 0x5c, 0x08, 0x2e, 0x95, 0xa9, 0x7b, 0x25, 0x14, 0xf3, 0xec,
	0x89, 0x0c, 0xe7, 0x89, 0x58, 0xad, 0x4c, 0xf5, 0xcb, 0x64, 0xf6, 0x2b, 0xd8, 0x7b, 0x1a, 0x71,
	0x19, 0x9b, 0x90, 0x2a, 0x85, 0x07, 0x8f, 0x6c, 0x4c, 0x91, 0x95, 0xff, 0xc7, 0x3a, 0x74, 0x8b,
	0xc4, 0xc7, 0x95, 0x8d, 0xb9, 0xb2, 0xfb, 0xa3, 0xbf, 0x31, 0x4f, 0x8f, 0x25, 0x0e, 0x67, 0x4a,
	0xa3, 0x16, 0x9c, 0xbd, 0xac, 0x17, 0xf6, 0x92, 0x41, 0x63, 0x9a, 0x4a, 0x65, 0x36, 0x43, 0x7f,
	0xeb, 0xd3, 0xc1, 0x4c, 0x24, 0x5c, 0x86, 0xa9, 0xd9, 0x8d, 0x4c, 0x66, 0x7d, 0xd8, 0x1f, 0x2c,
	0x78, 0x92, 0x88, 0xc8, 0xec, 0x8b, 0x15, 0x99, 0x0f, 0x9d, 0xa9, 0xe2, 0x52, 0x59, 0x35, 0xed,
	0x52, 0x01, 0xc3, 0x93, 0xc2, 0xb3, 0x24, 0xb0, 0x16, 0xb4, 0x59, 0x0e, 0xe2, 0xf0, 0xa6, 0x55,
	0xe0, 0x0d, 0xee, 0xe0, 0x5a, 0xd9, 0xf3, 0x88, 0xfe, 0xce, 0x76, 0xb5, 0x5d, 0xdc, 0xd5, 0x91,
	0x10, 0xe8, 0x7f, 0x5d, 0xf0, 0x68, 0x4b, 0x5c, 0x48, 0xd7, 0xb6, 0x2c, 0x23, 0x62, 0x6d, 0xd3,
	0xbb, 0xf9, 0xc8, 0x9c, 0x91, 0x2a, 0x73, 0x5b, 0xc0, 0x15, 0x1f, 0x73, 0x19, 0xd3, 0xd9, 0xc9,
	0xff, 0xb3, 0x07, 0x07, 0x16, 0x42, 0x77, 0x0c, 0xc5, 0xc6, 0x39, 0x03, 0x5a, 0x11, 0x07, 0x1a,
	0x8a, 0xcd, 0xd9, 0xd2, 0x6e, 0x83, 0x16, 0x8c, 0xfd, 0x18, 0x3d, 0x5e, 0xcf, 0xec, 0x51, 0xc4,
	0xa9, 0x0f, 0xc5, 0x06, 0x4f, 0x5a, 0x09, 0x4e, 0x9d, 0xf6, 0xc3, 0x85, 0x8c, 0xc5, 0x98, 0xaf,
	0x56, 0x97, 0xa9, 0xb4, 0x27, 0x70, 0x17, 0xf2, 0x87, 0x70, 0x58, 0xca, 0x69, 0xec, 0x37, 0x99,
	0x47, 0xbd, 0xaa, 0x4a, 0xba, 0xd1, 0x3a, 0x4a, 0x7f, 0xc6, 0xd0, 0xff, 0x04, 0x6d, 0x07, 0xc6,
	0x1e, 0xce, 0xd7, 0x6a, 0xb9, 0x56, 0xd5, 0x3d, 0xa4, 0x5a, 0x67, 0x7a, 0x20, 0x43, 0xf6, 0x6b,
	0xd8, 0x3b, 0x4b, 0xb0, 0x45, 0xed, 0xba, 0x16, 0x64, 0xe7, 0x8f, 0xa0, 0xed, 0xa0, 0x58, 0xc7,
	0x0d, 0x23, 0xde, 0xf1, 0x68, 0x8d, 0x53, 0xaf, 0x6f, 0xd7, 0xf1, 0x99, 0x63, 0x31, 0x29, 0xd8,
	0xfb, 0xdf, 0x42, 0xc7, 0xd5, 0xba, 0xa4, 0xf5, 0x8a, 0xa4, 0xbd, 0x03, 0x7b, 0x34, 0x84, 0xd9,
	0x25, 0x6a, 0xff, 0xdf, 0x1a, 0xb4, 0xb2, 0xf0, 0xc3, 0x70, 0x78, 0xce, 0x57, 0x14, 0xa9, 0xe6,
	0x68, 0x65, 0x65, 0x24, 0xf4, 0x34, 0x4e, 0x2f, 0x04, 0x69, 0xa9, 0x13, 0x07, 0xd1, 0xfa, 0x45,
	0x3a, 0xbb, 0x20, 0xbd, 0xb9, 0xca, 0xe4, 0x88, 0x4e, 0x32, 0x82, 0x1b, 0xb5, 0x49, 0x88, 0x19,
	0x80, 0xda, 0x53, 0x1e, 0x45, 0xa4, 0xa5, 0xfd, 0xce, 0x01, 0xec, 0xfb, 0x05, 0xe6, 0x18, 0x52,
	0x9b, 0x4b, 0x4c, 0x8e, 0x60, 0x8a, 0xca, 0x72, 0x2b, 0xd9, 0x50, 0x48, 0x96, 0x50, 0xf6, 0x04,
	0x6e, 0xbf, 0x4a, 0x2f, 0x9d, 0xf4, 0x4d, 0xc6, 0x14, 0x9d, 0x55, 0x2a, 0xed, 0xcf, 0x94, 0xac,
	0x5a, 0xc6, 0x9f, 0x24, 0x62, 0x12, 0x78, 0xc6, 0x65, 0xcc, 0xa5, 0x59, 0x12, 0x05, 0x6c, 0x01,
	0x43, 0x1e, 0x0f, 0xd2, 0x28, 0xe2, 0x92, 0x4c, 0x28, 0x7e, 0x5d, 0xc8, 0xff, 0x57, 0x03, 0x5a,
	0xd9, 0xe9, 0x80, 0x75, 0xc0, 0x7b, 0x6d, 0x1c, 0xef, 0xbd, 0x46, 0x69, 0x6c, 0x1c, 0xed, 0x8d,
	0x51, 0x7a, 0x69, 0xdc, 0xea, 0xbd, 0x34, 0x05, 0xa4, 0x51, 0x2e, 0x20, 0x7b, 0xe5, 0x02, 0xd2,
	0xcc, 0x0a, 0x88, 0x0f, 0x9d, 0xb3, 0x28, 0x5a, 0xc7, 0x61, 0xc2, 0x75, 0xfd, 0x30, 0x49, 0xcb,
	0xc5, 0x6e, 0x58, 0x64, 0xba, 0x50, 0x1b, 0xbf, 0x30, 0xee, 0xa8, 0x8d, 0x5f, 0xe0, 0x2a, 0x9f,
	0x86, 0x52, 0x27, 0x5f, 0x2c, 0x92, 0xa6, 0xc0, 0x38, 0x10, 0x26, 0xb0, 0xd3, 0x28, 0xbd, 0xb4,
	0x09, 0x0c, 0xbf, 0xcb, 0xa5, 0xb5, 0xb3, 0x5d, 0x5a, 0x1f, 0x03, 0x33, 0xde, 0x74, 0x0d, 0x29,
	0x9b, 0x55, 0x68, 0x8a, 0x25, 0xb7, 0x5b, 0x2e, 0xb9, 0x0f, 0xe1, 0x90, 0x1c, 0x9f, 0xdb, 0x1c,
	0xd2, 0x95, 0xb9, 0x04, 0xe3, 0xcc, 0xde, 0xf1, 0x68, 0x23, 0x4c, 0x15, 0xe9, 0xd1, 0xcc, 0x1c,
	0x08, 0xf9, 0x88, 0x6b, 0x30, 0x06, 0x47, 0xc4, 0xc7, 0x1c, 0x41, 0x5f, 0xbf, 0xe7, 0x32, 0x7e,
	0xbb, 0x34, 0x16, 0x8c, 0x7c, 0xed, 0x62, 0xec, 0x97, 0x70, 0x34, 0x5d, 0xf0, 0x40, 0xbc, 0x59,
	0x88, 0xe9, 0x3a, 0x31, 0x86, 0xb7, 0xb5, 0xe1, 0xb6, 0x02, 0x47, 0x94, 0x3c, 0xb4, 0x66, 0x77,
	0x68, 0xc4, 0x1c, 0xf1, 0xff, 0xe9, 0xc1, 0x81, 0x3d, 0x99, 0x96, 0x17, 0xe0, 0x5d, 0xb7, 0x80,
	0xda, 0xb5, 0x0b, 0xa8, 0xdf, 0x74, 0x01, 0x8d, 0x9b, 0x2d, 0x60, 0x6f, 0x6b, 0x01, 0x7f, 0x6f,
	0x40, 0x2b, 0xbb, 0x73, 0xec, 0x3c, 0x8f, 0xdd, 0x83, 0x83, 0xf7, 0xa9, 0xbc, 0x18, 0xe5, 0x4f,
	0x3d, 0x99, 0x8c, 0x6d, 0xf0, 0xbc, 0xb1, 0xb0, 0xf5, 0xc6, 0x48, 0x48, 0x3e, 0x64, 0x89, 0xad,
	0xfb, 0xf8, 0x8d, 0xb6, 0x83, 0x34, 0x4a, 0xd7, 0xd2, 0x1e, 0x3a, 0x49, 0xd2, 0x35, 0x73, 0x26,
	0x12, 0x61, 0xe2, 0x86, 0x04, 0x24, 0x96, 0xfe, 0xd0, 0x85, 0x93, 0xe2, 0x26, 0x07, 0x28, 0xc8,
	0x13, 0x25, 0xd3, 0xc8, 0x79, 0x7c, 0x70, 0x21, 0x5c, 0xfb, 0x20, 0x5d, 0x27, 0x6a, 0x10, 0xa5,
	0x2b, 0x5b, 0xef, 0x1d, 0x04, 0xfb, 0xd7, 0xd2, 0xf9, 0x52, 0x24, 0x26, 0x7c, 0x72, 0x80, 0x52,
	0x90, 0xee, 0xcc, 0xc4, 0x8f, 0x15, 0xf3, 0xdb, 0x6b, 0xc7, 0xbd, 0xbd, 0xde, 0x85, 0xe6, 0x7b,
	0x7e, 0x21, 0xde, 0x2e, 0xed, 0x1b, 0x04, 0x49, 0x38, 0xcf, 0x71, 0x7a, 0x29, 0xe4, 0x48, 0xc4,
	0x78, 0x15, 0xa6, 0x00, 0x71, 0x21, 0xdc, 0xf5, 0x61, 0xfa, 0x3a, 0x55, 0x41, 0xb8, 0x52, 0x6b,
	0xf9, 0xc1, 0xc4, 0x47, 0x01, 0xc3, 0x1d, 0x18, 0x85, 0xb3, 0xd1, 0x7a, 0x15, 0xce, 0x4c, 0x64,
	0x64, 0x32, 0xce, 0x87, 0x14, 0x14, 0x11, 0x24, 0xe0, 0xea, 0xf4, 0x87, 0xf6, 0x0e, 0x45, 0x42,
	0x0e, 0x64, 0x77, 0xca, 0x67, 0x9f, 0x95, 0xe4, 0x9a, 0xff, 0xd5, 0x77, 0x4a, 0xad, 0x9f, 0x38,
	0xb6, 0xfe, 0xdf, 0x6a, 0x00, 0xb9, 0x0a, 0x73, 0x17, 0x91, 0xe4, 0xb9, 0xe4, 0x41, 0x98, 0x28,
	0xc3, 0x9c, 0x22, 0x88, 0x56, 0xa3, 0xf0, 0x33, 0xdd, 0x4c, 0xf5, 0x46, 0x9b, 0x07, 0xc3, 0x02,
	0x48, 0x8b, 0xfc, 0x3c, 0x99, 0x7f, 0x98, 0x5d, 0xda, 0x27, 0x03, 0x2b, 0x63, 0xad, 0x99, 0x8a,
	0x79, 0x2c, 0x12, 0x35, 0x0c, 0xe3, 0x38, 0x4c, 0xe6, 0x86, 0x58, 0x25, 0x94, 0x3d, 0x82, 0x1e,
	0x0d, 0xfd, 0x9a, 0x58, 0x8d, 0xc4, 0x24, 0xb2, 0x6d, 0xe1, 0x9a, 0x42, 0x5f, 0x66, 0x91, 0x78,
	0x13, 0xea, 0x0e, 0x9b, 0x86, 0x42, 0x39, 0x84, 0x5b, 0x33, 0xe1, 0x49, 0x90, 0xc6, 0xc6, 0xc4,
	0x64, 0x6f, 0x17, 0xcb, 0x68, 0x34, 0x4c, 0x2f, 0x6d, 0xe6, 0xce, 0x01, 0xff, 0xbb, 0x86, 0x71,
	0x17, 0x95, 0x9a, 0x8c, 0x3b, 0x5e, 0x35, 0x77, 0x6a, 0x57, 0x71, 0xa7, 0x7e, 0x3d, 0x77, 0x1a,
	0x15, 0xdc, 0x29, 0xc4, 0xd1, 0x5e, 0x39, 0x8e, 0xf2, 0x98, 0x6f, 0xee, 0x8c, 0xf9, 0xfd, 0x9d,
	0x31, 0x7f, 0x50, 0x19, 0xf3, 0xad, 0xca, 0x98, 0x87, 0x42, 0xcc, 0xbb, 0x8c, 0x6e, 0x97, 0x18,
	0xbd, 0x45, 0xaa, 0xce, 0x8d, 0x48, 0x75, 0xeb, 0x3a, 0x52, 0x75, 0xaf, 0x25, 0xd5, 0xe1, 0x8d,
	0x49, 0xd5, 0xbb, 0x19, 0xa9, 0x8e, 0xae, 0x27, 0x15, 0xbb, 0x8e, 0x54, 0xb7, 0xcb, 0xa4, 0xfa,
	0x53, 0x03, 0x6e, 0x57, 0x3c, 0xd8, 0xec, 0xcc, 0xdf, 0x4f, 0xe0, 0x76, 0xe9, 0xd1, 0xc5, 0x49,
	0xe5, 0x55, 0x2a, 0xf6, 0x7b, 0xe8, 0x97, 0x60, 0x5d, 0xa6, 0x96, 0x42, 0xd8, 0xb7, 0xfc, 0x9d,
	0x7a, 0xe4, 0xf8, 0xd3, 0x24, 0xbf, 0x7f, 0x93, 0xa0, 0x57, 0xb4, 0x08, 0xa3, 0x00, 0x6f, 0xb8,
	0x96, 0x85, 0x19, 0x80, 0x6d, 0xc8, 0xad, 0xa6, 0x02, 0x90, 0x2f, 0xbb, 0x50, 0x7b, 0xbb, 0xb1,
	0xb7, 0xf1, 0xb7, 0x1b, 0x3c, 0x6e, 0xbd, 0x17, 0x96, 0x74, 0xf8, 0x89, 0xde, 0x3e, 0x8d, 0x42,
	0x25, 0xe4, 0x44, 0xac, 0x84, 0x32, 0xc4, 0x73, 0x21, 0xcc, 0xe3, 0x53, 0xa1, 0x34, 0x2d, 0x89,
	0x80, 0x56, 0x34, 0x9a, 0x17, 0xeb, 0x38, 0xb4, 0x19, 0xde, 0x88, 0x3a, 0x62, 0x30, 0x30, 0xb5,
	0x97, 0x3a, 0x26, 0x62, 0x2c, 0x80, 0xfb, 0x37, 0x48, 0x93, 0x95, 0xe2, 0x09, 0x75, 0x4b, 0xb4,
	0x2b, 0x60, 0xae, 0xcd, 0x0b, 0xbc, 0x1b, 0x75, 0x8b, 0x36, 0x88, 0x21, 0x7f, 0xad, 0x7c, 0x2a,
	0xc5, 0x6a, 0x61, 0xc8, 0x57, 0x04, 0xd1, 0x4a, 0x7f, 0x9c, 0xf2, 0x84, 0xdc, 0x4f, 0xc4, 0x2b,
	0x82, 0xfe, 0x3f, 0x1a, 0x70, 0xa7, 0xea, 0xb5, 0x6d, 0x27, 0x25, 0xf0, 0x62, 0x3f, 0x3a, 0xfe,
	0xc6, 0x3e, 0xd9, 0xe2, 0xf7, 0x2e, 0x9a, 0xd4, 0xff, 0x3f, 0x9a, 0x34, 0xae, 0xa1, 0x09, 0x1e,
	0x86, 0xc2, 0x48, 0x09, 0xf9, 0x2a, 0xfc, 0x28, 0xec, 0xd1, 0x24, 0x47, 0x72, 0x1a, 0x35, 0x77,
	0xd2, 0x68, 0x7f, 0x27, 0x8d, 0x0e, 0xb6, 0x69, 0xd4, 0x2a, 0xd3, 0x08, 0x76, 0xd2, 0xa8, 0xbd,
	0x4d, 0xa3, 0xfb, 0x00, 0x67, 0x49, 0x90, 0xa6, 0x52, 0x6f, 0xb9, 0xf9, 0x05, 0x91, 0x23, 0xd8,
	0xc3, 0xf9, 0x5a, 0x65, 0x06, 0xc4, 0x09, 0x17, 0xc2, 0x64, 0x43, 0xf6, 0x48, 0xb1, 0x20, 0x54,
	0xf6, 0x2c, 0x50, 0x42, 0xf1, 0xc4, 0x6c, 0x9a, 0x65, 0x86, 0xe6, 0xc4, 0x5c, 0x82, 0xed, 0xed,
	0xa3, 0x97, 0xdf, 0x3e, 0xb4, 0x77, 0x8e, 0x53, 0xba, 0x71, 0x1e, 0x59, 0xef, 0x18, 0x00, 0xbd,
	0x73, 0xca, 0xd7, 0x91, 0x32, 0x19, 0x87, 0x04, 0xff, 0x23, 0xf4, 0xe8, 0x21, 0x3f, 0x08, 0x57,
	0xb3, 0x34, 0x49, 0x6e, 0xf2, 0x03, 0xf0, 0xaa, 0x9f, 0x4f, 0xf9, 0x83, 0x7d, 0xdd, 0x7d, 0xb0,
	0x7f, 0xf4, 0x01, 0x20, 0x7f, 0x90, 0x67, 0x5d, 0xf7, 0x11, 0xbe, 0xf7, 0x23, 0xd6, 0xc9, 0x5f,
	0xc6, 0x7b, 0x1e, 0xbb, 0x5b, 0xf5, 0x70, 0xdd, 0xab, 0xb1, 0x76, 0xf6, 0x4a, 0xdc, 0xab, 0xb3,
	0xa3, 0xd2, 0x4b, 0x6e, 0xaf, 0xf1, 0xa1, 0xa9, 0x7f, 0x6f, 0x7e, 0xfd, 0xbf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd6, 0x55, 0xd7, 0xd7, 0xf4, 0x1c, 0x00, 0x00,
}
