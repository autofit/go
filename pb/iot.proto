syntax = "proto3";

package pb;
//----------------------------------注册----------------------------
//Gateway->Server
//pub: s/v1/reg
//sub: s/v1/reg topic =reg payload=meet|data,初始key 加密后的meening+纳秒时间戳

message DeviceregReq {    
    uint32 DeviceType         = 1;//1网关，2终端
    string DeviceRegCode      = 2;//代表设备生产商家
    string DeviceId           = 3;//用uuid替代。
    string MsgSeq             = 4;//取用id服务器随机码
    string TempId             = 5;
}

//Server->Gateway
//pub: c/v1/reg/${DeviceId}
//sub: c/v1/reg/${DeviceId}//同上加密算法

message DeviceregResp {
    uint32 DeviceType        = 1;
    string DeviceId          = 2;//服务器产生的ID
    string BrokerAddr        = 3;//登陆服务器
    string MsgSeq            = 4;//上面的那个msgseg
    string ServerPublicKey   = 5;
    string PrivateKey        = 6;
    string Error             = 7;
}
//----------------------------------时间同步----------------------------
//登陆前进行时间校准
//Gateway->Server
//pub: s/v1/time/${DeviceId}
//sub: s/v1/time topic =reg payload=meet|data,初始key 加密后的meening+纳秒时间戳

//Server->Gateway
//pub: c/v1/time/${DeviceId}
//sub: c/v1/time/${DeviceId}//同上加密算法

//----------------------------------登录----------------------------
//Gateway->Server
//pub: s/v1/login
//sub: s/v1/login 
//topic data:椭圆加密的数据，数据内容如下：

message BaseCmd {   //替代meet 
    uint32 DeviceType   = 1;
    string DeviceId     = 2;
    string Ip           = 3;
    string MsgSeq       = 4;
    uint32 Mark         = 5;//0-单指令,1-指令序列,2-设备列表
    string Cmd          = 6;//指令集
    string DeviceList   = 7;//设备列表,服务器和网关沟通列表
    string Data         = 8;//返回查询数据，数据格式额外定义
    string ServerId     = 9;//客户服务器地址
    string UserName     = 10;//绑定时候的客户参数
    uint32 Error        = 11;//错误代码
    string BrokerAddr   = 12;//登陆服务器
    string GateId       = 13;//自己的ID
    string Token        = 14;
}
message GateData {
    string GateId               = 1;
    string Token                = 2;
    string Server               = 3;//服务器地址
    string BakServer            = 4; //备用服务器地址。
    repeated cmdSetList CmdSet  = 5;//指令集
    repeated deviceList Device  = 6;//服务器产生的ID
    
}
message cmdSetList{
    string Cmd                  = 1;//指令集
    repeated deviceList Device  = 2;//设备集合
}
message deviceList {
    string DeviceId                             = 1;
    string Name                                 = 2;
    string Category                             = 3;
    string Sleep                                = 4;//当前延时多久触发
    string MsgSeq                               = 5;
    digitalCtl DigitalCtl                       = 6;//解析GeneralCtl ,LightCtl,,AirConditioningCtl,FarmCtl MultimediaCtl
    generalList GeneralCtl                      = 7;        
    generalState GeneralState                   = 8;
    lightList LightCtl                          = 9;
    lightState LightState                       = 10;
    airConditioningList  AirConditioningCtl     = 11;
    airConditioningState AirConditioningState   = 12;
    farmList FarmCtl                            = 13;
    farmState FarmState                         = 14;
    multimediaList  MultimediaCtl               = 15;//会议系统、影音系统
    multimediaState MultimediaState             = 16;//会议系统、影音系统
}

message  generalList{
    string Temperature       = 1;//值表述方法:0~26
    string Volume            = 2;
    string Poslition         = 3;//位置定义,窗帘半开等。
    string Cmd               = 4;//open,close,query,pulse下发一个脉冲
    bool Switch              = 5;//开关量下发
    string WindDirection     = 6;
    uint32 Mode              = 7;//1、2、3
    uint32 Sensitivity       = 8;
}

message generalState {
    bool Switch                     = 1;
    string Temperature              = 2;
    string Volume                   = 3;
    string Poslition                = 4;
    string O2                       = 5;
    string CO2                      = 6;
    string CO                       = 7;//报警阀值
    string WindDirection            = 8;
    uint32 Mode                     = 9; 
    uint32 Sensitivity              = 10;
    string LockState                = 11;//门锁状态（开、关、虚掩）
    uint32 Beatingofheart           = 12;//心跳、脉搏
    string Brigness                 = 13;//亮度
    alarmList Alarm                 = 14;//警报状态
}
message multimediaList{//会议系统命令列表
    uint32 Path                     = 1; //control参数，1-2000
    bool Press                      = 2;//control 参数 true压住，false抬起
    bool Switch                     = 3;//power参数open
    bool Sort                       = 4;//power参数true 顺序开启，顺序关闭，false同时开启同时关闭。
    uint32 Scenario                 = 5;//audio参数，场景号1-12
    uint32 Channel                  = 6;//audio参数，通道：true输入通道  false输出通道
    uint32 StartChannel             = 7;//audio参数，开始通道 1-16
    uint32 EndChannel               = 8;//audio参数结，束通道 1-16
    uint32 Volume                   = 9; //audio参数，增益值  调整数值：+12.0 到 -72.0
    bool Mute                       = 10; //audio参数，true:静音 false 取消静音
    uint32 Mode                     = 11;//recordec参数，0-5 模式 0-5
    string MeetingName              = 12;//recordec参数，: 当前会议的名称
    uint32 State                    = 13;//recordec参数， 1:开启录制，0：关闭录制，2：暂停录制，3：继续录制
    dataParm Data                   = 14;
}
message dataParm{
    uint32 DevType                 = 1;// 4,
    string DevIp                   = 2;// "192.168.1.65",
    string DevPort                 = 3;//:80,
    string DevUsername             = 4;//: "admin",
    string DevPassword             = 5;//: "admin123",
}
message multimediaState{//会议系统状态定义
    volumeState Volume              = 1;
}
message volumeState{
    outputState Output              = 1;
    outputState Input               = 2;
}
message outputState{
   repeated channelValue ChannelValue  = 1;
}
message channelValue{
    uint32 Channel                  = 1;
    uint32 Value                    = 2;
}
message alarmList{
    uint32 GasAlarm                 = 1;//天然气报警
    uint32 SmokeAlarm               = 2;//烟雾报警
    uint32 ShockAlarm               = 3;//震动警报
    uint32 LeakAlarm                = 4;//漏水警报
    uint32 FallAlarm                = 5;//摔倒警报
    uint32 HeartAlarm               = 6;//心脏报警
    uint32 PoslitionAlarm           = 7;//越界报警
    uint32 LowTemperatureAlarm      = 8;//低温报警
    uint32 CoAlarm                  = 9;//co报警
    uint32 EarmarkAlarm             = 10;//耳标报警
    uint32 CollarAlarm              = 11;//项圈报警
     }
message farmState {
    string N                        = 1;
    string P                        = 2;
    string K                        = 3;
    string O2                       = 4;
    string CO2                      = 5;
    string CO                       = 6;
    string Illumination             = 7;//光照
    string WindDirection            = 8;//风向
    string PH                       = 9;
    string AirPressure              = 10;//气压
    string Flow                     = 11;//风、液体流量
    string Temperature              = 12;
    string EarmarkTemperature       = 13;//耳标温度
    string Poslition                = 14;//坐标
    string CollarPoslition          = 15;//项圈坐标
}
message farmList{
    string Switch                   = 1;//阀门开关
    string FlowSwitch               = 2;//通风开关
    string WarmUpSwitch             = 3;//增温开关
    string ShadeTheSunSwitch        = 4;//遮阳开关
    string rainSwitch               = 5;//防雨开关
}
message lightList{
    bool Switch                     = 1;//开关
    workMode WorkMode               = 2;//枚举类型工作模式
    uint32 Bright                   = 3;//亮度值
    uint32 Temp                     = 4;//冷暖值
    string Colour                   = 5;//彩光值
    sceneMode Scene                 = 6;//场景值
    string SceneData                = 7;//场景值
    string ControlData              = 8;//用于实时下发数据实现实时预览效果
    uint32 CountClose               = 9;//倒计时关闭
    uint32 CountOpen                = 10;//倒计时开启
    string Control                  = 11;//调节
    uint32 Sleep                    = 12;//睡眠模式
    uint32 WakeUp                   = 13;//唤醒模式
    uint32 PowerMemory              = 14;//断电记忆
    uint32 DoNotdisturb             = 15;//勿扰模式
    string  MicMusic                = 16;//麦克风音乐律动
    string  Music                   = 17;//音乐灯
    string MusicData                = 18;//通过APP内置律动算法实现灯光律动
    lightExtra LightExtra           = 19;


}
message lightExtra{
    uint32 SwitchGradint            = 1;//开关渐变色
    uint32 MixLightScene            = 2;//混光场景
    string MixRgbcw                 = 3;//混光
    string SegmentDimming           = 4;//分段调光
    bool SwitchNightLight           = 5;//夜灯开关
    string CycleTiming              = 6;//循环定时
    string RandomTiming             = 7;//随机定时
    uint32  CountDown               = 16;//倒计时剩余时间

}
message lightState{
    uint32 Sleep                    = 1;//睡眠模式
    uint32 WakeUp                   = 2;//唤醒模式
    uint32 PowerMemory              = 3;//断电记忆
    uint32 DoNotdisturb             = 4;//勿扰模式
    string SceneData                = 5;//场景值
    bool Switch                     = 6;//开关
    workMode WorkMode               = 7;//枚举类型工作模
    uint32 Bright                   = 8;//亮度值
    uint32 Temp                     = 9;//冷暖值
    string Colour                   = 10;//彩光值
    string  MicMusic                = 11;//麦克风音乐律动
    uint32 SwitchGradint            = 12;//开关渐变色
    uint32 MixLightScene            = 13;//混光场景
    string MixRgbcw                 = 14;//混光
    string SegmentDimming           = 15;//分段调光
    bool SwitchNightLight           = 16;//夜灯开关
    string CycleTiming              = 17;//循环定时
    string RandomTiming             = 18;//随机定时
    uint32  CountDown               = 19;//倒计时剩余时间
}
message airConditioningList {
    bool Switch                                         = 1;
    airConditioningMode AirConditioningMode             = 2;//工作模式，枚举类型
    airConditioningFlowSpeed AirConditioningFlowSpeed   = 3;//风速，枚举类型
    bool Anion                                          = 4;//负离子，可下发上报
    bool ChildLock                                      = 5;//童锁，可下发上报
    bool Light                                          = 6;//灯光
    bool Uv                                             = 7;//uv杀菌
    bool Wet                                            = 8;//加湿
    bool FliterReset                                    = 9;//滤芯复位
    uint32 SetTemp                                      = 10;//设置温度10-30
    uint32 SetHumi                                      = 11;//设置湿度30-80
    bool SleepMode                                      = 12;//睡眠模式0关闭睡眠模式，1开启睡眠模式
    bool ConstantTemp                                   = 13;//恒温0关闭1开启
    bool ConstantHume                                   = 14;//恒湿0关闭1开启
    bool ConstantFresh                                  = 15;//新风净化0关闭1开启
    uint32 FreshFanSpeed                                = 16;//0自动，1 1档。。。5表示5档 0-5
}
message airConditioningState{//空调系统
    bool Switch                                         = 1;
    uint32 PM25                                         = 2;//只上报0-999 单位ug/m3
    airConditioningMode AirConditioningMode             = 3;//工作模式，枚举类型
    airConditioningFlowSpeed AirConditioningFlowSpeed   = 4;//风速，枚举类型
    uint32 FilterLife                                   = 5;//滤芯寿命0-100%
    bool Anion                                          = 6;//负离子，可下发上报
    bool ChildLock                                      = 7;//童锁，可下发上报
    bool Light                                          = 8;//灯光
    bool Uv                                             = 9;//uv杀菌
    bool Wet                                            = 10;//加湿
    bool FliterReset                                    = 11;//滤芯复位0无1表示清除清洁提示
    uint32 IndoorTemp                                   = 12;//室内温度-20-50
    uint32 OutdoorTemp                                  = 13;//室外温度-20-50
    uint32 IndoorHumidity                               = 14;//室内湿度0-100%
    uint32 OutdoorHumidity                              = 15;//室外湿度0-100%
    uint32 CO2                                          = 16;//二氧化碳 单位ppm 数值范围0-5000
    uint32 Ch2oValue                                    = 17;//甲醛0-200 ug/m3
    string  Fault                                       = 18;//故障两种模式e1,e2
}
enum airConditioningMode{
     manual             = 0;
     auto               = 1;
     comfortable        = 2;
     msleep             = 3;
}
enum airConditioningFlowSpeed{
    fsleep           = 0;
    low              = 1;
    mid              = 2;
    high             = 3;
}
enum sceneMode{
    scene_1             = 0;
    scene_2             = 1;
    scene_3             = 2;
    scene_4             = 3;
    scene_5             = 4;
}
enum workMode{
    white               = 0;
    colour              = 1;
    scene               = 2;
    music               = 3;
}
enum digitalCtl {
   GeneralCtl           = 0;
   LightCtl             = 1;
   AirConditioningCtl   = 2;
   FarmCtl              = 3;
   MultimediaCtl        = 4;
}
//Server->Gateway
//pub: c/v1/login/${DeviceId}
//sub: c/v1/login/${DeviceId}





//--------------------------------设备断开遗嘱消息----------------
//Broker->Server
//pub: s/v1/disconn
//sub: s/v1/disconn

message DevicedisconnReq {
    uint32 DeviceType   = 1;
    string DeviceId     = 2;
    string MsgSeq       = 3;
}

//--------------------------------推送指令----------------------

//Server->Gateway
//pub: c/v1/sentcmd/${DeviceId} 0-单指令，1-指令序列
//sub: c/v1/sentcmd/${DeviceId}



//Gateway->Server
//pub: s/v1/sentcmd/${ServerId}
//sub: s/v1/sentcmd/${ServerId}


//--------------------------------查询-----------------------
//Server->Gateway
//pub: c/v1/query/${DeviceId}
//sub: c/v1/query/${DeviceId}


//Gateway->Server
//pub: s/v1/query/${ServerId}
//sub: s/v1/query/${ServerId}

//-------------------------------删除执行指令集-----------------------
//Server->Gateway
//pub: c/v1/delcmd/${DeviceId}
//sub: c/v1/delcmd/${DeviceId}



//Gateway->Server
//pub: s/v1/delCmd/${ServerId}
//sub: s/v1/delCmd/${ServerId}



//---------------------升级---------------------------


//Server->Gateway
//pub: c/v1/update/${DeviceId}
//sub: c/v1/update/${DeviceId}


//Gateway->Server
//pub: s/v1/update/${ServerId}
//sub: s/v1/update/${ServerId}


//--------------------------------服务器查询设备列表-----------------------  
//Server->Gateway
//pub: c/v1/query_device_list/${DeviceId}
//sub: c/v1/query_device_list/${DeviceId}



//Gateway->Server
//pub: s/v1/query_device_list/${ServerId}
//sub: s/v1/query_device_list/${ServerId}


//--------------------------------设备绑定-----------------------

//Server->Gateway
//pub: c/v1/bind/${DeviceId}
//sub: c/v1/bind/${DeviceId}


//Gateway->Server
//pub: s/v1/bind/${ServerId}
//sub: s/v1/bind/${ServerId}
//删除注册文件，重启基站

//--------------------------------设备解除绑定-----------------------

//Server->Gateway
//pub: c/v1/unbind/${DeviceId}
//sub: c/v1/unbind/${DeviceId}


//Gateway->Server
//pub: s/v1/unbind/${ServerId}
//sub: s/v1/unbind/${ServerId}




