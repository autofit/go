// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iot.proto

#include "iot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace pb {
class DeviceregReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceregReq>
      _instance;
} _DeviceregReq_default_instance_;
class DeviceregRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceregResp>
      _instance;
} _DeviceregResp_default_instance_;
class BaseCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BaseCmd>
      _instance;
} _BaseCmd_default_instance_;
class GateDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateData>
      _instance;
} _GateData_default_instance_;
class cmdSetListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cmdSetList>
      _instance;
} _cmdSetList_default_instance_;
class deviceListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<deviceList>
      _instance;
} _deviceList_default_instance_;
class generalListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<generalList>
      _instance;
} _generalList_default_instance_;
class generalStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<generalState>
      _instance;
} _generalState_default_instance_;
class multimediaListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<multimediaList>
      _instance;
} _multimediaList_default_instance_;
class dataParmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dataParm>
      _instance;
} _dataParm_default_instance_;
class multimediaStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<multimediaState>
      _instance;
} _multimediaState_default_instance_;
class volumeStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<volumeState>
      _instance;
} _volumeState_default_instance_;
class outputStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<outputState>
      _instance;
} _outputState_default_instance_;
class channelValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<channelValue>
      _instance;
} _channelValue_default_instance_;
class alarmListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<alarmList>
      _instance;
} _alarmList_default_instance_;
class farmStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<farmState>
      _instance;
} _farmState_default_instance_;
class farmListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<farmList>
      _instance;
} _farmList_default_instance_;
class lightListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<lightList>
      _instance;
} _lightList_default_instance_;
class lightExtraDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<lightExtra>
      _instance;
} _lightExtra_default_instance_;
class lightStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<lightState>
      _instance;
} _lightState_default_instance_;
class airConditioningDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<airConditioning>
      _instance;
} _airConditioning_default_instance_;
class airConditioningListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<airConditioningList>
      _instance;
} _airConditioningList_default_instance_;
class airConditioningStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<airConditioningState>
      _instance;
} _airConditioningState_default_instance_;
class DevicedisconnReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DevicedisconnReq>
      _instance;
} _DevicedisconnReq_default_instance_;
}  // namespace pb
namespace protobuf_iot_2eproto {
void InitDefaultsDeviceregReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_DeviceregReq_default_instance_;
    new (ptr) ::pb::DeviceregReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DeviceregReq::InitAsDefaultInstance();
}

void InitDefaultsDeviceregReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceregReqImpl);
}

void InitDefaultsDeviceregRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_DeviceregResp_default_instance_;
    new (ptr) ::pb::DeviceregResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DeviceregResp::InitAsDefaultInstance();
}

void InitDefaultsDeviceregResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceregRespImpl);
}

void InitDefaultsBaseCmdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_BaseCmd_default_instance_;
    new (ptr) ::pb::BaseCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::BaseCmd::InitAsDefaultInstance();
}

void InitDefaultsBaseCmd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBaseCmdImpl);
}

void InitDefaultsGateDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultscmdSetList();
  protobuf_iot_2eproto::InitDefaultsdeviceList();
  {
    void* ptr = &::pb::_GateData_default_instance_;
    new (ptr) ::pb::GateData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GateData::InitAsDefaultInstance();
}

void InitDefaultsGateData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGateDataImpl);
}

void InitDefaultscmdSetListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsdeviceList();
  {
    void* ptr = &::pb::_cmdSetList_default_instance_;
    new (ptr) ::pb::cmdSetList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::cmdSetList::InitAsDefaultInstance();
}

void InitDefaultscmdSetList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultscmdSetListImpl);
}

void InitDefaultsdeviceListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsgeneralList();
  protobuf_iot_2eproto::InitDefaultsgeneralState();
  protobuf_iot_2eproto::InitDefaultslightList();
  protobuf_iot_2eproto::InitDefaultslightState();
  protobuf_iot_2eproto::InitDefaultsairConditioningList();
  protobuf_iot_2eproto::InitDefaultsairConditioningState();
  protobuf_iot_2eproto::InitDefaultsfarmList();
  protobuf_iot_2eproto::InitDefaultsfarmState();
  protobuf_iot_2eproto::InitDefaultsmultimediaList();
  protobuf_iot_2eproto::InitDefaultsmultimediaState();
  {
    void* ptr = &::pb::_deviceList_default_instance_;
    new (ptr) ::pb::deviceList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::deviceList::InitAsDefaultInstance();
}

void InitDefaultsdeviceList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdeviceListImpl);
}

void InitDefaultsgeneralListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_generalList_default_instance_;
    new (ptr) ::pb::generalList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::generalList::InitAsDefaultInstance();
}

void InitDefaultsgeneralList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsgeneralListImpl);
}

void InitDefaultsgeneralStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsalarmList();
  {
    void* ptr = &::pb::_generalState_default_instance_;
    new (ptr) ::pb::generalState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::generalState::InitAsDefaultInstance();
}

void InitDefaultsgeneralState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsgeneralStateImpl);
}

void InitDefaultsmultimediaListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsdataParm();
  {
    void* ptr = &::pb::_multimediaList_default_instance_;
    new (ptr) ::pb::multimediaList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::multimediaList::InitAsDefaultInstance();
}

void InitDefaultsmultimediaList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmultimediaListImpl);
}

void InitDefaultsdataParmImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_dataParm_default_instance_;
    new (ptr) ::pb::dataParm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::dataParm::InitAsDefaultInstance();
}

void InitDefaultsdataParm() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdataParmImpl);
}

void InitDefaultsmultimediaStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsvolumeState();
  {
    void* ptr = &::pb::_multimediaState_default_instance_;
    new (ptr) ::pb::multimediaState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::multimediaState::InitAsDefaultInstance();
}

void InitDefaultsmultimediaState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmultimediaStateImpl);
}

void InitDefaultsvolumeStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultsoutputState();
  {
    void* ptr = &::pb::_volumeState_default_instance_;
    new (ptr) ::pb::volumeState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::volumeState::InitAsDefaultInstance();
}

void InitDefaultsvolumeState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsvolumeStateImpl);
}

void InitDefaultsoutputStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultschannelValue();
  {
    void* ptr = &::pb::_outputState_default_instance_;
    new (ptr) ::pb::outputState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::outputState::InitAsDefaultInstance();
}

void InitDefaultsoutputState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutputStateImpl);
}

void InitDefaultschannelValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_channelValue_default_instance_;
    new (ptr) ::pb::channelValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::channelValue::InitAsDefaultInstance();
}

void InitDefaultschannelValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultschannelValueImpl);
}

void InitDefaultsalarmListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_alarmList_default_instance_;
    new (ptr) ::pb::alarmList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::alarmList::InitAsDefaultInstance();
}

void InitDefaultsalarmList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsalarmListImpl);
}

void InitDefaultsfarmStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_farmState_default_instance_;
    new (ptr) ::pb::farmState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::farmState::InitAsDefaultInstance();
}

void InitDefaultsfarmState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfarmStateImpl);
}

void InitDefaultsfarmListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_farmList_default_instance_;
    new (ptr) ::pb::farmList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::farmList::InitAsDefaultInstance();
}

void InitDefaultsfarmList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfarmListImpl);
}

void InitDefaultslightListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iot_2eproto::InitDefaultslightExtra();
  {
    void* ptr = &::pb::_lightList_default_instance_;
    new (ptr) ::pb::lightList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lightList::InitAsDefaultInstance();
}

void InitDefaultslightList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslightListImpl);
}

void InitDefaultslightExtraImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_lightExtra_default_instance_;
    new (ptr) ::pb::lightExtra();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lightExtra::InitAsDefaultInstance();
}

void InitDefaultslightExtra() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslightExtraImpl);
}

void InitDefaultslightStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_lightState_default_instance_;
    new (ptr) ::pb::lightState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::lightState::InitAsDefaultInstance();
}

void InitDefaultslightState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultslightStateImpl);
}

void InitDefaultsairConditioningImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_airConditioning_default_instance_;
    new (ptr) ::pb::airConditioning();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::airConditioning::InitAsDefaultInstance();
}

void InitDefaultsairConditioning() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsairConditioningImpl);
}

void InitDefaultsairConditioningListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_airConditioningList_default_instance_;
    new (ptr) ::pb::airConditioningList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::airConditioningList::InitAsDefaultInstance();
}

void InitDefaultsairConditioningList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsairConditioningListImpl);
}

void InitDefaultsairConditioningStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_airConditioningState_default_instance_;
    new (ptr) ::pb::airConditioningState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::airConditioningState::InitAsDefaultInstance();
}

void InitDefaultsairConditioningState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsairConditioningStateImpl);
}

void InitDefaultsDevicedisconnReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_DevicedisconnReq_default_instance_;
    new (ptr) ::pb::DevicedisconnReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DevicedisconnReq::InitAsDefaultInstance();
}

void InitDefaultsDevicedisconnReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDevicedisconnReqImpl);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, deviceregcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, msgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregReq, tempid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, brokeraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, msgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, serverpublickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, privatekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DeviceregResp, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, msgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, mark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, devicelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, brokeraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::BaseCmd, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, bakserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, cmdset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateData, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::cmdSetList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::cmdSetList, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::cmdSetList, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, sleep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, msgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, digitalctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, generalctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, generalstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, lightctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, lightstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, airconditioningctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, airconditioningstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, farmctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, farmstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, multimediactl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::deviceList, multimediastate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, poslition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, winddirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalList, sensitivity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, poslition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, o2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, co2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, co_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, winddirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, sensitivity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, lockstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, beatingofheart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, brigness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::generalState, alarm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, press_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, sort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, scenario_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, startchannel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, endchannel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, mute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, meetingname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaList, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, devtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, devip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, devport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, devusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::dataParm, devpassword_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::multimediaState, volume_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::volumeState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::volumeState, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::volumeState, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::outputState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::outputState, channelvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::channelValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::channelValue, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::channelValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, gasalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, smokealarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, shockalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, leakalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, fallalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, heartalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, poslitionalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, lowtemperaturealarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, coalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, earmarkalarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::alarmList, collaralarm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, o2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, co2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, co_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, illumination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, winddirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, ph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, airpressure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, flow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, earmarktemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, poslition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmState, collarposlition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, flowswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, warmupswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, shadethesunswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::farmList, rainswitch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, workmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, bright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, countclose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, countopen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, sleep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, wakeup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, powermemory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, donotdisturb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, micmusic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, music_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightList, lightextra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, switchgradint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, mixlightscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, mixrgbcw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, segmentdimming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, switchnightlight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, cycletiming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightExtra, randomtiming_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::lightState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, airconditioningmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, airconditioningflowspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, anion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, childlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, uv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, wet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, fliterreset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, settemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, sethumi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, sleepmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, constanttemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, constanthume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, constantfresh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningList, freshfanspeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, switch__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, pm25_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, airconditioningmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, airconditioningflowspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, filterlife_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, anion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, childlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, uv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, wet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, fliterreset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, indoortemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, outdoortemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, indoorhumidity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, outdoorhumidity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, co2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, ch2ovalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::airConditioningState, fault_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DevicedisconnReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DevicedisconnReq, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DevicedisconnReq, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DevicedisconnReq, msgseq_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::DeviceregReq)},
  { 10, -1, sizeof(::pb::DeviceregResp)},
  { 22, -1, sizeof(::pb::BaseCmd)},
  { 41, -1, sizeof(::pb::GateData)},
  { 52, -1, sizeof(::pb::cmdSetList)},
  { 59, -1, sizeof(::pb::deviceList)},
  { 80, -1, sizeof(::pb::generalList)},
  { 93, -1, sizeof(::pb::generalState)},
  { 112, -1, sizeof(::pb::multimediaList)},
  { 131, -1, sizeof(::pb::dataParm)},
  { 141, -1, sizeof(::pb::multimediaState)},
  { 147, -1, sizeof(::pb::volumeState)},
  { 154, -1, sizeof(::pb::outputState)},
  { 160, -1, sizeof(::pb::channelValue)},
  { 167, -1, sizeof(::pb::alarmList)},
  { 183, -1, sizeof(::pb::farmState)},
  { 203, -1, sizeof(::pb::farmList)},
  { 213, -1, sizeof(::pb::lightList)},
  { 234, -1, sizeof(::pb::lightExtra)},
  { 246, -1, sizeof(::pb::lightState)},
  { 251, -1, sizeof(::pb::airConditioning)},
  { 256, -1, sizeof(::pb::airConditioningList)},
  { 277, -1, sizeof(::pb::airConditioningState)},
  { 300, -1, sizeof(::pb::DevicedisconnReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DeviceregReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DeviceregResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_BaseCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GateData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_cmdSetList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_deviceList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_generalList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_generalState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_multimediaList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_dataParm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_multimediaState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_volumeState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_outputState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_channelValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_alarmList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_farmState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_farmList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_lightList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_lightExtra_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_lightState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_airConditioning_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_airConditioningList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_airConditioningState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DevicedisconnReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "iot.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tiot.proto\022\002pb\"k\n\014DeviceregReq\022\022\n\nDevic"
      "eType\030\001 \001(\r\022\025\n\rDeviceRegCode\030\002 \001(\t\022\020\n\010De"
      "viceId\030\003 \001(\t\022\016\n\006MsgSeq\030\004 \001(\t\022\016\n\006TempId\030\005"
      " \001(\t\"\225\001\n\rDeviceregResp\022\022\n\nDeviceType\030\001 \001"
      "(\r\022\020\n\010DeviceId\030\002 \001(\t\022\022\n\nBrokerAddr\030\003 \001(\t"
      "\022\016\n\006MsgSeq\030\004 \001(\t\022\027\n\017ServerPublicKey\030\005 \001("
      "\t\022\022\n\nPrivateKey\030\006 \001(\t\022\r\n\005Error\030\007 \001(\t\"\356\001\n"
      "\007BaseCmd\022\022\n\nDeviceType\030\001 \001(\r\022\020\n\010DeviceId"
      "\030\002 \001(\t\022\n\n\002Ip\030\003 \001(\t\022\016\n\006MsgSeq\030\004 \001(\t\022\014\n\004Ma"
      "rk\030\005 \001(\r\022\013\n\003Cmd\030\006 \001(\t\022\022\n\nDeviceList\030\007 \001("
      "\t\022\014\n\004Data\030\010 \001(\t\022\020\n\010ServerId\030\t \001(\t\022\020\n\010Use"
      "rName\030\n \001(\t\022\r\n\005Error\030\013 \001(\r\022\022\n\nBrokerAddr"
      "\030\014 \001(\t\022\016\n\006GateId\030\r \001(\t\022\r\n\005Token\030\016 \001(\t\"\214\001"
      "\n\010GateData\022\016\n\006GateId\030\001 \001(\t\022\r\n\005Token\030\002 \001("
      "\t\022\016\n\006Server\030\003 \001(\t\022\021\n\tBakServer\030\004 \001(\t\022\036\n\006"
      "CmdSet\030\005 \003(\0132\016.pb.cmdSetList\022\036\n\006Device\030\006"
      " \003(\0132\016.pb.deviceList\"9\n\ncmdSetList\022\013\n\003Cm"
      "d\030\001 \001(\t\022\036\n\006Device\030\002 \003(\0132\016.pb.deviceList\""
      "\232\004\n\ndeviceList\022\020\n\010DeviceId\030\001 \001(\t\022\014\n\004Name"
      "\030\002 \001(\t\022\020\n\010Category\030\003 \001(\t\022\r\n\005Sleep\030\004 \001(\t\022"
      "\016\n\006MsgSeq\030\005 \001(\t\022\"\n\nDigitalCtl\030\006 \001(\0162\016.pb"
      ".digitalCtl\022#\n\nGeneralCtl\030\007 \001(\0132\017.pb.gen"
      "eralList\022&\n\014GeneralState\030\010 \001(\0132\020.pb.gene"
      "ralState\022\037\n\010LightCtl\030\t \001(\0132\r.pb.lightLis"
      "t\022\"\n\nLightState\030\n \001(\0132\016.pb.lightState\0223\n"
      "\022AirConditioningCtl\030\013 \001(\0132\027.pb.airCondit"
      "ioningList\0226\n\024AirConditioningState\030\014 \001(\013"
      "2\030.pb.airConditioningState\022\035\n\007FarmCtl\030\r "
      "\001(\0132\014.pb.farmList\022 \n\tFarmState\030\016 \001(\0132\r.p"
      "b.farmState\022)\n\rMultimediaCtl\030\017 \001(\0132\022.pb."
      "multimediaList\022,\n\017MultimediaState\030\020 \001(\0132"
      "\023.pb.multimediaState\"\234\001\n\013generalList\022\023\n\013"
      "temperature\030\001 \001(\t\022\016\n\006Volume\030\002 \001(\t\022\021\n\tPos"
      "lition\030\003 \001(\t\022\013\n\003Cmd\030\004 \001(\t\022\016\n\006Switch\030\005 \001("
      "\010\022\025\n\rWindDirection\030\006 \001(\t\022\014\n\004Mode\030\007 \001(\r\022\023"
      "\n\013Sensitivity\030\010 \001(\r\"\220\002\n\014generalState\022\016\n\006"
      "Switch\030\001 \001(\010\022\023\n\013Temperature\030\002 \001(\t\022\016\n\006Vol"
      "ume\030\003 \001(\t\022\021\n\tPoslition\030\004 \001(\t\022\n\n\002O2\030\005 \001(\t"
      "\022\013\n\003CO2\030\006 \001(\t\022\n\n\002CO\030\007 \001(\t\022\025\n\rWindDirecti"
      "on\030\010 \001(\t\022\014\n\004Mode\030\t \001(\r\022\023\n\013Sensitivity\030\n "
      "\001(\r\022\021\n\tLockState\030\013 \001(\t\022\026\n\016Beatingofheart"
      "\030\014 \001(\r\022\020\n\010Brigness\030\r \001(\t\022\034\n\005Alarm\030\016 \001(\0132"
      "\r.pb.alarmList\"\204\002\n\016multimediaList\022\014\n\004Pat"
      "h\030\001 \001(\r\022\r\n\005Press\030\002 \001(\010\022\016\n\006Switch\030\003 \001(\010\022\014"
      "\n\004Sort\030\004 \001(\010\022\020\n\010Scenario\030\005 \001(\r\022\017\n\007Channe"
      "l\030\006 \001(\r\022\024\n\014StartChannel\030\007 \001(\r\022\022\n\nEndChan"
      "nel\030\010 \001(\r\022\016\n\006Volume\030\t \001(\r\022\014\n\004Mute\030\n \001(\010\022"
      "\014\n\004Mode\030\013 \001(\r\022\023\n\013MeetingName\030\014 \001(\t\022\r\n\005St"
      "ate\030\r \001(\r\022\032\n\004Data\030\016 \001(\0132\014.pb.dataParm\"e\n"
      "\010dataParm\022\017\n\007DevType\030\001 \001(\r\022\r\n\005DevIp\030\002 \001("
      "\t\022\017\n\007DevPort\030\003 \001(\t\022\023\n\013DevUsername\030\004 \001(\t\022"
      "\023\n\013DevPassword\030\005 \001(\t\"2\n\017multimediaState\022"
      "\037\n\006Volume\030\001 \001(\0132\017.pb.volumeState\"N\n\013volu"
      "meState\022\037\n\006Output\030\001 \001(\0132\017.pb.outputState"
      "\022\036\n\005Input\030\002 \001(\0132\017.pb.outputState\"5\n\013outp"
      "utState\022&\n\014ChannelValue\030\001 \003(\0132\020.pb.chann"
      "elValue\".\n\014channelValue\022\017\n\007Channel\030\001 \001(\r"
      "\022\r\n\005Value\030\002 \001(\r\"\360\001\n\talarmList\022\020\n\010GasAlar"
      "m\030\001 \001(\r\022\022\n\nSmokeAlarm\030\002 \001(\r\022\022\n\nShockAlar"
      "m\030\003 \001(\r\022\021\n\tLeakAlarm\030\004 \001(\r\022\021\n\tFallAlarm\030"
      "\005 \001(\r\022\022\n\nHeartAlarm\030\006 \001(\r\022\026\n\016PoslitionAl"
      "arm\030\007 \001(\r\022\033\n\023LowTemperatureAlarm\030\010 \001(\r\022\017"
      "\n\007CoAlarm\030\t \001(\r\022\024\n\014EarmarkAlarm\030\n \001(\r\022\023\n"
      "\013CollarAlarm\030\013 \001(\r\"\212\002\n\tfarmState\022\t\n\001N\030\001 "
      "\001(\t\022\t\n\001P\030\002 \001(\t\022\t\n\001K\030\003 \001(\t\022\n\n\002O2\030\004 \001(\t\022\013\n"
      "\003CO2\030\005 \001(\t\022\n\n\002CO\030\006 \001(\t\022\024\n\014Illumination\030\007"
      " \001(\t\022\025\n\rWindDirection\030\010 \001(\t\022\n\n\002PH\030\t \001(\t\022"
      "\023\n\013AirPressure\030\n \001(\t\022\014\n\004Flow\030\013 \001(\t\022\023\n\013Te"
      "mperature\030\014 \001(\t\022\032\n\022EarmarkTemperature\030\r "
      "\001(\t\022\021\n\tPoslition\030\016 \001(\t\022\027\n\017CollarPoslitio"
      "n\030\017 \001(\t\"s\n\010farmList\022\016\n\006Switch\030\001 \001(\t\022\022\n\nF"
      "lowSwitch\030\002 \001(\t\022\024\n\014WarmUpSwitch\030\003 \001(\t\022\031\n"
      "\021ShadeTheSunSwitch\030\004 \001(\t\022\022\n\nrainSwitch\030\005"
      " \001(\t\"\316\002\n\tlightList\022\016\n\006Switch\030\001 \001(\010\022\036\n\010Wo"
      "rkMode\030\002 \003(\0162\014.pb.workMode\022\016\n\006Bright\030\003 \001"
      "(\r\022\014\n\004Temp\030\004 \001(\r\022\016\n\006Colour\030\005 \001(\t\022\034\n\005Scen"
      "e\030\006 \003(\0162\r.pb.sceneMode\022\022\n\nCountClose\030\007 \001"
      "(\r\022\021\n\tCountOpen\030\010 \001(\r\022\017\n\007Control\030\t \001(\t\022\r"
      "\n\005Sleep\030\n \001(\r\022\016\n\006WakeUp\030\013 \001(\r\022\023\n\013PowerMe"
      "mory\030\014 \001(\r\022\024\n\014DoNotdisturb\030\r \001(\r\022\020\n\010MicM"
      "usic\030\016 \001(\t\022\r\n\005Music\030\017 \001(\t\022\"\n\nlightExtra\030"
      "\020 \001(\0132\016.pb.lightExtra\"\251\001\n\nlightExtra\022\025\n\r"
      "SwitchGradint\030\001 \001(\r\022\025\n\rMixLightScene\030\002 \001"
      "(\r\022\020\n\010MixRgbcw\030\003 \001(\t\022\026\n\016SegmentDimming\030\004"
      " \001(\t\022\030\n\020SwitchNightLight\030\005 \001(\010\022\023\n\013CycleT"
      "iming\030\006 \001(\t\022\024\n\014RandomTiming\030\007 \001(\t\"\014\n\nlig"
      "htState\"\021\n\017airConditioning\"\211\003\n\023airCondit"
      "ioningList\022\016\n\006Switch\030\001 \001(\010\0224\n\023AirConditi"
      "oningMode\030\002 \001(\0162\027.pb.airConditioningMode"
      "\022>\n\030AirConditioningFlowSpeed\030\003 \001(\0162\034.pb."
      "airConditioningFlowSpeed\022\r\n\005Anion\030\004 \001(\010\022"
      "\021\n\tChildLock\030\005 \001(\010\022\r\n\005Light\030\006 \001(\010\022\n\n\002Uv\030"
      "\007 \001(\010\022\013\n\003Wet\030\010 \001(\010\022\023\n\013FliterReset\030\t \001(\010\022"
      "\017\n\007SetTemp\030\n \001(\r\022\017\n\007SetHumi\030\013 \001(\r\022\021\n\tSle"
      "epMode\030\014 \001(\010\022\024\n\014ConstantTemp\030\r \001(\010\022\024\n\014Co"
      "nstantHume\030\016 \001(\010\022\025\n\rConstantFresh\030\017 \001(\010\022"
      "\025\n\rFreshFanSpeed\030\020 \001(\r\"\246\003\n\024airConditioni"
      "ngState\022\016\n\006Switch\030\001 \001(\010\022\014\n\004PM25\030\002 \001(\r\0224\n"
      "\023AirConditioningMode\030\003 \001(\0162\027.pb.airCondi"
      "tioningMode\022>\n\030AirConditioningFlowSpeed\030"
      "\004 \001(\0162\034.pb.airConditioningFlowSpeed\022\022\n\nF"
      "ilterLife\030\005 \001(\r\022\r\n\005Anion\030\006 \001(\010\022\021\n\tChildL"
      "ock\030\007 \001(\010\022\r\n\005Light\030\010 \001(\010\022\n\n\002Uv\030\t \001(\010\022\013\n\003"
      "Wet\030\n \001(\010\022\023\n\013FliterReset\030\013 \001(\010\022\022\n\nIndoor"
      "Temp\030\014 \001(\r\022\023\n\013OutdoorTemp\030\r \001(\r\022\026\n\016Indoo"
      "rHumidity\030\016 \001(\r\022\027\n\017OutdoorHumidity\030\017 \001(\r"
      "\022\013\n\003CO2\030\020 \001(\r\022\021\n\tCh2oValue\030\021 \001(\r\022\r\n\005Faul"
      "t\030\022 \001(\t\"H\n\020DevicedisconnReq\022\022\n\nDeviceTyp"
      "e\030\001 \001(\r\022\020\n\010DeviceId\030\002 \001(\t\022\016\n\006MsgSeq\030\003 \001("
      "\t*H\n\023airConditioningMode\022\n\n\006manual\020\000\022\010\n\004"
      "auto\020\001\022\017\n\013comfortable\020\002\022\n\n\006msleep\020\003*B\n\030a"
      "irConditioningFlowSpeed\022\n\n\006fsleep\020\000\022\007\n\003l"
      "ow\020\001\022\007\n\003mid\020\002\022\010\n\004high\020\003*L\n\tsceneMode\022\013\n\007"
      "scene_1\020\000\022\013\n\007scene_2\020\001\022\013\n\007scene_3\020\002\022\013\n\007s"
      "cene_4\020\003\022\013\n\007scene_5\020\004*7\n\010workMode\022\t\n\005whi"
      "te\020\000\022\n\n\006colour\020\001\022\t\n\005scene\020\002\022\t\n\005music\020\003*b"
      "\n\ndigitalCtl\022\016\n\nGeneralCtl\020\000\022\014\n\010LightCtl"
      "\020\001\022\026\n\022AirConditioningCtl\020\002\022\013\n\007FarmCtl\020\003\022"
      "\021\n\rMultimediaCtl\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4746);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iot.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_iot_2eproto
namespace pb {
const ::google::protobuf::EnumDescriptor* airConditioningMode_descriptor() {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iot_2eproto::file_level_enum_descriptors[0];
}
bool airConditioningMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* airConditioningFlowSpeed_descriptor() {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iot_2eproto::file_level_enum_descriptors[1];
}
bool airConditioningFlowSpeed_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* sceneMode_descriptor() {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iot_2eproto::file_level_enum_descriptors[2];
}
bool sceneMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* workMode_descriptor() {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iot_2eproto::file_level_enum_descriptors[3];
}
bool workMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* digitalCtl_descriptor() {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iot_2eproto::file_level_enum_descriptors[4];
}
bool digitalCtl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DeviceregReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceregReq::kDeviceTypeFieldNumber;
const int DeviceregReq::kDeviceRegCodeFieldNumber;
const int DeviceregReq::kDeviceIdFieldNumber;
const int DeviceregReq::kMsgSeqFieldNumber;
const int DeviceregReq::kTempIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceregReq::DeviceregReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsDeviceregReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DeviceregReq)
}
DeviceregReq::DeviceregReq(const DeviceregReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceregcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceregcode().size() > 0) {
    deviceregcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceregcode_);
  }
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgseq().size() > 0) {
    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  tempid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tempid().size() > 0) {
    tempid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tempid_);
  }
  devicetype_ = from.devicetype_;
  // @@protoc_insertion_point(copy_constructor:pb.DeviceregReq)
}

void DeviceregReq::SharedCtor() {
  deviceregcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tempid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _cached_size_ = 0;
}

DeviceregReq::~DeviceregReq() {
  // @@protoc_insertion_point(destructor:pb.DeviceregReq)
  SharedDtor();
}

void DeviceregReq::SharedDtor() {
  deviceregcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tempid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceregReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceregReq::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceregReq& DeviceregReq::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsDeviceregReq();
  return *internal_default_instance();
}

DeviceregReq* DeviceregReq::New(::google::protobuf::Arena* arena) const {
  DeviceregReq* n = new DeviceregReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceregReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DeviceregReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceregcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tempid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool DeviceregReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DeviceregReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DeviceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceRegCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceregcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceregcode().data(), static_cast<int>(this->deviceregcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregReq.DeviceRegCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregReq.DeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgSeq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgseq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgseq().data(), static_cast<int>(this->msgseq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregReq.MsgSeq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TempId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tempid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tempid().data(), static_cast<int>(this->tempid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregReq.TempId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DeviceregReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DeviceregReq)
  return false;
#undef DO_
}

void DeviceregReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DeviceregReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->devicetype(), output);
  }

  // string DeviceRegCode = 2;
  if (this->deviceregcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceregcode().data(), static_cast<int>(this->deviceregcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.DeviceRegCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceregcode(), output);
  }

  // string DeviceId = 3;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.DeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deviceid(), output);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.MsgSeq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msgseq(), output);
  }

  // string TempId = 5;
  if (this->tempid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tempid().data(), static_cast<int>(this->tempid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.TempId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tempid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DeviceregReq)
}

::google::protobuf::uint8* DeviceregReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DeviceregReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->devicetype(), target);
  }

  // string DeviceRegCode = 2;
  if (this->deviceregcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceregcode().data(), static_cast<int>(this->deviceregcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.DeviceRegCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceregcode(), target);
  }

  // string DeviceId = 3;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.DeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deviceid(), target);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.MsgSeq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msgseq(), target);
  }

  // string TempId = 5;
  if (this->tempid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tempid().data(), static_cast<int>(this->tempid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregReq.TempId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tempid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DeviceregReq)
  return target;
}

size_t DeviceregReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DeviceregReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceRegCode = 2;
  if (this->deviceregcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceregcode());
  }

  // string DeviceId = 3;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgseq());
  }

  // string TempId = 5;
  if (this->tempid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tempid());
  }

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceregReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DeviceregReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceregReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceregReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DeviceregReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DeviceregReq)
    MergeFrom(*source);
  }
}

void DeviceregReq::MergeFrom(const DeviceregReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DeviceregReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceregcode().size() > 0) {

    deviceregcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceregcode_);
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.msgseq().size() > 0) {

    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.tempid().size() > 0) {

    tempid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tempid_);
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
}

void DeviceregReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DeviceregReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceregReq::CopyFrom(const DeviceregReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DeviceregReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceregReq::IsInitialized() const {
  return true;
}

void DeviceregReq::Swap(DeviceregReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceregReq::InternalSwap(DeviceregReq* other) {
  using std::swap;
  deviceregcode_.Swap(&other->deviceregcode_);
  deviceid_.Swap(&other->deviceid_);
  msgseq_.Swap(&other->msgseq_);
  tempid_.Swap(&other->tempid_);
  swap(devicetype_, other->devicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceregReq::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceregResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceregResp::kDeviceTypeFieldNumber;
const int DeviceregResp::kDeviceIdFieldNumber;
const int DeviceregResp::kBrokerAddrFieldNumber;
const int DeviceregResp::kMsgSeqFieldNumber;
const int DeviceregResp::kServerPublicKeyFieldNumber;
const int DeviceregResp::kPrivateKeyFieldNumber;
const int DeviceregResp::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceregResp::DeviceregResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsDeviceregResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DeviceregResp)
}
DeviceregResp::DeviceregResp(const DeviceregResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  brokeraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brokeraddr().size() > 0) {
    brokeraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokeraddr_);
  }
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgseq().size() > 0) {
    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  serverpublickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverpublickey().size() > 0) {
    serverpublickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverpublickey_);
  }
  privatekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.privatekey().size() > 0) {
    privatekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privatekey_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  devicetype_ = from.devicetype_;
  // @@protoc_insertion_point(copy_constructor:pb.DeviceregResp)
}

void DeviceregResp::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpublickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _cached_size_ = 0;
}

DeviceregResp::~DeviceregResp() {
  // @@protoc_insertion_point(destructor:pb.DeviceregResp)
  SharedDtor();
}

void DeviceregResp::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpublickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceregResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceregResp::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceregResp& DeviceregResp::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsDeviceregResp();
  return *internal_default_instance();
}

DeviceregResp* DeviceregResp::New(::google::protobuf::Arena* arena) const {
  DeviceregResp* n = new DeviceregResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceregResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DeviceregResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverpublickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool DeviceregResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DeviceregResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DeviceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.DeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BrokerAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokeraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.BrokerAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgSeq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgseq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgseq().data(), static_cast<int>(this->msgseq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.MsgSeq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerPublicKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverpublickey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverpublickey().data(), static_cast<int>(this->serverpublickey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.ServerPublicKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PrivateKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_privatekey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->privatekey().data(), static_cast<int>(this->privatekey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.PrivateKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Error = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DeviceregResp.Error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DeviceregResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DeviceregResp)
  return false;
#undef DO_
}

void DeviceregResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DeviceregResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->devicetype(), output);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.DeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // string BrokerAddr = 3;
  if (this->brokeraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.BrokerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->brokeraddr(), output);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.MsgSeq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msgseq(), output);
  }

  // string ServerPublicKey = 5;
  if (this->serverpublickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverpublickey().data(), static_cast<int>(this->serverpublickey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.ServerPublicKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->serverpublickey(), output);
  }

  // string PrivateKey = 6;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), static_cast<int>(this->privatekey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.PrivateKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->privatekey(), output);
  }

  // string Error = 7;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.Error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DeviceregResp)
}

::google::protobuf::uint8* DeviceregResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DeviceregResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->devicetype(), target);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.DeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // string BrokerAddr = 3;
  if (this->brokeraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.BrokerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->brokeraddr(), target);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.MsgSeq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msgseq(), target);
  }

  // string ServerPublicKey = 5;
  if (this->serverpublickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverpublickey().data(), static_cast<int>(this->serverpublickey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.ServerPublicKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->serverpublickey(), target);
  }

  // string PrivateKey = 6;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), static_cast<int>(this->privatekey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.PrivateKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->privatekey(), target);
  }

  // string Error = 7;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DeviceregResp.Error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DeviceregResp)
  return target;
}

size_t DeviceregResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DeviceregResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string BrokerAddr = 3;
  if (this->brokeraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokeraddr());
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgseq());
  }

  // string ServerPublicKey = 5;
  if (this->serverpublickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverpublickey());
  }

  // string PrivateKey = 6;
  if (this->privatekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->privatekey());
  }

  // string Error = 7;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceregResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DeviceregResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceregResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceregResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DeviceregResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DeviceregResp)
    MergeFrom(*source);
  }
}

void DeviceregResp::MergeFrom(const DeviceregResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DeviceregResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.brokeraddr().size() > 0) {

    brokeraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokeraddr_);
  }
  if (from.msgseq().size() > 0) {

    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.serverpublickey().size() > 0) {

    serverpublickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverpublickey_);
  }
  if (from.privatekey().size() > 0) {

    privatekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privatekey_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
}

void DeviceregResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DeviceregResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceregResp::CopyFrom(const DeviceregResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DeviceregResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceregResp::IsInitialized() const {
  return true;
}

void DeviceregResp::Swap(DeviceregResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceregResp::InternalSwap(DeviceregResp* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  brokeraddr_.Swap(&other->brokeraddr_);
  msgseq_.Swap(&other->msgseq_);
  serverpublickey_.Swap(&other->serverpublickey_);
  privatekey_.Swap(&other->privatekey_);
  error_.Swap(&other->error_);
  swap(devicetype_, other->devicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceregResp::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BaseCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseCmd::kDeviceTypeFieldNumber;
const int BaseCmd::kDeviceIdFieldNumber;
const int BaseCmd::kIpFieldNumber;
const int BaseCmd::kMsgSeqFieldNumber;
const int BaseCmd::kMarkFieldNumber;
const int BaseCmd::kCmdFieldNumber;
const int BaseCmd::kDeviceListFieldNumber;
const int BaseCmd::kDataFieldNumber;
const int BaseCmd::kServerIdFieldNumber;
const int BaseCmd::kUserNameFieldNumber;
const int BaseCmd::kErrorFieldNumber;
const int BaseCmd::kBrokerAddrFieldNumber;
const int BaseCmd::kGateIdFieldNumber;
const int BaseCmd::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseCmd::BaseCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsBaseCmd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BaseCmd)
}
BaseCmd::BaseCmd(const BaseCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgseq().size() > 0) {
    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  devicelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicelist().size() > 0) {
    devicelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicelist_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  brokeraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brokeraddr().size() > 0) {
    brokeraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokeraddr_);
  }
  gateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateid().size() > 0) {
    gateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateid_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&devicetype_, &from.devicetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&devicetype_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:pb.BaseCmd)
}

void BaseCmd::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicelist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&devicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&devicetype_)) + sizeof(error_));
  _cached_size_ = 0;
}

BaseCmd::~BaseCmd() {
  // @@protoc_insertion_point(destructor:pb.BaseCmd)
  SharedDtor();
}

void BaseCmd::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicelist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BaseCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseCmd::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseCmd& BaseCmd::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsBaseCmd();
  return *internal_default_instance();
}

BaseCmd* BaseCmd::New(::google::protobuf::Arena* arena) const {
  BaseCmd* n = new BaseCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.BaseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicelist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokeraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&devicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&devicetype_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool BaseCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BaseCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DeviceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.DeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.Ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgSeq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgseq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgseq().data(), static_cast<int>(this->msgseq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.MsgSeq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Mark = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Cmd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.Cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicelist().data(), static_cast<int>(this->devicelist().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.DeviceList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.ServerId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserName = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Error = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BrokerAddr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokeraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.BrokerAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GateId = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateid().data(), static_cast<int>(this->gateid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.GateId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Token = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.BaseCmd.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BaseCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BaseCmd)
  return false;
#undef DO_
}

void BaseCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BaseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->devicetype(), output);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.DeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // string Ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.MsgSeq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msgseq(), output);
  }

  // uint32 Mark = 5;
  if (this->mark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mark(), output);
  }

  // string Cmd = 6;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cmd(), output);
  }

  // string DeviceList = 7;
  if (this->devicelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicelist().data(), static_cast<int>(this->devicelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.DeviceList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->devicelist(), output);
  }

  // string Data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->data(), output);
  }

  // string ServerId = 9;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.ServerId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->serverid(), output);
  }

  // string UserName = 10;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->username(), output);
  }

  // uint32 Error = 11;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->error(), output);
  }

  // string BrokerAddr = 12;
  if (this->brokeraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.BrokerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->brokeraddr(), output);
  }

  // string GateId = 13;
  if (this->gateid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateid().data(), static_cast<int>(this->gateid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.GateId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->gateid(), output);
  }

  // string Token = 14;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BaseCmd)
}

::google::protobuf::uint8* BaseCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.BaseCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->devicetype(), target);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.DeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // string Ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.MsgSeq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msgseq(), target);
  }

  // uint32 Mark = 5;
  if (this->mark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mark(), target);
  }

  // string Cmd = 6;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cmd(), target);
  }

  // string DeviceList = 7;
  if (this->devicelist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicelist().data(), static_cast<int>(this->devicelist().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.DeviceList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->devicelist(), target);
  }

  // string Data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->data(), target);
  }

  // string ServerId = 9;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.ServerId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->serverid(), target);
  }

  // string UserName = 10;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->username(), target);
  }

  // uint32 Error = 11;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->error(), target);
  }

  // string BrokerAddr = 12;
  if (this->brokeraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokeraddr().data(), static_cast<int>(this->brokeraddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.BrokerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->brokeraddr(), target);
  }

  // string GateId = 13;
  if (this->gateid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateid().data(), static_cast<int>(this->gateid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.GateId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->gateid(), target);
  }

  // string Token = 14;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.BaseCmd.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BaseCmd)
  return target;
}

size_t BaseCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.BaseCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string Ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string MsgSeq = 4;
  if (this->msgseq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgseq());
  }

  // string Cmd = 6;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  // string DeviceList = 7;
  if (this->devicelist().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicelist());
  }

  // string Data = 8;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // string ServerId = 9;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // string UserName = 10;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string BrokerAddr = 12;
  if (this->brokeraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokeraddr());
  }

  // string GateId = 13;
  if (this->gateid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateid());
  }

  // string Token = 14;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devicetype());
  }

  // uint32 Mark = 5;
  if (this->mark() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mark());
  }

  // uint32 Error = 11;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.BaseCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.BaseCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.BaseCmd)
    MergeFrom(*source);
  }
}

void BaseCmd::MergeFrom(const BaseCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.BaseCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.msgseq().size() > 0) {

    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  if (from.devicelist().size() > 0) {

    devicelist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicelist_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.brokeraddr().size() > 0) {

    brokeraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokeraddr_);
  }
  if (from.gateid().size() > 0) {

    gateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateid_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.mark() != 0) {
    set_mark(from.mark());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void BaseCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.BaseCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseCmd::CopyFrom(const BaseCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.BaseCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseCmd::IsInitialized() const {
  return true;
}

void BaseCmd::Swap(BaseCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseCmd::InternalSwap(BaseCmd* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  ip_.Swap(&other->ip_);
  msgseq_.Swap(&other->msgseq_);
  cmd_.Swap(&other->cmd_);
  devicelist_.Swap(&other->devicelist_);
  data_.Swap(&other->data_);
  serverid_.Swap(&other->serverid_);
  username_.Swap(&other->username_);
  brokeraddr_.Swap(&other->brokeraddr_);
  gateid_.Swap(&other->gateid_);
  token_.Swap(&other->token_);
  swap(devicetype_, other->devicetype_);
  swap(mark_, other->mark_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseCmd::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateData::kGateIdFieldNumber;
const int GateData::kTokenFieldNumber;
const int GateData::kServerFieldNumber;
const int GateData::kBakServerFieldNumber;
const int GateData::kCmdSetFieldNumber;
const int GateData::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateData::GateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsGateData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GateData)
}
GateData::GateData(const GateData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmdset_(from.cmdset_),
      device_(from.device_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateid().size() > 0) {
    gateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateid_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  bakserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bakserver().size() > 0) {
    bakserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bakserver_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.GateData)
}

void GateData::SharedCtor() {
  gateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bakserver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GateData::~GateData() {
  // @@protoc_insertion_point(destructor:pb.GateData)
  SharedDtor();
}

void GateData::SharedDtor() {
  gateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bakserver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateData::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateData& GateData::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsGateData();
  return *internal_default_instance();
}

GateData* GateData::New(::google::protobuf::Arena* arena) const {
  GateData* n = new GateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmdset_.Clear();
  device_.Clear();
  gateid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bakserver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string GateId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateid().data(), static_cast<int>(this->gateid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.GateData.GateId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.GateData.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Server = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.GateData.Server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BakServer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bakserver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bakserver().data(), static_cast<int>(this->bakserver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.GateData.BakServer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.cmdSetList CmdSet = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cmdset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.deviceList Device = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GateData)
  return false;
#undef DO_
}

void GateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string GateId = 1;
  if (this->gateid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateid().data(), static_cast<int>(this->gateid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.GateId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gateid(), output);
  }

  // string Token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // string Server = 3;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.Server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server(), output);
  }

  // string BakServer = 4;
  if (this->bakserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bakserver().data(), static_cast<int>(this->bakserver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.BakServer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bakserver(), output);
  }

  // repeated .pb.cmdSetList CmdSet = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmdset_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cmdset(static_cast<int>(i)), output);
  }

  // repeated .pb.deviceList Device = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->device(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GateData)
}

::google::protobuf::uint8* GateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GateData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string GateId = 1;
  if (this->gateid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateid().data(), static_cast<int>(this->gateid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.GateId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gateid(), target);
  }

  // string Token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // string Server = 3;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.Server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server(), target);
  }

  // string BakServer = 4;
  if (this->bakserver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bakserver().data(), static_cast<int>(this->bakserver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GateData.BakServer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bakserver(), target);
  }

  // repeated .pb.cmdSetList CmdSet = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmdset_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->cmdset(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.deviceList Device = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->device(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GateData)
  return target;
}

size_t GateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GateData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.cmdSetList CmdSet = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->cmdset_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cmdset(static_cast<int>(i)));
    }
  }

  // repeated .pb.deviceList Device = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->device_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device(static_cast<int>(i)));
    }
  }

  // string GateId = 1;
  if (this->gateid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateid());
  }

  // string Token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string Server = 3;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // string BakServer = 4;
  if (this->bakserver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bakserver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GateData)
  GOOGLE_DCHECK_NE(&from, this);
  const GateData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GateData)
    MergeFrom(*source);
  }
}

void GateData::MergeFrom(const GateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmdset_.MergeFrom(from.cmdset_);
  device_.MergeFrom(from.device_);
  if (from.gateid().size() > 0) {

    gateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateid_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.bakserver().size() > 0) {

    bakserver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bakserver_);
  }
}

void GateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateData::CopyFrom(const GateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateData::IsInitialized() const {
  return true;
}

void GateData::Swap(GateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateData::InternalSwap(GateData* other) {
  using std::swap;
  cmdset_.InternalSwap(&other->cmdset_);
  device_.InternalSwap(&other->device_);
  gateid_.Swap(&other->gateid_);
  token_.Swap(&other->token_);
  server_.Swap(&other->server_);
  bakserver_.Swap(&other->bakserver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateData::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cmdSetList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cmdSetList::kCmdFieldNumber;
const int cmdSetList::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cmdSetList::cmdSetList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultscmdSetList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.cmdSetList)
}
cmdSetList::cmdSetList(const cmdSetList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_(from.device_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.cmdSetList)
}

void cmdSetList::SharedCtor() {
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

cmdSetList::~cmdSetList() {
  // @@protoc_insertion_point(destructor:pb.cmdSetList)
  SharedDtor();
}

void cmdSetList::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cmdSetList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cmdSetList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cmdSetList& cmdSetList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultscmdSetList();
  return *internal_default_instance();
}

cmdSetList* cmdSetList::New(::google::protobuf::Arena* arena) const {
  cmdSetList* n = new cmdSetList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void cmdSetList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.cmdSetList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool cmdSetList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.cmdSetList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.cmdSetList.Cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.deviceList Device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.cmdSetList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.cmdSetList)
  return false;
#undef DO_
}

void cmdSetList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.cmdSetList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.cmdSetList.Cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd(), output);
  }

  // repeated .pb.deviceList Device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->device(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.cmdSetList)
}

::google::protobuf::uint8* cmdSetList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.cmdSetList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.cmdSetList.Cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd(), target);
  }

  // repeated .pb.deviceList Device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->device(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.cmdSetList)
  return target;
}

size_t cmdSetList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.cmdSetList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.deviceList Device = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->device_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device(static_cast<int>(i)));
    }
  }

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cmdSetList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.cmdSetList)
  GOOGLE_DCHECK_NE(&from, this);
  const cmdSetList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cmdSetList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.cmdSetList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.cmdSetList)
    MergeFrom(*source);
  }
}

void cmdSetList::MergeFrom(const cmdSetList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.cmdSetList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
}

void cmdSetList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.cmdSetList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cmdSetList::CopyFrom(const cmdSetList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.cmdSetList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cmdSetList::IsInitialized() const {
  return true;
}

void cmdSetList::Swap(cmdSetList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cmdSetList::InternalSwap(cmdSetList* other) {
  using std::swap;
  device_.InternalSwap(&other->device_);
  cmd_.Swap(&other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata cmdSetList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void deviceList::InitAsDefaultInstance() {
  ::pb::_deviceList_default_instance_._instance.get_mutable()->generalctl_ = const_cast< ::pb::generalList*>(
      ::pb::generalList::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->generalstate_ = const_cast< ::pb::generalState*>(
      ::pb::generalState::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->lightctl_ = const_cast< ::pb::lightList*>(
      ::pb::lightList::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->lightstate_ = const_cast< ::pb::lightState*>(
      ::pb::lightState::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->airconditioningctl_ = const_cast< ::pb::airConditioningList*>(
      ::pb::airConditioningList::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->airconditioningstate_ = const_cast< ::pb::airConditioningState*>(
      ::pb::airConditioningState::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->farmctl_ = const_cast< ::pb::farmList*>(
      ::pb::farmList::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->farmstate_ = const_cast< ::pb::farmState*>(
      ::pb::farmState::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->multimediactl_ = const_cast< ::pb::multimediaList*>(
      ::pb::multimediaList::internal_default_instance());
  ::pb::_deviceList_default_instance_._instance.get_mutable()->multimediastate_ = const_cast< ::pb::multimediaState*>(
      ::pb::multimediaState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deviceList::kDeviceIdFieldNumber;
const int deviceList::kNameFieldNumber;
const int deviceList::kCategoryFieldNumber;
const int deviceList::kSleepFieldNumber;
const int deviceList::kMsgSeqFieldNumber;
const int deviceList::kDigitalCtlFieldNumber;
const int deviceList::kGeneralCtlFieldNumber;
const int deviceList::kGeneralStateFieldNumber;
const int deviceList::kLightCtlFieldNumber;
const int deviceList::kLightStateFieldNumber;
const int deviceList::kAirConditioningCtlFieldNumber;
const int deviceList::kAirConditioningStateFieldNumber;
const int deviceList::kFarmCtlFieldNumber;
const int deviceList::kFarmStateFieldNumber;
const int deviceList::kMultimediaCtlFieldNumber;
const int deviceList::kMultimediaStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deviceList::deviceList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsdeviceList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.deviceList)
}
deviceList::deviceList(const deviceList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.category().size() > 0) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  sleep_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sleep().size() > 0) {
    sleep_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_);
  }
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgseq().size() > 0) {
    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.has_generalctl()) {
    generalctl_ = new ::pb::generalList(*from.generalctl_);
  } else {
    generalctl_ = NULL;
  }
  if (from.has_generalstate()) {
    generalstate_ = new ::pb::generalState(*from.generalstate_);
  } else {
    generalstate_ = NULL;
  }
  if (from.has_lightctl()) {
    lightctl_ = new ::pb::lightList(*from.lightctl_);
  } else {
    lightctl_ = NULL;
  }
  if (from.has_lightstate()) {
    lightstate_ = new ::pb::lightState(*from.lightstate_);
  } else {
    lightstate_ = NULL;
  }
  if (from.has_airconditioningctl()) {
    airconditioningctl_ = new ::pb::airConditioningList(*from.airconditioningctl_);
  } else {
    airconditioningctl_ = NULL;
  }
  if (from.has_airconditioningstate()) {
    airconditioningstate_ = new ::pb::airConditioningState(*from.airconditioningstate_);
  } else {
    airconditioningstate_ = NULL;
  }
  if (from.has_farmctl()) {
    farmctl_ = new ::pb::farmList(*from.farmctl_);
  } else {
    farmctl_ = NULL;
  }
  if (from.has_farmstate()) {
    farmstate_ = new ::pb::farmState(*from.farmstate_);
  } else {
    farmstate_ = NULL;
  }
  if (from.has_multimediactl()) {
    multimediactl_ = new ::pb::multimediaList(*from.multimediactl_);
  } else {
    multimediactl_ = NULL;
  }
  if (from.has_multimediastate()) {
    multimediastate_ = new ::pb::multimediaState(*from.multimediastate_);
  } else {
    multimediastate_ = NULL;
  }
  digitalctl_ = from.digitalctl_;
  // @@protoc_insertion_point(copy_constructor:pb.deviceList)
}

void deviceList::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&generalctl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digitalctl_) -
      reinterpret_cast<char*>(&generalctl_)) + sizeof(digitalctl_));
  _cached_size_ = 0;
}

deviceList::~deviceList() {
  // @@protoc_insertion_point(destructor:pb.deviceList)
  SharedDtor();
}

void deviceList::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete generalctl_;
  if (this != internal_default_instance()) delete generalstate_;
  if (this != internal_default_instance()) delete lightctl_;
  if (this != internal_default_instance()) delete lightstate_;
  if (this != internal_default_instance()) delete airconditioningctl_;
  if (this != internal_default_instance()) delete airconditioningstate_;
  if (this != internal_default_instance()) delete farmctl_;
  if (this != internal_default_instance()) delete farmstate_;
  if (this != internal_default_instance()) delete multimediactl_;
  if (this != internal_default_instance()) delete multimediastate_;
}

void deviceList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deviceList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const deviceList& deviceList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsdeviceList();
  return *internal_default_instance();
}

deviceList* deviceList::New(::google::protobuf::Arena* arena) const {
  deviceList* n = new deviceList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.deviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && generalctl_ != NULL) {
    delete generalctl_;
  }
  generalctl_ = NULL;
  if (GetArenaNoVirtual() == NULL && generalstate_ != NULL) {
    delete generalstate_;
  }
  generalstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && lightctl_ != NULL) {
    delete lightctl_;
  }
  lightctl_ = NULL;
  if (GetArenaNoVirtual() == NULL && lightstate_ != NULL) {
    delete lightstate_;
  }
  lightstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && airconditioningctl_ != NULL) {
    delete airconditioningctl_;
  }
  airconditioningctl_ = NULL;
  if (GetArenaNoVirtual() == NULL && airconditioningstate_ != NULL) {
    delete airconditioningstate_;
  }
  airconditioningstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && farmctl_ != NULL) {
    delete farmctl_;
  }
  farmctl_ = NULL;
  if (GetArenaNoVirtual() == NULL && farmstate_ != NULL) {
    delete farmstate_;
  }
  farmstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && multimediactl_ != NULL) {
    delete multimediactl_;
  }
  multimediactl_ = NULL;
  if (GetArenaNoVirtual() == NULL && multimediastate_ != NULL) {
    delete multimediastate_;
  }
  multimediastate_ = NULL;
  digitalctl_ = 0;
  _internal_metadata_.Clear();
}

bool deviceList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.deviceList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string DeviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.deviceList.DeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.deviceList.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Category = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.deviceList.Category"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Sleep = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sleep().data(), static_cast<int>(this->sleep().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.deviceList.Sleep"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgSeq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgseq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgseq().data(), static_cast<int>(this->msgseq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.deviceList.MsgSeq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.digitalCtl DigitalCtl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_digitalctl(static_cast< ::pb::digitalCtl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.generalList GeneralCtl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generalctl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.generalState GeneralState = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generalstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.lightList LightCtl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lightctl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.lightState LightState = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lightstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningList AirConditioningCtl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airconditioningctl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningState AirConditioningState = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airconditioningstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.farmList FarmCtl = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_farmctl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.farmState FarmState = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_farmstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.multimediaList MultimediaCtl = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multimediactl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.multimediaState MultimediaState = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multimediastate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.deviceList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.deviceList)
  return false;
#undef DO_
}

void deviceList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.deviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DeviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.DeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string Category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category(), output);
  }

  // string Sleep = 4;
  if (this->sleep().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sleep().data(), static_cast<int>(this->sleep().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Sleep");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sleep(), output);
  }

  // string MsgSeq = 5;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.MsgSeq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msgseq(), output);
  }

  // .pb.digitalCtl DigitalCtl = 6;
  if (this->digitalctl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->digitalctl(), output);
  }

  // .pb.generalList GeneralCtl = 7;
  if (this->has_generalctl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->generalctl_, output);
  }

  // .pb.generalState GeneralState = 8;
  if (this->has_generalstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->generalstate_, output);
  }

  // .pb.lightList LightCtl = 9;
  if (this->has_lightctl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->lightctl_, output);
  }

  // .pb.lightState LightState = 10;
  if (this->has_lightstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->lightstate_, output);
  }

  // .pb.airConditioningList AirConditioningCtl = 11;
  if (this->has_airconditioningctl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->airconditioningctl_, output);
  }

  // .pb.airConditioningState AirConditioningState = 12;
  if (this->has_airconditioningstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->airconditioningstate_, output);
  }

  // .pb.farmList FarmCtl = 13;
  if (this->has_farmctl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->farmctl_, output);
  }

  // .pb.farmState FarmState = 14;
  if (this->has_farmstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->farmstate_, output);
  }

  // .pb.multimediaList MultimediaCtl = 15;
  if (this->has_multimediactl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->multimediactl_, output);
  }

  // .pb.multimediaState MultimediaState = 16;
  if (this->has_multimediastate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->multimediastate_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.deviceList)
}

::google::protobuf::uint8* deviceList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.deviceList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DeviceId = 1;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.DeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string Category = 3;
  if (this->category().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category(), target);
  }

  // string Sleep = 4;
  if (this->sleep().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sleep().data(), static_cast<int>(this->sleep().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.Sleep");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sleep(), target);
  }

  // string MsgSeq = 5;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.deviceList.MsgSeq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msgseq(), target);
  }

  // .pb.digitalCtl DigitalCtl = 6;
  if (this->digitalctl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->digitalctl(), target);
  }

  // .pb.generalList GeneralCtl = 7;
  if (this->has_generalctl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->generalctl_, deterministic, target);
  }

  // .pb.generalState GeneralState = 8;
  if (this->has_generalstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->generalstate_, deterministic, target);
  }

  // .pb.lightList LightCtl = 9;
  if (this->has_lightctl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->lightctl_, deterministic, target);
  }

  // .pb.lightState LightState = 10;
  if (this->has_lightstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->lightstate_, deterministic, target);
  }

  // .pb.airConditioningList AirConditioningCtl = 11;
  if (this->has_airconditioningctl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->airconditioningctl_, deterministic, target);
  }

  // .pb.airConditioningState AirConditioningState = 12;
  if (this->has_airconditioningstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->airconditioningstate_, deterministic, target);
  }

  // .pb.farmList FarmCtl = 13;
  if (this->has_farmctl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->farmctl_, deterministic, target);
  }

  // .pb.farmState FarmState = 14;
  if (this->has_farmstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->farmstate_, deterministic, target);
  }

  // .pb.multimediaList MultimediaCtl = 15;
  if (this->has_multimediactl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->multimediactl_, deterministic, target);
  }

  // .pb.multimediaState MultimediaState = 16;
  if (this->has_multimediastate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->multimediastate_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.deviceList)
  return target;
}

size_t deviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.deviceList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceId = 1;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Category = 3;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->category());
  }

  // string Sleep = 4;
  if (this->sleep().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sleep());
  }

  // string MsgSeq = 5;
  if (this->msgseq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgseq());
  }

  // .pb.generalList GeneralCtl = 7;
  if (this->has_generalctl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->generalctl_);
  }

  // .pb.generalState GeneralState = 8;
  if (this->has_generalstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->generalstate_);
  }

  // .pb.lightList LightCtl = 9;
  if (this->has_lightctl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lightctl_);
  }

  // .pb.lightState LightState = 10;
  if (this->has_lightstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lightstate_);
  }

  // .pb.airConditioningList AirConditioningCtl = 11;
  if (this->has_airconditioningctl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->airconditioningctl_);
  }

  // .pb.airConditioningState AirConditioningState = 12;
  if (this->has_airconditioningstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->airconditioningstate_);
  }

  // .pb.farmList FarmCtl = 13;
  if (this->has_farmctl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->farmctl_);
  }

  // .pb.farmState FarmState = 14;
  if (this->has_farmstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->farmstate_);
  }

  // .pb.multimediaList MultimediaCtl = 15;
  if (this->has_multimediactl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->multimediactl_);
  }

  // .pb.multimediaState MultimediaState = 16;
  if (this->has_multimediastate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->multimediastate_);
  }

  // .pb.digitalCtl DigitalCtl = 6;
  if (this->digitalctl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->digitalctl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deviceList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.deviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const deviceList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const deviceList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.deviceList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.deviceList)
    MergeFrom(*source);
  }
}

void deviceList::MergeFrom(const deviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.deviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.sleep().size() > 0) {

    sleep_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_);
  }
  if (from.msgseq().size() > 0) {

    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.has_generalctl()) {
    mutable_generalctl()->::pb::generalList::MergeFrom(from.generalctl());
  }
  if (from.has_generalstate()) {
    mutable_generalstate()->::pb::generalState::MergeFrom(from.generalstate());
  }
  if (from.has_lightctl()) {
    mutable_lightctl()->::pb::lightList::MergeFrom(from.lightctl());
  }
  if (from.has_lightstate()) {
    mutable_lightstate()->::pb::lightState::MergeFrom(from.lightstate());
  }
  if (from.has_airconditioningctl()) {
    mutable_airconditioningctl()->::pb::airConditioningList::MergeFrom(from.airconditioningctl());
  }
  if (from.has_airconditioningstate()) {
    mutable_airconditioningstate()->::pb::airConditioningState::MergeFrom(from.airconditioningstate());
  }
  if (from.has_farmctl()) {
    mutable_farmctl()->::pb::farmList::MergeFrom(from.farmctl());
  }
  if (from.has_farmstate()) {
    mutable_farmstate()->::pb::farmState::MergeFrom(from.farmstate());
  }
  if (from.has_multimediactl()) {
    mutable_multimediactl()->::pb::multimediaList::MergeFrom(from.multimediactl());
  }
  if (from.has_multimediastate()) {
    mutable_multimediastate()->::pb::multimediaState::MergeFrom(from.multimediastate());
  }
  if (from.digitalctl() != 0) {
    set_digitalctl(from.digitalctl());
  }
}

void deviceList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.deviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deviceList::CopyFrom(const deviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.deviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deviceList::IsInitialized() const {
  return true;
}

void deviceList::Swap(deviceList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deviceList::InternalSwap(deviceList* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  name_.Swap(&other->name_);
  category_.Swap(&other->category_);
  sleep_.Swap(&other->sleep_);
  msgseq_.Swap(&other->msgseq_);
  swap(generalctl_, other->generalctl_);
  swap(generalstate_, other->generalstate_);
  swap(lightctl_, other->lightctl_);
  swap(lightstate_, other->lightstate_);
  swap(airconditioningctl_, other->airconditioningctl_);
  swap(airconditioningstate_, other->airconditioningstate_);
  swap(farmctl_, other->farmctl_);
  swap(farmstate_, other->farmstate_);
  swap(multimediactl_, other->multimediactl_);
  swap(multimediastate_, other->multimediastate_);
  swap(digitalctl_, other->digitalctl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deviceList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void generalList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generalList::kTemperatureFieldNumber;
const int generalList::kVolumeFieldNumber;
const int generalList::kPoslitionFieldNumber;
const int generalList::kCmdFieldNumber;
const int generalList::kSwitchFieldNumber;
const int generalList::kWindDirectionFieldNumber;
const int generalList::kModeFieldNumber;
const int generalList::kSensitivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generalList::generalList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsgeneralList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.generalList)
}
generalList::generalList(const generalList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.temperature().size() > 0) {
    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.poslition().size() > 0) {
    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.winddirection().size() > 0) {
    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  ::memcpy(&switch__, &from.switch__,
    static_cast<size_t>(reinterpret_cast<char*>(&sensitivity_) -
    reinterpret_cast<char*>(&switch__)) + sizeof(sensitivity_));
  // @@protoc_insertion_point(copy_constructor:pb.generalList)
}

void generalList::SharedCtor() {
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&switch__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensitivity_) -
      reinterpret_cast<char*>(&switch__)) + sizeof(sensitivity_));
  _cached_size_ = 0;
}

generalList::~generalList() {
  // @@protoc_insertion_point(destructor:pb.generalList)
  SharedDtor();
}

void generalList::SharedDtor() {
  temperature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void generalList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* generalList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const generalList& generalList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsgeneralList();
  return *internal_default_instance();
}

generalList* generalList::New(::google::protobuf::Arena* arena) const {
  generalList* n = new generalList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void generalList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.generalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&switch__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensitivity_) -
      reinterpret_cast<char*>(&switch__)) + sizeof(sensitivity_));
  _internal_metadata_.Clear();
}

bool generalList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.generalList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string temperature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_temperature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->temperature().data(), static_cast<int>(this->temperature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalList.temperature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Volume = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalList.Volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Poslition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poslition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->poslition().data(), static_cast<int>(this->poslition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalList.Poslition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Cmd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalList.Cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Switch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string WindDirection = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winddirection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->winddirection().data(), static_cast<int>(this->winddirection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalList.WindDirection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Sensitivity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sensitivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.generalList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.generalList)
  return false;
#undef DO_
}

void generalList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.generalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string temperature = 1;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.temperature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->temperature(), output);
  }

  // string Volume = 2;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->volume(), output);
  }

  // string Poslition = 3;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Poslition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->poslition(), output);
  }

  // string Cmd = 4;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cmd(), output);
  }

  // bool Switch = 5;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->switch_(), output);
  }

  // string WindDirection = 6;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.WindDirection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->winddirection(), output);
  }

  // uint32 Mode = 7;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mode(), output);
  }

  // uint32 Sensitivity = 8;
  if (this->sensitivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sensitivity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.generalList)
}

::google::protobuf::uint8* generalList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.generalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string temperature = 1;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.temperature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->temperature(), target);
  }

  // string Volume = 2;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->volume(), target);
  }

  // string Poslition = 3;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Poslition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->poslition(), target);
  }

  // string Cmd = 4;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.Cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cmd(), target);
  }

  // bool Switch = 5;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->switch_(), target);
  }

  // string WindDirection = 6;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalList.WindDirection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->winddirection(), target);
  }

  // uint32 Mode = 7;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mode(), target);
  }

  // uint32 Sensitivity = 8;
  if (this->sensitivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->sensitivity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.generalList)
  return target;
}

size_t generalList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.generalList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string temperature = 1;
  if (this->temperature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->temperature());
  }

  // string Volume = 2;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // string Poslition = 3;
  if (this->poslition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->poslition());
  }

  // string Cmd = 4;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  // string WindDirection = 6;
  if (this->winddirection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winddirection());
  }

  // bool Switch = 5;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Mode = 7;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  // uint32 Sensitivity = 8;
  if (this->sensitivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensitivity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void generalList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.generalList)
  GOOGLE_DCHECK_NE(&from, this);
  const generalList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const generalList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.generalList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.generalList)
    MergeFrom(*source);
  }
}

void generalList::MergeFrom(const generalList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.generalList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.temperature().size() > 0) {

    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.poslition().size() > 0) {

    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  if (from.winddirection().size() > 0) {

    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.sensitivity() != 0) {
    set_sensitivity(from.sensitivity());
  }
}

void generalList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.generalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generalList::CopyFrom(const generalList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.generalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generalList::IsInitialized() const {
  return true;
}

void generalList::Swap(generalList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generalList::InternalSwap(generalList* other) {
  using std::swap;
  temperature_.Swap(&other->temperature_);
  volume_.Swap(&other->volume_);
  poslition_.Swap(&other->poslition_);
  cmd_.Swap(&other->cmd_);
  winddirection_.Swap(&other->winddirection_);
  swap(switch__, other->switch__);
  swap(mode_, other->mode_);
  swap(sensitivity_, other->sensitivity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata generalList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void generalState::InitAsDefaultInstance() {
  ::pb::_generalState_default_instance_._instance.get_mutable()->alarm_ = const_cast< ::pb::alarmList*>(
      ::pb::alarmList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int generalState::kSwitchFieldNumber;
const int generalState::kTemperatureFieldNumber;
const int generalState::kVolumeFieldNumber;
const int generalState::kPoslitionFieldNumber;
const int generalState::kO2FieldNumber;
const int generalState::kCO2FieldNumber;
const int generalState::kCOFieldNumber;
const int generalState::kWindDirectionFieldNumber;
const int generalState::kModeFieldNumber;
const int generalState::kSensitivityFieldNumber;
const int generalState::kLockStateFieldNumber;
const int generalState::kBeatingofheartFieldNumber;
const int generalState::kBrignessFieldNumber;
const int generalState::kAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

generalState::generalState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsgeneralState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.generalState)
}
generalState::generalState(const generalState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.temperature().size() > 0) {
    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume().size() > 0) {
    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.poslition().size() > 0) {
    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  o2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.o2().size() > 0) {
    o2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.o2_);
  }
  co2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.co2().size() > 0) {
    co2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co2_);
  }
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.co().size() > 0) {
    co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
  }
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.winddirection().size() > 0) {
    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  lockstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lockstate().size() > 0) {
    lockstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockstate_);
  }
  brigness_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brigness().size() > 0) {
    brigness_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brigness_);
  }
  if (from.has_alarm()) {
    alarm_ = new ::pb::alarmList(*from.alarm_);
  } else {
    alarm_ = NULL;
  }
  ::memcpy(&switch__, &from.switch__,
    static_cast<size_t>(reinterpret_cast<char*>(&beatingofheart_) -
    reinterpret_cast<char*>(&switch__)) + sizeof(beatingofheart_));
  // @@protoc_insertion_point(copy_constructor:pb.generalState)
}

void generalState::SharedCtor() {
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brigness_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&alarm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beatingofheart_) -
      reinterpret_cast<char*>(&alarm_)) + sizeof(beatingofheart_));
  _cached_size_ = 0;
}

generalState::~generalState() {
  // @@protoc_insertion_point(destructor:pb.generalState)
  SharedDtor();
}

void generalState::SharedDtor() {
  temperature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brigness_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alarm_;
}

void generalState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* generalState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const generalState& generalState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsgeneralState();
  return *internal_default_instance();
}

generalState* generalState::New(::google::protobuf::Arena* arena) const {
  generalState* n = new generalState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void generalState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.generalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brigness_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && alarm_ != NULL) {
    delete alarm_;
  }
  alarm_ = NULL;
  ::memset(&switch__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beatingofheart_) -
      reinterpret_cast<char*>(&switch__)) + sizeof(beatingofheart_));
  _internal_metadata_.Clear();
}

bool generalState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.generalState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Switch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Temperature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_temperature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->temperature().data(), static_cast<int>(this->temperature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.Temperature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Volume = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume().data(), static_cast<int>(this->volume().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.Volume"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Poslition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poslition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->poslition().data(), static_cast<int>(this->poslition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.Poslition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string O2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_o2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->o2().data(), static_cast<int>(this->o2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.O2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CO2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_co2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->co2().data(), static_cast<int>(this->co2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.CO2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CO = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_co()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->co().data(), static_cast<int>(this->co().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.CO"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string WindDirection = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winddirection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->winddirection().data(), static_cast<int>(this->winddirection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.WindDirection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Mode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Sensitivity = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sensitivity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LockState = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockstate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lockstate().data(), static_cast<int>(this->lockstate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.LockState"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Beatingofheart = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beatingofheart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Brigness = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brigness()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brigness().data(), static_cast<int>(this->brigness().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.generalState.Brigness"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.alarmList Alarm = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.generalState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.generalState)
  return false;
#undef DO_
}

void generalState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.generalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->switch_(), output);
  }

  // string Temperature = 2;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Temperature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->temperature(), output);
  }

  // string Volume = 3;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Volume");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->volume(), output);
  }

  // string Poslition = 4;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Poslition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->poslition(), output);
  }

  // string O2 = 5;
  if (this->o2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->o2().data(), static_cast<int>(this->o2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.O2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->o2(), output);
  }

  // string CO2 = 6;
  if (this->co2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co2().data(), static_cast<int>(this->co2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.CO2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->co2(), output);
  }

  // string CO = 7;
  if (this->co().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co().data(), static_cast<int>(this->co().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.CO");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->co(), output);
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.WindDirection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->winddirection(), output);
  }

  // uint32 Mode = 9;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mode(), output);
  }

  // uint32 Sensitivity = 10;
  if (this->sensitivity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->sensitivity(), output);
  }

  // string LockState = 11;
  if (this->lockstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lockstate().data(), static_cast<int>(this->lockstate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.LockState");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->lockstate(), output);
  }

  // uint32 Beatingofheart = 12;
  if (this->beatingofheart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->beatingofheart(), output);
  }

  // string Brigness = 13;
  if (this->brigness().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brigness().data(), static_cast<int>(this->brigness().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Brigness");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->brigness(), output);
  }

  // .pb.alarmList Alarm = 14;
  if (this->has_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->alarm_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.generalState)
}

::google::protobuf::uint8* generalState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.generalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->switch_(), target);
  }

  // string Temperature = 2;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Temperature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->temperature(), target);
  }

  // string Volume = 3;
  if (this->volume().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume().data(), static_cast<int>(this->volume().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Volume");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->volume(), target);
  }

  // string Poslition = 4;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Poslition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->poslition(), target);
  }

  // string O2 = 5;
  if (this->o2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->o2().data(), static_cast<int>(this->o2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.O2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->o2(), target);
  }

  // string CO2 = 6;
  if (this->co2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co2().data(), static_cast<int>(this->co2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.CO2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->co2(), target);
  }

  // string CO = 7;
  if (this->co().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co().data(), static_cast<int>(this->co().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.CO");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->co(), target);
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.WindDirection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->winddirection(), target);
  }

  // uint32 Mode = 9;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mode(), target);
  }

  // uint32 Sensitivity = 10;
  if (this->sensitivity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->sensitivity(), target);
  }

  // string LockState = 11;
  if (this->lockstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lockstate().data(), static_cast<int>(this->lockstate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.LockState");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->lockstate(), target);
  }

  // uint32 Beatingofheart = 12;
  if (this->beatingofheart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->beatingofheart(), target);
  }

  // string Brigness = 13;
  if (this->brigness().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brigness().data(), static_cast<int>(this->brigness().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.generalState.Brigness");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->brigness(), target);
  }

  // .pb.alarmList Alarm = 14;
  if (this->has_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->alarm_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.generalState)
  return target;
}

size_t generalState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.generalState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Temperature = 2;
  if (this->temperature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->temperature());
  }

  // string Volume = 3;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume());
  }

  // string Poslition = 4;
  if (this->poslition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->poslition());
  }

  // string O2 = 5;
  if (this->o2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->o2());
  }

  // string CO2 = 6;
  if (this->co2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->co2());
  }

  // string CO = 7;
  if (this->co().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->co());
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winddirection());
  }

  // string LockState = 11;
  if (this->lockstate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lockstate());
  }

  // string Brigness = 13;
  if (this->brigness().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brigness());
  }

  // .pb.alarmList Alarm = 14;
  if (this->has_alarm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->alarm_);
  }

  // bool Switch = 1;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Mode = 9;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  // uint32 Sensitivity = 10;
  if (this->sensitivity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensitivity());
  }

  // uint32 Beatingofheart = 12;
  if (this->beatingofheart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beatingofheart());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void generalState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.generalState)
  GOOGLE_DCHECK_NE(&from, this);
  const generalState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const generalState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.generalState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.generalState)
    MergeFrom(*source);
  }
}

void generalState::MergeFrom(const generalState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.generalState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.temperature().size() > 0) {

    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  if (from.volume().size() > 0) {

    volume_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_);
  }
  if (from.poslition().size() > 0) {

    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  if (from.o2().size() > 0) {

    o2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.o2_);
  }
  if (from.co2().size() > 0) {

    co2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co2_);
  }
  if (from.co().size() > 0) {

    co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
  }
  if (from.winddirection().size() > 0) {

    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  if (from.lockstate().size() > 0) {

    lockstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockstate_);
  }
  if (from.brigness().size() > 0) {

    brigness_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brigness_);
  }
  if (from.has_alarm()) {
    mutable_alarm()->::pb::alarmList::MergeFrom(from.alarm());
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.sensitivity() != 0) {
    set_sensitivity(from.sensitivity());
  }
  if (from.beatingofheart() != 0) {
    set_beatingofheart(from.beatingofheart());
  }
}

void generalState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.generalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void generalState::CopyFrom(const generalState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.generalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool generalState::IsInitialized() const {
  return true;
}

void generalState::Swap(generalState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void generalState::InternalSwap(generalState* other) {
  using std::swap;
  temperature_.Swap(&other->temperature_);
  volume_.Swap(&other->volume_);
  poslition_.Swap(&other->poslition_);
  o2_.Swap(&other->o2_);
  co2_.Swap(&other->co2_);
  co_.Swap(&other->co_);
  winddirection_.Swap(&other->winddirection_);
  lockstate_.Swap(&other->lockstate_);
  brigness_.Swap(&other->brigness_);
  swap(alarm_, other->alarm_);
  swap(switch__, other->switch__);
  swap(mode_, other->mode_);
  swap(sensitivity_, other->sensitivity_);
  swap(beatingofheart_, other->beatingofheart_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata generalState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void multimediaList::InitAsDefaultInstance() {
  ::pb::_multimediaList_default_instance_._instance.get_mutable()->data_ = const_cast< ::pb::dataParm*>(
      ::pb::dataParm::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int multimediaList::kPathFieldNumber;
const int multimediaList::kPressFieldNumber;
const int multimediaList::kSwitchFieldNumber;
const int multimediaList::kSortFieldNumber;
const int multimediaList::kScenarioFieldNumber;
const int multimediaList::kChannelFieldNumber;
const int multimediaList::kStartChannelFieldNumber;
const int multimediaList::kEndChannelFieldNumber;
const int multimediaList::kVolumeFieldNumber;
const int multimediaList::kMuteFieldNumber;
const int multimediaList::kModeFieldNumber;
const int multimediaList::kMeetingNameFieldNumber;
const int multimediaList::kStateFieldNumber;
const int multimediaList::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

multimediaList::multimediaList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsmultimediaList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.multimediaList)
}
multimediaList::multimediaList(const multimediaList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  meetingname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.meetingname().size() > 0) {
    meetingname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meetingname_);
  }
  if (from.has_data()) {
    data_ = new ::pb::dataParm(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&path_, &from.path_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&path_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:pb.multimediaList)
}

void multimediaList::SharedCtor() {
  meetingname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&data_)) + sizeof(state_));
  _cached_size_ = 0;
}

multimediaList::~multimediaList() {
  // @@protoc_insertion_point(destructor:pb.multimediaList)
  SharedDtor();
}

void multimediaList::SharedDtor() {
  meetingname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void multimediaList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* multimediaList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const multimediaList& multimediaList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsmultimediaList();
  return *internal_default_instance();
}

multimediaList* multimediaList::New(::google::protobuf::Arena* arena) const {
  multimediaList* n = new multimediaList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void multimediaList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.multimediaList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  meetingname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&path_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool multimediaList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.multimediaList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Press = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &press_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Switch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Sort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Scenario = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scenario_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Channel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 StartChannel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startchannel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EndChannel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endchannel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Volume = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Mute = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Mode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MeetingName = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meetingname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->meetingname().data(), static_cast<int>(this->meetingname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.multimediaList.MeetingName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 State = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.dataParm Data = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.multimediaList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.multimediaList)
  return false;
#undef DO_
}

void multimediaList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.multimediaList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Path = 1;
  if (this->path() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->path(), output);
  }

  // bool Press = 2;
  if (this->press() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->press(), output);
  }

  // bool Switch = 3;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->switch_(), output);
  }

  // bool Sort = 4;
  if (this->sort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sort(), output);
  }

  // uint32 Scenario = 5;
  if (this->scenario() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scenario(), output);
  }

  // uint32 Channel = 6;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->channel(), output);
  }

  // uint32 StartChannel = 7;
  if (this->startchannel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->startchannel(), output);
  }

  // uint32 EndChannel = 8;
  if (this->endchannel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->endchannel(), output);
  }

  // uint32 Volume = 9;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->volume(), output);
  }

  // bool Mute = 10;
  if (this->mute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->mute(), output);
  }

  // uint32 Mode = 11;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->mode(), output);
  }

  // string MeetingName = 12;
  if (this->meetingname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meetingname().data(), static_cast<int>(this->meetingname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.multimediaList.MeetingName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->meetingname(), output);
  }

  // uint32 State = 13;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->state(), output);
  }

  // .pb.dataParm Data = 14;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.multimediaList)
}

::google::protobuf::uint8* multimediaList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.multimediaList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Path = 1;
  if (this->path() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->path(), target);
  }

  // bool Press = 2;
  if (this->press() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->press(), target);
  }

  // bool Switch = 3;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->switch_(), target);
  }

  // bool Sort = 4;
  if (this->sort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sort(), target);
  }

  // uint32 Scenario = 5;
  if (this->scenario() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scenario(), target);
  }

  // uint32 Channel = 6;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->channel(), target);
  }

  // uint32 StartChannel = 7;
  if (this->startchannel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->startchannel(), target);
  }

  // uint32 EndChannel = 8;
  if (this->endchannel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->endchannel(), target);
  }

  // uint32 Volume = 9;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->volume(), target);
  }

  // bool Mute = 10;
  if (this->mute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->mute(), target);
  }

  // uint32 Mode = 11;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->mode(), target);
  }

  // string MeetingName = 12;
  if (this->meetingname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meetingname().data(), static_cast<int>(this->meetingname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.multimediaList.MeetingName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->meetingname(), target);
  }

  // uint32 State = 13;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->state(), target);
  }

  // .pb.dataParm Data = 14;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.multimediaList)
  return target;
}

size_t multimediaList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.multimediaList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string MeetingName = 12;
  if (this->meetingname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meetingname());
  }

  // .pb.dataParm Data = 14;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // uint32 Path = 1;
  if (this->path() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->path());
  }

  // bool Press = 2;
  if (this->press() != 0) {
    total_size += 1 + 1;
  }

  // bool Switch = 3;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // bool Sort = 4;
  if (this->sort() != 0) {
    total_size += 1 + 1;
  }

  // bool Mute = 10;
  if (this->mute() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Scenario = 5;
  if (this->scenario() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scenario());
  }

  // uint32 Channel = 6;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // uint32 StartChannel = 7;
  if (this->startchannel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startchannel());
  }

  // uint32 EndChannel = 8;
  if (this->endchannel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endchannel());
  }

  // uint32 Volume = 9;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->volume());
  }

  // uint32 Mode = 11;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  // uint32 State = 13;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void multimediaList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.multimediaList)
  GOOGLE_DCHECK_NE(&from, this);
  const multimediaList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const multimediaList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.multimediaList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.multimediaList)
    MergeFrom(*source);
  }
}

void multimediaList::MergeFrom(const multimediaList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.multimediaList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.meetingname().size() > 0) {

    meetingname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meetingname_);
  }
  if (from.has_data()) {
    mutable_data()->::pb::dataParm::MergeFrom(from.data());
  }
  if (from.path() != 0) {
    set_path(from.path());
  }
  if (from.press() != 0) {
    set_press(from.press());
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.sort() != 0) {
    set_sort(from.sort());
  }
  if (from.mute() != 0) {
    set_mute(from.mute());
  }
  if (from.scenario() != 0) {
    set_scenario(from.scenario());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.startchannel() != 0) {
    set_startchannel(from.startchannel());
  }
  if (from.endchannel() != 0) {
    set_endchannel(from.endchannel());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void multimediaList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.multimediaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void multimediaList::CopyFrom(const multimediaList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.multimediaList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool multimediaList::IsInitialized() const {
  return true;
}

void multimediaList::Swap(multimediaList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void multimediaList::InternalSwap(multimediaList* other) {
  using std::swap;
  meetingname_.Swap(&other->meetingname_);
  swap(data_, other->data_);
  swap(path_, other->path_);
  swap(press_, other->press_);
  swap(switch__, other->switch__);
  swap(sort_, other->sort_);
  swap(mute_, other->mute_);
  swap(scenario_, other->scenario_);
  swap(channel_, other->channel_);
  swap(startchannel_, other->startchannel_);
  swap(endchannel_, other->endchannel_);
  swap(volume_, other->volume_);
  swap(mode_, other->mode_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata multimediaList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void dataParm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dataParm::kDevTypeFieldNumber;
const int dataParm::kDevIpFieldNumber;
const int dataParm::kDevPortFieldNumber;
const int dataParm::kDevUsernameFieldNumber;
const int dataParm::kDevPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dataParm::dataParm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsdataParm();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.dataParm)
}
dataParm::dataParm(const dataParm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devip().size() > 0) {
    devip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devip_);
  }
  devport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devport().size() > 0) {
    devport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devport_);
  }
  devusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devusername().size() > 0) {
    devusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devusername_);
  }
  devpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devpassword().size() > 0) {
    devpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devpassword_);
  }
  devtype_ = from.devtype_;
  // @@protoc_insertion_point(copy_constructor:pb.dataParm)
}

void dataParm::SharedCtor() {
  devip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devtype_ = 0u;
  _cached_size_ = 0;
}

dataParm::~dataParm() {
  // @@protoc_insertion_point(destructor:pb.dataParm)
  SharedDtor();
}

void dataParm::SharedDtor() {
  devip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void dataParm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dataParm::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const dataParm& dataParm::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsdataParm();
  return *internal_default_instance();
}

dataParm* dataParm::New(::google::protobuf::Arena* arena) const {
  dataParm* n = new dataParm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void dataParm::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.dataParm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devtype_ = 0u;
  _internal_metadata_.Clear();
}

bool dataParm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.dataParm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DevType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevIp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devip().data(), static_cast<int>(this->devip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.dataParm.DevIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devport()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devport().data(), static_cast<int>(this->devport().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.dataParm.DevPort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevUsername = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devusername().data(), static_cast<int>(this->devusername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.dataParm.DevUsername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevPassword = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devpassword().data(), static_cast<int>(this->devpassword().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.dataParm.DevPassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.dataParm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.dataParm)
  return false;
#undef DO_
}

void dataParm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.dataParm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DevType = 1;
  if (this->devtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->devtype(), output);
  }

  // string DevIp = 2;
  if (this->devip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devip().data(), static_cast<int>(this->devip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devip(), output);
  }

  // string DevPort = 3;
  if (this->devport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devport().data(), static_cast<int>(this->devport().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->devport(), output);
  }

  // string DevUsername = 4;
  if (this->devusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devusername().data(), static_cast<int>(this->devusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->devusername(), output);
  }

  // string DevPassword = 5;
  if (this->devpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devpassword().data(), static_cast<int>(this->devpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->devpassword(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.dataParm)
}

::google::protobuf::uint8* dataParm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.dataParm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DevType = 1;
  if (this->devtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->devtype(), target);
  }

  // string DevIp = 2;
  if (this->devip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devip().data(), static_cast<int>(this->devip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devip(), target);
  }

  // string DevPort = 3;
  if (this->devport().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devport().data(), static_cast<int>(this->devport().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->devport(), target);
  }

  // string DevUsername = 4;
  if (this->devusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devusername().data(), static_cast<int>(this->devusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devusername(), target);
  }

  // string DevPassword = 5;
  if (this->devpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devpassword().data(), static_cast<int>(this->devpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.dataParm.DevPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->devpassword(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.dataParm)
  return target;
}

size_t dataParm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.dataParm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DevIp = 2;
  if (this->devip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devip());
  }

  // string DevPort = 3;
  if (this->devport().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devport());
  }

  // string DevUsername = 4;
  if (this->devusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devusername());
  }

  // string DevPassword = 5;
  if (this->devpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devpassword());
  }

  // uint32 DevType = 1;
  if (this->devtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dataParm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.dataParm)
  GOOGLE_DCHECK_NE(&from, this);
  const dataParm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const dataParm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.dataParm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.dataParm)
    MergeFrom(*source);
  }
}

void dataParm::MergeFrom(const dataParm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.dataParm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devip().size() > 0) {

    devip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devip_);
  }
  if (from.devport().size() > 0) {

    devport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devport_);
  }
  if (from.devusername().size() > 0) {

    devusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devusername_);
  }
  if (from.devpassword().size() > 0) {

    devpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devpassword_);
  }
  if (from.devtype() != 0) {
    set_devtype(from.devtype());
  }
}

void dataParm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.dataParm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dataParm::CopyFrom(const dataParm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.dataParm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dataParm::IsInitialized() const {
  return true;
}

void dataParm::Swap(dataParm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dataParm::InternalSwap(dataParm* other) {
  using std::swap;
  devip_.Swap(&other->devip_);
  devport_.Swap(&other->devport_);
  devusername_.Swap(&other->devusername_);
  devpassword_.Swap(&other->devpassword_);
  swap(devtype_, other->devtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata dataParm::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void multimediaState::InitAsDefaultInstance() {
  ::pb::_multimediaState_default_instance_._instance.get_mutable()->volume_ = const_cast< ::pb::volumeState*>(
      ::pb::volumeState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int multimediaState::kVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

multimediaState::multimediaState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsmultimediaState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.multimediaState)
}
multimediaState::multimediaState(const multimediaState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_volume()) {
    volume_ = new ::pb::volumeState(*from.volume_);
  } else {
    volume_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.multimediaState)
}

void multimediaState::SharedCtor() {
  volume_ = NULL;
  _cached_size_ = 0;
}

multimediaState::~multimediaState() {
  // @@protoc_insertion_point(destructor:pb.multimediaState)
  SharedDtor();
}

void multimediaState::SharedDtor() {
  if (this != internal_default_instance()) delete volume_;
}

void multimediaState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* multimediaState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const multimediaState& multimediaState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsmultimediaState();
  return *internal_default_instance();
}

multimediaState* multimediaState::New(::google::protobuf::Arena* arena) const {
  multimediaState* n = new multimediaState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void multimediaState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.multimediaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && volume_ != NULL) {
    delete volume_;
  }
  volume_ = NULL;
  _internal_metadata_.Clear();
}

bool multimediaState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.multimediaState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.volumeState Volume = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_volume()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.multimediaState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.multimediaState)
  return false;
#undef DO_
}

void multimediaState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.multimediaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.volumeState Volume = 1;
  if (this->has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->volume_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.multimediaState)
}

::google::protobuf::uint8* multimediaState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.multimediaState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.volumeState Volume = 1;
  if (this->has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->volume_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.multimediaState)
  return target;
}

size_t multimediaState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.multimediaState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.volumeState Volume = 1;
  if (this->has_volume()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->volume_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void multimediaState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.multimediaState)
  GOOGLE_DCHECK_NE(&from, this);
  const multimediaState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const multimediaState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.multimediaState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.multimediaState)
    MergeFrom(*source);
  }
}

void multimediaState::MergeFrom(const multimediaState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.multimediaState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_volume()) {
    mutable_volume()->::pb::volumeState::MergeFrom(from.volume());
  }
}

void multimediaState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.multimediaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void multimediaState::CopyFrom(const multimediaState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.multimediaState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool multimediaState::IsInitialized() const {
  return true;
}

void multimediaState::Swap(multimediaState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void multimediaState::InternalSwap(multimediaState* other) {
  using std::swap;
  swap(volume_, other->volume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata multimediaState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void volumeState::InitAsDefaultInstance() {
  ::pb::_volumeState_default_instance_._instance.get_mutable()->output_ = const_cast< ::pb::outputState*>(
      ::pb::outputState::internal_default_instance());
  ::pb::_volumeState_default_instance_._instance.get_mutable()->input_ = const_cast< ::pb::outputState*>(
      ::pb::outputState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int volumeState::kOutputFieldNumber;
const int volumeState::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

volumeState::volumeState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsvolumeState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.volumeState)
}
volumeState::volumeState(const volumeState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output()) {
    output_ = new ::pb::outputState(*from.output_);
  } else {
    output_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::pb::outputState(*from.input_);
  } else {
    input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.volumeState)
}

void volumeState::SharedCtor() {
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&input_) -
      reinterpret_cast<char*>(&output_)) + sizeof(input_));
  _cached_size_ = 0;
}

volumeState::~volumeState() {
  // @@protoc_insertion_point(destructor:pb.volumeState)
  SharedDtor();
}

void volumeState::SharedDtor() {
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete input_;
}

void volumeState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* volumeState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const volumeState& volumeState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsvolumeState();
  return *internal_default_instance();
}

volumeState* volumeState::New(::google::protobuf::Arena* arena) const {
  volumeState* n = new volumeState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void volumeState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.volumeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_ != NULL) {
    delete output_;
  }
  output_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  _internal_metadata_.Clear();
}

bool volumeState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.volumeState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.outputState Output = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.outputState Input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.volumeState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.volumeState)
  return false;
#undef DO_
}

void volumeState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.volumeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.outputState Output = 1;
  if (this->has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->output_, output);
  }

  // .pb.outputState Input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->input_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.volumeState)
}

::google::protobuf::uint8* volumeState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.volumeState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.outputState Output = 1;
  if (this->has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->output_, deterministic, target);
  }

  // .pb.outputState Input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->input_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.volumeState)
  return target;
}

size_t volumeState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.volumeState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.outputState Output = 1;
  if (this->has_output()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_);
  }

  // .pb.outputState Input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void volumeState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.volumeState)
  GOOGLE_DCHECK_NE(&from, this);
  const volumeState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const volumeState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.volumeState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.volumeState)
    MergeFrom(*source);
  }
}

void volumeState::MergeFrom(const volumeState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.volumeState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output()) {
    mutable_output()->::pb::outputState::MergeFrom(from.output());
  }
  if (from.has_input()) {
    mutable_input()->::pb::outputState::MergeFrom(from.input());
  }
}

void volumeState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.volumeState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void volumeState::CopyFrom(const volumeState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.volumeState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool volumeState::IsInitialized() const {
  return true;
}

void volumeState::Swap(volumeState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void volumeState::InternalSwap(volumeState* other) {
  using std::swap;
  swap(output_, other->output_);
  swap(input_, other->input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata volumeState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void outputState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int outputState::kChannelValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

outputState::outputState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsoutputState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.outputState)
}
outputState::outputState(const outputState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channelvalue_(from.channelvalue_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.outputState)
}

void outputState::SharedCtor() {
  _cached_size_ = 0;
}

outputState::~outputState() {
  // @@protoc_insertion_point(destructor:pb.outputState)
  SharedDtor();
}

void outputState::SharedDtor() {
}

void outputState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* outputState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const outputState& outputState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsoutputState();
  return *internal_default_instance();
}

outputState* outputState::New(::google::protobuf::Arena* arena) const {
  outputState* n = new outputState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void outputState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.outputState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channelvalue_.Clear();
  _internal_metadata_.Clear();
}

bool outputState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.outputState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.channelValue ChannelValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_channelvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.outputState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.outputState)
  return false;
#undef DO_
}

void outputState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.outputState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.channelValue ChannelValue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channelvalue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->channelvalue(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.outputState)
}

::google::protobuf::uint8* outputState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.outputState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.channelValue ChannelValue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channelvalue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channelvalue(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.outputState)
  return target;
}

size_t outputState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.outputState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.channelValue ChannelValue = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channelvalue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channelvalue(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void outputState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.outputState)
  GOOGLE_DCHECK_NE(&from, this);
  const outputState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const outputState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.outputState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.outputState)
    MergeFrom(*source);
  }
}

void outputState::MergeFrom(const outputState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.outputState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channelvalue_.MergeFrom(from.channelvalue_);
}

void outputState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.outputState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void outputState::CopyFrom(const outputState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.outputState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool outputState::IsInitialized() const {
  return true;
}

void outputState::Swap(outputState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void outputState::InternalSwap(outputState* other) {
  using std::swap;
  channelvalue_.InternalSwap(&other->channelvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata outputState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void channelValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int channelValue::kChannelFieldNumber;
const int channelValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

channelValue::channelValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultschannelValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.channelValue)
}
channelValue::channelValue(const channelValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:pb.channelValue)
}

void channelValue::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(value_));
  _cached_size_ = 0;
}

channelValue::~channelValue() {
  // @@protoc_insertion_point(destructor:pb.channelValue)
  SharedDtor();
}

void channelValue::SharedDtor() {
}

void channelValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* channelValue::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const channelValue& channelValue::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultschannelValue();
  return *internal_default_instance();
}

channelValue* channelValue::New(::google::protobuf::Arena* arena) const {
  channelValue* n = new channelValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void channelValue::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.channelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool channelValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.channelValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.channelValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.channelValue)
  return false;
#undef DO_
}

void channelValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.channelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // uint32 Value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.channelValue)
}

::google::protobuf::uint8* channelValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.channelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // uint32 Value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.channelValue)
  return target;
}

size_t channelValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.channelValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 Channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // uint32 Value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void channelValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.channelValue)
  GOOGLE_DCHECK_NE(&from, this);
  const channelValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const channelValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.channelValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.channelValue)
    MergeFrom(*source);
  }
}

void channelValue::MergeFrom(const channelValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.channelValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void channelValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.channelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void channelValue::CopyFrom(const channelValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.channelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool channelValue::IsInitialized() const {
  return true;
}

void channelValue::Swap(channelValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void channelValue::InternalSwap(channelValue* other) {
  using std::swap;
  swap(channel_, other->channel_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata channelValue::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void alarmList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int alarmList::kGasAlarmFieldNumber;
const int alarmList::kSmokeAlarmFieldNumber;
const int alarmList::kShockAlarmFieldNumber;
const int alarmList::kLeakAlarmFieldNumber;
const int alarmList::kFallAlarmFieldNumber;
const int alarmList::kHeartAlarmFieldNumber;
const int alarmList::kPoslitionAlarmFieldNumber;
const int alarmList::kLowTemperatureAlarmFieldNumber;
const int alarmList::kCoAlarmFieldNumber;
const int alarmList::kEarmarkAlarmFieldNumber;
const int alarmList::kCollarAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

alarmList::alarmList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsalarmList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.alarmList)
}
alarmList::alarmList(const alarmList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gasalarm_, &from.gasalarm_,
    static_cast<size_t>(reinterpret_cast<char*>(&collaralarm_) -
    reinterpret_cast<char*>(&gasalarm_)) + sizeof(collaralarm_));
  // @@protoc_insertion_point(copy_constructor:pb.alarmList)
}

void alarmList::SharedCtor() {
  ::memset(&gasalarm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collaralarm_) -
      reinterpret_cast<char*>(&gasalarm_)) + sizeof(collaralarm_));
  _cached_size_ = 0;
}

alarmList::~alarmList() {
  // @@protoc_insertion_point(destructor:pb.alarmList)
  SharedDtor();
}

void alarmList::SharedDtor() {
}

void alarmList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* alarmList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const alarmList& alarmList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsalarmList();
  return *internal_default_instance();
}

alarmList* alarmList::New(::google::protobuf::Arena* arena) const {
  alarmList* n = new alarmList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void alarmList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.alarmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gasalarm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collaralarm_) -
      reinterpret_cast<char*>(&gasalarm_)) + sizeof(collaralarm_));
  _internal_metadata_.Clear();
}

bool alarmList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.alarmList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 GasAlarm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gasalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SmokeAlarm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smokealarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ShockAlarm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shockalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeakAlarm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leakalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FallAlarm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fallalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 HeartAlarm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heartalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PoslitionAlarm = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poslitionalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LowTemperatureAlarm = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lowtemperaturealarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CoAlarm = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EarmarkAlarm = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &earmarkalarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CollarAlarm = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &collaralarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.alarmList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.alarmList)
  return false;
#undef DO_
}

void alarmList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.alarmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GasAlarm = 1;
  if (this->gasalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gasalarm(), output);
  }

  // uint32 SmokeAlarm = 2;
  if (this->smokealarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->smokealarm(), output);
  }

  // uint32 ShockAlarm = 3;
  if (this->shockalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shockalarm(), output);
  }

  // uint32 LeakAlarm = 4;
  if (this->leakalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->leakalarm(), output);
  }

  // uint32 FallAlarm = 5;
  if (this->fallalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fallalarm(), output);
  }

  // uint32 HeartAlarm = 6;
  if (this->heartalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->heartalarm(), output);
  }

  // uint32 PoslitionAlarm = 7;
  if (this->poslitionalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->poslitionalarm(), output);
  }

  // uint32 LowTemperatureAlarm = 8;
  if (this->lowtemperaturealarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lowtemperaturealarm(), output);
  }

  // uint32 CoAlarm = 9;
  if (this->coalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->coalarm(), output);
  }

  // uint32 EarmarkAlarm = 10;
  if (this->earmarkalarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->earmarkalarm(), output);
  }

  // uint32 CollarAlarm = 11;
  if (this->collaralarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->collaralarm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.alarmList)
}

::google::protobuf::uint8* alarmList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.alarmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GasAlarm = 1;
  if (this->gasalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gasalarm(), target);
  }

  // uint32 SmokeAlarm = 2;
  if (this->smokealarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->smokealarm(), target);
  }

  // uint32 ShockAlarm = 3;
  if (this->shockalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shockalarm(), target);
  }

  // uint32 LeakAlarm = 4;
  if (this->leakalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->leakalarm(), target);
  }

  // uint32 FallAlarm = 5;
  if (this->fallalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fallalarm(), target);
  }

  // uint32 HeartAlarm = 6;
  if (this->heartalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->heartalarm(), target);
  }

  // uint32 PoslitionAlarm = 7;
  if (this->poslitionalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->poslitionalarm(), target);
  }

  // uint32 LowTemperatureAlarm = 8;
  if (this->lowtemperaturealarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lowtemperaturealarm(), target);
  }

  // uint32 CoAlarm = 9;
  if (this->coalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->coalarm(), target);
  }

  // uint32 EarmarkAlarm = 10;
  if (this->earmarkalarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->earmarkalarm(), target);
  }

  // uint32 CollarAlarm = 11;
  if (this->collaralarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->collaralarm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.alarmList)
  return target;
}

size_t alarmList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.alarmList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 GasAlarm = 1;
  if (this->gasalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gasalarm());
  }

  // uint32 SmokeAlarm = 2;
  if (this->smokealarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->smokealarm());
  }

  // uint32 ShockAlarm = 3;
  if (this->shockalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shockalarm());
  }

  // uint32 LeakAlarm = 4;
  if (this->leakalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leakalarm());
  }

  // uint32 FallAlarm = 5;
  if (this->fallalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fallalarm());
  }

  // uint32 HeartAlarm = 6;
  if (this->heartalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heartalarm());
  }

  // uint32 PoslitionAlarm = 7;
  if (this->poslitionalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->poslitionalarm());
  }

  // uint32 LowTemperatureAlarm = 8;
  if (this->lowtemperaturealarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lowtemperaturealarm());
  }

  // uint32 CoAlarm = 9;
  if (this->coalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coalarm());
  }

  // uint32 EarmarkAlarm = 10;
  if (this->earmarkalarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->earmarkalarm());
  }

  // uint32 CollarAlarm = 11;
  if (this->collaralarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->collaralarm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void alarmList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.alarmList)
  GOOGLE_DCHECK_NE(&from, this);
  const alarmList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const alarmList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.alarmList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.alarmList)
    MergeFrom(*source);
  }
}

void alarmList::MergeFrom(const alarmList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.alarmList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gasalarm() != 0) {
    set_gasalarm(from.gasalarm());
  }
  if (from.smokealarm() != 0) {
    set_smokealarm(from.smokealarm());
  }
  if (from.shockalarm() != 0) {
    set_shockalarm(from.shockalarm());
  }
  if (from.leakalarm() != 0) {
    set_leakalarm(from.leakalarm());
  }
  if (from.fallalarm() != 0) {
    set_fallalarm(from.fallalarm());
  }
  if (from.heartalarm() != 0) {
    set_heartalarm(from.heartalarm());
  }
  if (from.poslitionalarm() != 0) {
    set_poslitionalarm(from.poslitionalarm());
  }
  if (from.lowtemperaturealarm() != 0) {
    set_lowtemperaturealarm(from.lowtemperaturealarm());
  }
  if (from.coalarm() != 0) {
    set_coalarm(from.coalarm());
  }
  if (from.earmarkalarm() != 0) {
    set_earmarkalarm(from.earmarkalarm());
  }
  if (from.collaralarm() != 0) {
    set_collaralarm(from.collaralarm());
  }
}

void alarmList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.alarmList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void alarmList::CopyFrom(const alarmList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.alarmList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool alarmList::IsInitialized() const {
  return true;
}

void alarmList::Swap(alarmList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void alarmList::InternalSwap(alarmList* other) {
  using std::swap;
  swap(gasalarm_, other->gasalarm_);
  swap(smokealarm_, other->smokealarm_);
  swap(shockalarm_, other->shockalarm_);
  swap(leakalarm_, other->leakalarm_);
  swap(fallalarm_, other->fallalarm_);
  swap(heartalarm_, other->heartalarm_);
  swap(poslitionalarm_, other->poslitionalarm_);
  swap(lowtemperaturealarm_, other->lowtemperaturealarm_);
  swap(coalarm_, other->coalarm_);
  swap(earmarkalarm_, other->earmarkalarm_);
  swap(collaralarm_, other->collaralarm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata alarmList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void farmState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int farmState::kNFieldNumber;
const int farmState::kPFieldNumber;
const int farmState::kKFieldNumber;
const int farmState::kO2FieldNumber;
const int farmState::kCO2FieldNumber;
const int farmState::kCOFieldNumber;
const int farmState::kIlluminationFieldNumber;
const int farmState::kWindDirectionFieldNumber;
const int farmState::kPHFieldNumber;
const int farmState::kAirPressureFieldNumber;
const int farmState::kFlowFieldNumber;
const int farmState::kTemperatureFieldNumber;
const int farmState::kEarmarkTemperatureFieldNumber;
const int farmState::kPoslitionFieldNumber;
const int farmState::kCollarPoslitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

farmState::farmState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsfarmState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.farmState)
}
farmState::farmState(const farmState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.n().size() > 0) {
    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p().size() > 0) {
    p_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_);
  }
  k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.k().size() > 0) {
    k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.k_);
  }
  o2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.o2().size() > 0) {
    o2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.o2_);
  }
  co2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.co2().size() > 0) {
    co2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co2_);
  }
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.co().size() > 0) {
    co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
  }
  illumination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.illumination().size() > 0) {
    illumination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.illumination_);
  }
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.winddirection().size() > 0) {
    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  ph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ph().size() > 0) {
    ph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ph_);
  }
  airpressure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.airpressure().size() > 0) {
    airpressure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.airpressure_);
  }
  flow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flow().size() > 0) {
    flow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flow_);
  }
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.temperature().size() > 0) {
    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  earmarktemperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.earmarktemperature().size() > 0) {
    earmarktemperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.earmarktemperature_);
  }
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.poslition().size() > 0) {
    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  collarposlition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collarposlition().size() > 0) {
    collarposlition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collarposlition_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.farmState)
}

void farmState::SharedCtor() {
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  illumination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  airpressure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flow_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  earmarktemperature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collarposlition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

farmState::~farmState() {
  // @@protoc_insertion_point(destructor:pb.farmState)
  SharedDtor();
}

void farmState::SharedDtor() {
  n_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  k_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  illumination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  airpressure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flow_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temperature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  earmarktemperature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collarposlition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void farmState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* farmState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const farmState& farmState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsfarmState();
  return *internal_default_instance();
}

farmState* farmState::New(::google::protobuf::Arena* arena) const {
  farmState* n = new farmState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void farmState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.farmState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  k_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  o2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  co_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  illumination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winddirection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  airpressure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  temperature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  earmarktemperature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poslition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collarposlition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool farmState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.farmState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string N = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_n()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->n().data(), static_cast<int>(this->n().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.N"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string P = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_p()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->p().data(), static_cast<int>(this->p().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.P"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string K = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k().data(), static_cast<int>(this->k().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.K"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string O2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_o2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->o2().data(), static_cast<int>(this->o2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.O2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CO2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_co2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->co2().data(), static_cast<int>(this->co2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.CO2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CO = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_co()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->co().data(), static_cast<int>(this->co().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.CO"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Illumination = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_illumination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->illumination().data(), static_cast<int>(this->illumination().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.Illumination"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string WindDirection = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winddirection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->winddirection().data(), static_cast<int>(this->winddirection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.WindDirection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PH = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ph()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ph().data(), static_cast<int>(this->ph().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.PH"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AirPressure = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_airpressure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->airpressure().data(), static_cast<int>(this->airpressure().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.AirPressure"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Flow = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flow()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flow().data(), static_cast<int>(this->flow().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.Flow"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Temperature = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_temperature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->temperature().data(), static_cast<int>(this->temperature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.Temperature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string EarmarkTemperature = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_earmarktemperature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->earmarktemperature().data(), static_cast<int>(this->earmarktemperature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.EarmarkTemperature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Poslition = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poslition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->poslition().data(), static_cast<int>(this->poslition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.Poslition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CollarPoslition = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collarposlition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collarposlition().data(), static_cast<int>(this->collarposlition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmState.CollarPoslition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.farmState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.farmState)
  return false;
#undef DO_
}

void farmState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.farmState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string N = 1;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.N");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->n(), output);
  }

  // string P = 2;
  if (this->p().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p().data(), static_cast<int>(this->p().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.P");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->p(), output);
  }

  // string K = 3;
  if (this->k().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k().data(), static_cast<int>(this->k().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.K");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->k(), output);
  }

  // string O2 = 4;
  if (this->o2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->o2().data(), static_cast<int>(this->o2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.O2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->o2(), output);
  }

  // string CO2 = 5;
  if (this->co2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co2().data(), static_cast<int>(this->co2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CO2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->co2(), output);
  }

  // string CO = 6;
  if (this->co().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co().data(), static_cast<int>(this->co().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CO");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->co(), output);
  }

  // string Illumination = 7;
  if (this->illumination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->illumination().data(), static_cast<int>(this->illumination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Illumination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->illumination(), output);
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.WindDirection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->winddirection(), output);
  }

  // string PH = 9;
  if (this->ph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ph().data(), static_cast<int>(this->ph().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.PH");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ph(), output);
  }

  // string AirPressure = 10;
  if (this->airpressure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->airpressure().data(), static_cast<int>(this->airpressure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.AirPressure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->airpressure(), output);
  }

  // string Flow = 11;
  if (this->flow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flow().data(), static_cast<int>(this->flow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Flow");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->flow(), output);
  }

  // string Temperature = 12;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Temperature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->temperature(), output);
  }

  // string EarmarkTemperature = 13;
  if (this->earmarktemperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->earmarktemperature().data(), static_cast<int>(this->earmarktemperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.EarmarkTemperature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->earmarktemperature(), output);
  }

  // string Poslition = 14;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Poslition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->poslition(), output);
  }

  // string CollarPoslition = 15;
  if (this->collarposlition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collarposlition().data(), static_cast<int>(this->collarposlition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CollarPoslition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->collarposlition(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.farmState)
}

::google::protobuf::uint8* farmState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.farmState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string N = 1;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.N");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->n(), target);
  }

  // string P = 2;
  if (this->p().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p().data(), static_cast<int>(this->p().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.P");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->p(), target);
  }

  // string K = 3;
  if (this->k().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k().data(), static_cast<int>(this->k().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.K");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->k(), target);
  }

  // string O2 = 4;
  if (this->o2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->o2().data(), static_cast<int>(this->o2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.O2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->o2(), target);
  }

  // string CO2 = 5;
  if (this->co2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co2().data(), static_cast<int>(this->co2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CO2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->co2(), target);
  }

  // string CO = 6;
  if (this->co().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->co().data(), static_cast<int>(this->co().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CO");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->co(), target);
  }

  // string Illumination = 7;
  if (this->illumination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->illumination().data(), static_cast<int>(this->illumination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Illumination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->illumination(), target);
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winddirection().data(), static_cast<int>(this->winddirection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.WindDirection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->winddirection(), target);
  }

  // string PH = 9;
  if (this->ph().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ph().data(), static_cast<int>(this->ph().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.PH");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ph(), target);
  }

  // string AirPressure = 10;
  if (this->airpressure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->airpressure().data(), static_cast<int>(this->airpressure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.AirPressure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->airpressure(), target);
  }

  // string Flow = 11;
  if (this->flow().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flow().data(), static_cast<int>(this->flow().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Flow");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->flow(), target);
  }

  // string Temperature = 12;
  if (this->temperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temperature().data(), static_cast<int>(this->temperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Temperature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->temperature(), target);
  }

  // string EarmarkTemperature = 13;
  if (this->earmarktemperature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->earmarktemperature().data(), static_cast<int>(this->earmarktemperature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.EarmarkTemperature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->earmarktemperature(), target);
  }

  // string Poslition = 14;
  if (this->poslition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poslition().data(), static_cast<int>(this->poslition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.Poslition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->poslition(), target);
  }

  // string CollarPoslition = 15;
  if (this->collarposlition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collarposlition().data(), static_cast<int>(this->collarposlition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmState.CollarPoslition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->collarposlition(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.farmState)
  return target;
}

size_t farmState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.farmState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string N = 1;
  if (this->n().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->n());
  }

  // string P = 2;
  if (this->p().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->p());
  }

  // string K = 3;
  if (this->k().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->k());
  }

  // string O2 = 4;
  if (this->o2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->o2());
  }

  // string CO2 = 5;
  if (this->co2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->co2());
  }

  // string CO = 6;
  if (this->co().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->co());
  }

  // string Illumination = 7;
  if (this->illumination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->illumination());
  }

  // string WindDirection = 8;
  if (this->winddirection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winddirection());
  }

  // string PH = 9;
  if (this->ph().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ph());
  }

  // string AirPressure = 10;
  if (this->airpressure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->airpressure());
  }

  // string Flow = 11;
  if (this->flow().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flow());
  }

  // string Temperature = 12;
  if (this->temperature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->temperature());
  }

  // string EarmarkTemperature = 13;
  if (this->earmarktemperature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->earmarktemperature());
  }

  // string Poslition = 14;
  if (this->poslition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->poslition());
  }

  // string CollarPoslition = 15;
  if (this->collarposlition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collarposlition());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void farmState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.farmState)
  GOOGLE_DCHECK_NE(&from, this);
  const farmState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const farmState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.farmState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.farmState)
    MergeFrom(*source);
  }
}

void farmState::MergeFrom(const farmState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.farmState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n().size() > 0) {

    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  if (from.p().size() > 0) {

    p_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_);
  }
  if (from.k().size() > 0) {

    k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.k_);
  }
  if (from.o2().size() > 0) {

    o2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.o2_);
  }
  if (from.co2().size() > 0) {

    co2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co2_);
  }
  if (from.co().size() > 0) {

    co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
  }
  if (from.illumination().size() > 0) {

    illumination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.illumination_);
  }
  if (from.winddirection().size() > 0) {

    winddirection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winddirection_);
  }
  if (from.ph().size() > 0) {

    ph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ph_);
  }
  if (from.airpressure().size() > 0) {

    airpressure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.airpressure_);
  }
  if (from.flow().size() > 0) {

    flow_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flow_);
  }
  if (from.temperature().size() > 0) {

    temperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temperature_);
  }
  if (from.earmarktemperature().size() > 0) {

    earmarktemperature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.earmarktemperature_);
  }
  if (from.poslition().size() > 0) {

    poslition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poslition_);
  }
  if (from.collarposlition().size() > 0) {

    collarposlition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collarposlition_);
  }
}

void farmState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.farmState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void farmState::CopyFrom(const farmState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.farmState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool farmState::IsInitialized() const {
  return true;
}

void farmState::Swap(farmState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void farmState::InternalSwap(farmState* other) {
  using std::swap;
  n_.Swap(&other->n_);
  p_.Swap(&other->p_);
  k_.Swap(&other->k_);
  o2_.Swap(&other->o2_);
  co2_.Swap(&other->co2_);
  co_.Swap(&other->co_);
  illumination_.Swap(&other->illumination_);
  winddirection_.Swap(&other->winddirection_);
  ph_.Swap(&other->ph_);
  airpressure_.Swap(&other->airpressure_);
  flow_.Swap(&other->flow_);
  temperature_.Swap(&other->temperature_);
  earmarktemperature_.Swap(&other->earmarktemperature_);
  poslition_.Swap(&other->poslition_);
  collarposlition_.Swap(&other->collarposlition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata farmState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void farmList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int farmList::kSwitchFieldNumber;
const int farmList::kFlowSwitchFieldNumber;
const int farmList::kWarmUpSwitchFieldNumber;
const int farmList::kShadeTheSunSwitchFieldNumber;
const int farmList::kRainSwitchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

farmList::farmList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsfarmList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.farmList)
}
farmList::farmList(const farmList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.switch_().size() > 0) {
    switch__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.switch__);
  }
  flowswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flowswitch().size() > 0) {
    flowswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flowswitch_);
  }
  warmupswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.warmupswitch().size() > 0) {
    warmupswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warmupswitch_);
  }
  shadethesunswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shadethesunswitch().size() > 0) {
    shadethesunswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shadethesunswitch_);
  }
  rainswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rainswitch().size() > 0) {
    rainswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rainswitch_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.farmList)
}

void farmList::SharedCtor() {
  switch__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flowswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warmupswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shadethesunswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rainswitch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

farmList::~farmList() {
  // @@protoc_insertion_point(destructor:pb.farmList)
  SharedDtor();
}

void farmList::SharedDtor() {
  switch__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flowswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warmupswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shadethesunswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rainswitch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void farmList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* farmList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const farmList& farmList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsfarmList();
  return *internal_default_instance();
}

farmList* farmList::New(::google::protobuf::Arena* arena) const {
  farmList* n = new farmList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void farmList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.farmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flowswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warmupswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shadethesunswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rainswitch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool farmList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.farmList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Switch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_switch_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->switch_().data(), static_cast<int>(this->switch_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmList.Switch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FlowSwitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flowswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flowswitch().data(), static_cast<int>(this->flowswitch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmList.FlowSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string WarmUpSwitch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warmupswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warmupswitch().data(), static_cast<int>(this->warmupswitch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmList.WarmUpSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ShadeTheSunSwitch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shadethesunswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shadethesunswitch().data(), static_cast<int>(this->shadethesunswitch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmList.ShadeTheSunSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rainSwitch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rainswitch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rainswitch().data(), static_cast<int>(this->rainswitch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.farmList.rainSwitch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.farmList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.farmList)
  return false;
#undef DO_
}

void farmList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.farmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Switch = 1;
  if (this->switch_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->switch_().data(), static_cast<int>(this->switch_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.Switch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->switch_(), output);
  }

  // string FlowSwitch = 2;
  if (this->flowswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flowswitch().data(), static_cast<int>(this->flowswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.FlowSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->flowswitch(), output);
  }

  // string WarmUpSwitch = 3;
  if (this->warmupswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warmupswitch().data(), static_cast<int>(this->warmupswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.WarmUpSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->warmupswitch(), output);
  }

  // string ShadeTheSunSwitch = 4;
  if (this->shadethesunswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shadethesunswitch().data(), static_cast<int>(this->shadethesunswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.ShadeTheSunSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->shadethesunswitch(), output);
  }

  // string rainSwitch = 5;
  if (this->rainswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rainswitch().data(), static_cast<int>(this->rainswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.rainSwitch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->rainswitch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.farmList)
}

::google::protobuf::uint8* farmList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.farmList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Switch = 1;
  if (this->switch_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->switch_().data(), static_cast<int>(this->switch_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.Switch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->switch_(), target);
  }

  // string FlowSwitch = 2;
  if (this->flowswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flowswitch().data(), static_cast<int>(this->flowswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.FlowSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->flowswitch(), target);
  }

  // string WarmUpSwitch = 3;
  if (this->warmupswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warmupswitch().data(), static_cast<int>(this->warmupswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.WarmUpSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->warmupswitch(), target);
  }

  // string ShadeTheSunSwitch = 4;
  if (this->shadethesunswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shadethesunswitch().data(), static_cast<int>(this->shadethesunswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.ShadeTheSunSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->shadethesunswitch(), target);
  }

  // string rainSwitch = 5;
  if (this->rainswitch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rainswitch().data(), static_cast<int>(this->rainswitch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.farmList.rainSwitch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->rainswitch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.farmList)
  return target;
}

size_t farmList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.farmList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Switch = 1;
  if (this->switch_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->switch_());
  }

  // string FlowSwitch = 2;
  if (this->flowswitch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flowswitch());
  }

  // string WarmUpSwitch = 3;
  if (this->warmupswitch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warmupswitch());
  }

  // string ShadeTheSunSwitch = 4;
  if (this->shadethesunswitch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shadethesunswitch());
  }

  // string rainSwitch = 5;
  if (this->rainswitch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rainswitch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void farmList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.farmList)
  GOOGLE_DCHECK_NE(&from, this);
  const farmList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const farmList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.farmList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.farmList)
    MergeFrom(*source);
  }
}

void farmList::MergeFrom(const farmList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.farmList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.switch_().size() > 0) {

    switch__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.switch__);
  }
  if (from.flowswitch().size() > 0) {

    flowswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flowswitch_);
  }
  if (from.warmupswitch().size() > 0) {

    warmupswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warmupswitch_);
  }
  if (from.shadethesunswitch().size() > 0) {

    shadethesunswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shadethesunswitch_);
  }
  if (from.rainswitch().size() > 0) {

    rainswitch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rainswitch_);
  }
}

void farmList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.farmList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void farmList::CopyFrom(const farmList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.farmList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool farmList::IsInitialized() const {
  return true;
}

void farmList::Swap(farmList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void farmList::InternalSwap(farmList* other) {
  using std::swap;
  switch__.Swap(&other->switch__);
  flowswitch_.Swap(&other->flowswitch_);
  warmupswitch_.Swap(&other->warmupswitch_);
  shadethesunswitch_.Swap(&other->shadethesunswitch_);
  rainswitch_.Swap(&other->rainswitch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata farmList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void lightList::InitAsDefaultInstance() {
  ::pb::_lightList_default_instance_._instance.get_mutable()->lightextra_ = const_cast< ::pb::lightExtra*>(
      ::pb::lightExtra::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lightList::kSwitchFieldNumber;
const int lightList::kWorkModeFieldNumber;
const int lightList::kBrightFieldNumber;
const int lightList::kTempFieldNumber;
const int lightList::kColourFieldNumber;
const int lightList::kSceneFieldNumber;
const int lightList::kCountCloseFieldNumber;
const int lightList::kCountOpenFieldNumber;
const int lightList::kControlFieldNumber;
const int lightList::kSleepFieldNumber;
const int lightList::kWakeUpFieldNumber;
const int lightList::kPowerMemoryFieldNumber;
const int lightList::kDoNotdisturbFieldNumber;
const int lightList::kMicMusicFieldNumber;
const int lightList::kMusicFieldNumber;
const int lightList::kLightExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lightList::lightList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultslightList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lightList)
}
lightList::lightList(const lightList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      workmode_(from.workmode_),
      scene_(from.scene_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  colour_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.colour().size() > 0) {
    colour_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.colour_);
  }
  control_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.control().size() > 0) {
    control_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_);
  }
  micmusic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.micmusic().size() > 0) {
    micmusic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.micmusic_);
  }
  music_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.music().size() > 0) {
    music_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.music_);
  }
  if (from.has_lightextra()) {
    lightextra_ = new ::pb::lightExtra(*from.lightextra_);
  } else {
    lightextra_ = NULL;
  }
  ::memcpy(&switch__, &from.switch__,
    static_cast<size_t>(reinterpret_cast<char*>(&donotdisturb_) -
    reinterpret_cast<char*>(&switch__)) + sizeof(donotdisturb_));
  // @@protoc_insertion_point(copy_constructor:pb.lightList)
}

void lightList::SharedCtor() {
  colour_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  control_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  micmusic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  music_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lightextra_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&donotdisturb_) -
      reinterpret_cast<char*>(&lightextra_)) + sizeof(donotdisturb_));
  _cached_size_ = 0;
}

lightList::~lightList() {
  // @@protoc_insertion_point(destructor:pb.lightList)
  SharedDtor();
}

void lightList::SharedDtor() {
  colour_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  control_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  micmusic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  music_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete lightextra_;
}

void lightList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lightList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const lightList& lightList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultslightList();
  return *internal_default_instance();
}

lightList* lightList::New(::google::protobuf::Arena* arena) const {
  lightList* n = new lightList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lightList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lightList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workmode_.Clear();
  scene_.Clear();
  colour_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  control_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  micmusic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  music_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && lightextra_ != NULL) {
    delete lightextra_;
  }
  lightextra_ = NULL;
  ::memset(&switch__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&donotdisturb_) -
      reinterpret_cast<char*>(&switch__)) + sizeof(donotdisturb_));
  _internal_metadata_.Clear();
}

bool lightList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.lightList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Switch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.workMode WorkMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_workmode(static_cast< ::pb::workMode >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_workmode(static_cast< ::pb::workMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Bright = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Temp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Colour = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_colour()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->colour().data(), static_cast<int>(this->colour().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightList.Colour"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.sceneMode Scene = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_scene(static_cast< ::pb::sceneMode >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_scene(static_cast< ::pb::sceneMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CountClose = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countclose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CountOpen = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countopen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Control = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_control()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->control().data(), static_cast<int>(this->control().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightList.Control"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Sleep = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sleep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WakeUp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wakeup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PowerMemory = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &powermemory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DoNotdisturb = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &donotdisturb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MicMusic = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_micmusic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->micmusic().data(), static_cast<int>(this->micmusic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightList.MicMusic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Music = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_music()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->music().data(), static_cast<int>(this->music().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightList.Music"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.lightExtra lightExtra = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lightextra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.lightList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.lightList)
  return false;
#undef DO_
}

void lightList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.lightList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->switch_(), output);
  }

  // repeated .pb.workMode WorkMode = 2;
  if (this->workmode_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_workmode_cached_byte_size_));
  }
  for (int i = 0, n = this->workmode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->workmode(i), output);
  }

  // uint32 Bright = 3;
  if (this->bright() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bright(), output);
  }

  // uint32 Temp = 4;
  if (this->temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->temp(), output);
  }

  // string Colour = 5;
  if (this->colour().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colour().data(), static_cast<int>(this->colour().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Colour");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->colour(), output);
  }

  // repeated .pb.sceneMode Scene = 6;
  if (this->scene_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_scene_cached_byte_size_));
  }
  for (int i = 0, n = this->scene_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->scene(i), output);
  }

  // uint32 CountClose = 7;
  if (this->countclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->countclose(), output);
  }

  // uint32 CountOpen = 8;
  if (this->countopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->countopen(), output);
  }

  // string Control = 9;
  if (this->control().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control().data(), static_cast<int>(this->control().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Control");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->control(), output);
  }

  // uint32 Sleep = 10;
  if (this->sleep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->sleep(), output);
  }

  // uint32 WakeUp = 11;
  if (this->wakeup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->wakeup(), output);
  }

  // uint32 PowerMemory = 12;
  if (this->powermemory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->powermemory(), output);
  }

  // uint32 DoNotdisturb = 13;
  if (this->donotdisturb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->donotdisturb(), output);
  }

  // string MicMusic = 14;
  if (this->micmusic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->micmusic().data(), static_cast<int>(this->micmusic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.MicMusic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->micmusic(), output);
  }

  // string Music = 15;
  if (this->music().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->music().data(), static_cast<int>(this->music().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Music");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->music(), output);
  }

  // .pb.lightExtra lightExtra = 16;
  if (this->has_lightextra()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->lightextra_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.lightList)
}

::google::protobuf::uint8* lightList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.lightList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->switch_(), target);
  }

  // repeated .pb.workMode WorkMode = 2;
  if (this->workmode_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _workmode_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->workmode_, target);
  }

  // uint32 Bright = 3;
  if (this->bright() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bright(), target);
  }

  // uint32 Temp = 4;
  if (this->temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->temp(), target);
  }

  // string Colour = 5;
  if (this->colour().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colour().data(), static_cast<int>(this->colour().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Colour");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->colour(), target);
  }

  // repeated .pb.sceneMode Scene = 6;
  if (this->scene_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _scene_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->scene_, target);
  }

  // uint32 CountClose = 7;
  if (this->countclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->countclose(), target);
  }

  // uint32 CountOpen = 8;
  if (this->countopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->countopen(), target);
  }

  // string Control = 9;
  if (this->control().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control().data(), static_cast<int>(this->control().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Control");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->control(), target);
  }

  // uint32 Sleep = 10;
  if (this->sleep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->sleep(), target);
  }

  // uint32 WakeUp = 11;
  if (this->wakeup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->wakeup(), target);
  }

  // uint32 PowerMemory = 12;
  if (this->powermemory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->powermemory(), target);
  }

  // uint32 DoNotdisturb = 13;
  if (this->donotdisturb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->donotdisturb(), target);
  }

  // string MicMusic = 14;
  if (this->micmusic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->micmusic().data(), static_cast<int>(this->micmusic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.MicMusic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->micmusic(), target);
  }

  // string Music = 15;
  if (this->music().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->music().data(), static_cast<int>(this->music().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightList.Music");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->music(), target);
  }

  // .pb.lightExtra lightExtra = 16;
  if (this->has_lightextra()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->lightextra_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lightList)
  return target;
}

size_t lightList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lightList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.workMode WorkMode = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->workmode_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->workmode(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _workmode_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pb.sceneMode Scene = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->scene_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->scene(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scene_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string Colour = 5;
  if (this->colour().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->colour());
  }

  // string Control = 9;
  if (this->control().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->control());
  }

  // string MicMusic = 14;
  if (this->micmusic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->micmusic());
  }

  // string Music = 15;
  if (this->music().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->music());
  }

  // .pb.lightExtra lightExtra = 16;
  if (this->has_lightextra()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lightextra_);
  }

  // bool Switch = 1;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Bright = 3;
  if (this->bright() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bright());
  }

  // uint32 Temp = 4;
  if (this->temp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->temp());
  }

  // uint32 CountClose = 7;
  if (this->countclose() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->countclose());
  }

  // uint32 CountOpen = 8;
  if (this->countopen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->countopen());
  }

  // uint32 Sleep = 10;
  if (this->sleep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sleep());
  }

  // uint32 WakeUp = 11;
  if (this->wakeup() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wakeup());
  }

  // uint32 PowerMemory = 12;
  if (this->powermemory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->powermemory());
  }

  // uint32 DoNotdisturb = 13;
  if (this->donotdisturb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->donotdisturb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lightList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lightList)
  GOOGLE_DCHECK_NE(&from, this);
  const lightList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const lightList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lightList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lightList)
    MergeFrom(*source);
  }
}

void lightList::MergeFrom(const lightList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lightList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workmode_.MergeFrom(from.workmode_);
  scene_.MergeFrom(from.scene_);
  if (from.colour().size() > 0) {

    colour_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.colour_);
  }
  if (from.control().size() > 0) {

    control_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_);
  }
  if (from.micmusic().size() > 0) {

    micmusic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.micmusic_);
  }
  if (from.music().size() > 0) {

    music_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.music_);
  }
  if (from.has_lightextra()) {
    mutable_lightextra()->::pb::lightExtra::MergeFrom(from.lightextra());
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.bright() != 0) {
    set_bright(from.bright());
  }
  if (from.temp() != 0) {
    set_temp(from.temp());
  }
  if (from.countclose() != 0) {
    set_countclose(from.countclose());
  }
  if (from.countopen() != 0) {
    set_countopen(from.countopen());
  }
  if (from.sleep() != 0) {
    set_sleep(from.sleep());
  }
  if (from.wakeup() != 0) {
    set_wakeup(from.wakeup());
  }
  if (from.powermemory() != 0) {
    set_powermemory(from.powermemory());
  }
  if (from.donotdisturb() != 0) {
    set_donotdisturb(from.donotdisturb());
  }
}

void lightList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lightList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lightList::CopyFrom(const lightList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lightList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lightList::IsInitialized() const {
  return true;
}

void lightList::Swap(lightList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lightList::InternalSwap(lightList* other) {
  using std::swap;
  workmode_.InternalSwap(&other->workmode_);
  scene_.InternalSwap(&other->scene_);
  colour_.Swap(&other->colour_);
  control_.Swap(&other->control_);
  micmusic_.Swap(&other->micmusic_);
  music_.Swap(&other->music_);
  swap(lightextra_, other->lightextra_);
  swap(switch__, other->switch__);
  swap(bright_, other->bright_);
  swap(temp_, other->temp_);
  swap(countclose_, other->countclose_);
  swap(countopen_, other->countopen_);
  swap(sleep_, other->sleep_);
  swap(wakeup_, other->wakeup_);
  swap(powermemory_, other->powermemory_);
  swap(donotdisturb_, other->donotdisturb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lightList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void lightExtra::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lightExtra::kSwitchGradintFieldNumber;
const int lightExtra::kMixLightSceneFieldNumber;
const int lightExtra::kMixRgbcwFieldNumber;
const int lightExtra::kSegmentDimmingFieldNumber;
const int lightExtra::kSwitchNightLightFieldNumber;
const int lightExtra::kCycleTimingFieldNumber;
const int lightExtra::kRandomTimingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lightExtra::lightExtra()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultslightExtra();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lightExtra)
}
lightExtra::lightExtra(const lightExtra& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mixrgbcw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mixrgbcw().size() > 0) {
    mixrgbcw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixrgbcw_);
  }
  segmentdimming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.segmentdimming().size() > 0) {
    segmentdimming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segmentdimming_);
  }
  cycletiming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cycletiming().size() > 0) {
    cycletiming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cycletiming_);
  }
  randomtiming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.randomtiming().size() > 0) {
    randomtiming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomtiming_);
  }
  ::memcpy(&switchgradint_, &from.switchgradint_,
    static_cast<size_t>(reinterpret_cast<char*>(&switchnightlight_) -
    reinterpret_cast<char*>(&switchgradint_)) + sizeof(switchnightlight_));
  // @@protoc_insertion_point(copy_constructor:pb.lightExtra)
}

void lightExtra::SharedCtor() {
  mixrgbcw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segmentdimming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cycletiming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomtiming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&switchgradint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switchnightlight_) -
      reinterpret_cast<char*>(&switchgradint_)) + sizeof(switchnightlight_));
  _cached_size_ = 0;
}

lightExtra::~lightExtra() {
  // @@protoc_insertion_point(destructor:pb.lightExtra)
  SharedDtor();
}

void lightExtra::SharedDtor() {
  mixrgbcw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segmentdimming_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cycletiming_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomtiming_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void lightExtra::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lightExtra::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const lightExtra& lightExtra::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultslightExtra();
  return *internal_default_instance();
}

lightExtra* lightExtra::New(::google::protobuf::Arena* arena) const {
  lightExtra* n = new lightExtra;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lightExtra::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lightExtra)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mixrgbcw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segmentdimming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cycletiming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomtiming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&switchgradint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switchnightlight_) -
      reinterpret_cast<char*>(&switchgradint_)) + sizeof(switchnightlight_));
  _internal_metadata_.Clear();
}

bool lightExtra::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.lightExtra)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 SwitchGradint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &switchgradint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MixLightScene = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mixlightscene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MixRgbcw = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mixrgbcw()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mixrgbcw().data(), static_cast<int>(this->mixrgbcw().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightExtra.MixRgbcw"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SegmentDimming = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segmentdimming()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segmentdimming().data(), static_cast<int>(this->segmentdimming().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightExtra.SegmentDimming"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool SwitchNightLight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switchnightlight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CycleTiming = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cycletiming()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cycletiming().data(), static_cast<int>(this->cycletiming().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightExtra.CycleTiming"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RandomTiming = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_randomtiming()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->randomtiming().data(), static_cast<int>(this->randomtiming().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.lightExtra.RandomTiming"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.lightExtra)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.lightExtra)
  return false;
#undef DO_
}

void lightExtra::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.lightExtra)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SwitchGradint = 1;
  if (this->switchgradint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->switchgradint(), output);
  }

  // uint32 MixLightScene = 2;
  if (this->mixlightscene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mixlightscene(), output);
  }

  // string MixRgbcw = 3;
  if (this->mixrgbcw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixrgbcw().data(), static_cast<int>(this->mixrgbcw().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.MixRgbcw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mixrgbcw(), output);
  }

  // string SegmentDimming = 4;
  if (this->segmentdimming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segmentdimming().data(), static_cast<int>(this->segmentdimming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.SegmentDimming");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->segmentdimming(), output);
  }

  // bool SwitchNightLight = 5;
  if (this->switchnightlight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->switchnightlight(), output);
  }

  // string CycleTiming = 6;
  if (this->cycletiming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cycletiming().data(), static_cast<int>(this->cycletiming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.CycleTiming");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cycletiming(), output);
  }

  // string RandomTiming = 7;
  if (this->randomtiming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomtiming().data(), static_cast<int>(this->randomtiming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.RandomTiming");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->randomtiming(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.lightExtra)
}

::google::protobuf::uint8* lightExtra::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.lightExtra)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SwitchGradint = 1;
  if (this->switchgradint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->switchgradint(), target);
  }

  // uint32 MixLightScene = 2;
  if (this->mixlightscene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mixlightscene(), target);
  }

  // string MixRgbcw = 3;
  if (this->mixrgbcw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixrgbcw().data(), static_cast<int>(this->mixrgbcw().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.MixRgbcw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mixrgbcw(), target);
  }

  // string SegmentDimming = 4;
  if (this->segmentdimming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segmentdimming().data(), static_cast<int>(this->segmentdimming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.SegmentDimming");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->segmentdimming(), target);
  }

  // bool SwitchNightLight = 5;
  if (this->switchnightlight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->switchnightlight(), target);
  }

  // string CycleTiming = 6;
  if (this->cycletiming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cycletiming().data(), static_cast<int>(this->cycletiming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.CycleTiming");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cycletiming(), target);
  }

  // string RandomTiming = 7;
  if (this->randomtiming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->randomtiming().data(), static_cast<int>(this->randomtiming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.lightExtra.RandomTiming");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->randomtiming(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lightExtra)
  return target;
}

size_t lightExtra::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lightExtra)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string MixRgbcw = 3;
  if (this->mixrgbcw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mixrgbcw());
  }

  // string SegmentDimming = 4;
  if (this->segmentdimming().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segmentdimming());
  }

  // string CycleTiming = 6;
  if (this->cycletiming().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cycletiming());
  }

  // string RandomTiming = 7;
  if (this->randomtiming().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->randomtiming());
  }

  // uint32 SwitchGradint = 1;
  if (this->switchgradint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->switchgradint());
  }

  // uint32 MixLightScene = 2;
  if (this->mixlightscene() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mixlightscene());
  }

  // bool SwitchNightLight = 5;
  if (this->switchnightlight() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lightExtra::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lightExtra)
  GOOGLE_DCHECK_NE(&from, this);
  const lightExtra* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const lightExtra>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lightExtra)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lightExtra)
    MergeFrom(*source);
  }
}

void lightExtra::MergeFrom(const lightExtra& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lightExtra)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mixrgbcw().size() > 0) {

    mixrgbcw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixrgbcw_);
  }
  if (from.segmentdimming().size() > 0) {

    segmentdimming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segmentdimming_);
  }
  if (from.cycletiming().size() > 0) {

    cycletiming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cycletiming_);
  }
  if (from.randomtiming().size() > 0) {

    randomtiming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomtiming_);
  }
  if (from.switchgradint() != 0) {
    set_switchgradint(from.switchgradint());
  }
  if (from.mixlightscene() != 0) {
    set_mixlightscene(from.mixlightscene());
  }
  if (from.switchnightlight() != 0) {
    set_switchnightlight(from.switchnightlight());
  }
}

void lightExtra::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lightExtra)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lightExtra::CopyFrom(const lightExtra& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lightExtra)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lightExtra::IsInitialized() const {
  return true;
}

void lightExtra::Swap(lightExtra* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lightExtra::InternalSwap(lightExtra* other) {
  using std::swap;
  mixrgbcw_.Swap(&other->mixrgbcw_);
  segmentdimming_.Swap(&other->segmentdimming_);
  cycletiming_.Swap(&other->cycletiming_);
  randomtiming_.Swap(&other->randomtiming_);
  swap(switchgradint_, other->switchgradint_);
  swap(mixlightscene_, other->mixlightscene_);
  swap(switchnightlight_, other->switchnightlight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lightExtra::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void lightState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lightState::lightState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultslightState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.lightState)
}
lightState::lightState(const lightState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.lightState)
}

void lightState::SharedCtor() {
  _cached_size_ = 0;
}

lightState::~lightState() {
  // @@protoc_insertion_point(destructor:pb.lightState)
  SharedDtor();
}

void lightState::SharedDtor() {
}

void lightState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lightState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const lightState& lightState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultslightState();
  return *internal_default_instance();
}

lightState* lightState::New(::google::protobuf::Arena* arena) const {
  lightState* n = new lightState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lightState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.lightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool lightState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.lightState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.lightState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.lightState)
  return false;
#undef DO_
}

void lightState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.lightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.lightState)
}

::google::protobuf::uint8* lightState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.lightState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.lightState)
  return target;
}

size_t lightState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.lightState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lightState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.lightState)
  GOOGLE_DCHECK_NE(&from, this);
  const lightState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const lightState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.lightState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.lightState)
    MergeFrom(*source);
  }
}

void lightState::MergeFrom(const lightState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.lightState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void lightState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.lightState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lightState::CopyFrom(const lightState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.lightState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lightState::IsInitialized() const {
  return true;
}

void lightState::Swap(lightState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lightState::InternalSwap(lightState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lightState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void airConditioning::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

airConditioning::airConditioning()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsairConditioning();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.airConditioning)
}
airConditioning::airConditioning(const airConditioning& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.airConditioning)
}

void airConditioning::SharedCtor() {
  _cached_size_ = 0;
}

airConditioning::~airConditioning() {
  // @@protoc_insertion_point(destructor:pb.airConditioning)
  SharedDtor();
}

void airConditioning::SharedDtor() {
}

void airConditioning::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* airConditioning::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const airConditioning& airConditioning::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsairConditioning();
  return *internal_default_instance();
}

airConditioning* airConditioning::New(::google::protobuf::Arena* arena) const {
  airConditioning* n = new airConditioning;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void airConditioning::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.airConditioning)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool airConditioning::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.airConditioning)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.airConditioning)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.airConditioning)
  return false;
#undef DO_
}

void airConditioning::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.airConditioning)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.airConditioning)
}

::google::protobuf::uint8* airConditioning::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.airConditioning)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.airConditioning)
  return target;
}

size_t airConditioning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.airConditioning)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void airConditioning::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.airConditioning)
  GOOGLE_DCHECK_NE(&from, this);
  const airConditioning* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const airConditioning>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.airConditioning)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.airConditioning)
    MergeFrom(*source);
  }
}

void airConditioning::MergeFrom(const airConditioning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.airConditioning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void airConditioning::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.airConditioning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void airConditioning::CopyFrom(const airConditioning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.airConditioning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool airConditioning::IsInitialized() const {
  return true;
}

void airConditioning::Swap(airConditioning* other) {
  if (other == this) return;
  InternalSwap(other);
}
void airConditioning::InternalSwap(airConditioning* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata airConditioning::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void airConditioningList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int airConditioningList::kSwitchFieldNumber;
const int airConditioningList::kAirConditioningModeFieldNumber;
const int airConditioningList::kAirConditioningFlowSpeedFieldNumber;
const int airConditioningList::kAnionFieldNumber;
const int airConditioningList::kChildLockFieldNumber;
const int airConditioningList::kLightFieldNumber;
const int airConditioningList::kUvFieldNumber;
const int airConditioningList::kWetFieldNumber;
const int airConditioningList::kFliterResetFieldNumber;
const int airConditioningList::kSetTempFieldNumber;
const int airConditioningList::kSetHumiFieldNumber;
const int airConditioningList::kSleepModeFieldNumber;
const int airConditioningList::kConstantTempFieldNumber;
const int airConditioningList::kConstantHumeFieldNumber;
const int airConditioningList::kConstantFreshFieldNumber;
const int airConditioningList::kFreshFanSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

airConditioningList::airConditioningList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsairConditioningList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.airConditioningList)
}
airConditioningList::airConditioningList(const airConditioningList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&airconditioningmode_, &from.airconditioningmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&freshfanspeed_) -
    reinterpret_cast<char*>(&airconditioningmode_)) + sizeof(freshfanspeed_));
  // @@protoc_insertion_point(copy_constructor:pb.airConditioningList)
}

void airConditioningList::SharedCtor() {
  ::memset(&airconditioningmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freshfanspeed_) -
      reinterpret_cast<char*>(&airconditioningmode_)) + sizeof(freshfanspeed_));
  _cached_size_ = 0;
}

airConditioningList::~airConditioningList() {
  // @@protoc_insertion_point(destructor:pb.airConditioningList)
  SharedDtor();
}

void airConditioningList::SharedDtor() {
}

void airConditioningList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* airConditioningList::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const airConditioningList& airConditioningList::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsairConditioningList();
  return *internal_default_instance();
}

airConditioningList* airConditioningList::New(::google::protobuf::Arena* arena) const {
  airConditioningList* n = new airConditioningList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void airConditioningList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.airConditioningList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&airconditioningmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freshfanspeed_) -
      reinterpret_cast<char*>(&airconditioningmode_)) + sizeof(freshfanspeed_));
  _internal_metadata_.Clear();
}

bool airConditioningList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.airConditioningList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Switch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningMode AirConditioningMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_airconditioningmode(static_cast< ::pb::airConditioningMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_airconditioningflowspeed(static_cast< ::pb::airConditioningFlowSpeed >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Anion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &anion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ChildLock = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &childlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Light = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Uv = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Wet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool FliterReset = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fliterreset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SetTemp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &settemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SetHumi = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sethumi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool SleepMode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sleepmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ConstantTemp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constanttemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ConstantHume = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constanthume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ConstantFresh = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constantfresh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FreshFanSpeed = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freshfanspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.airConditioningList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.airConditioningList)
  return false;
#undef DO_
}

void airConditioningList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.airConditioningList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->switch_(), output);
  }

  // .pb.airConditioningMode AirConditioningMode = 2;
  if (this->airconditioningmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->airconditioningmode(), output);
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 3;
  if (this->airconditioningflowspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->airconditioningflowspeed(), output);
  }

  // bool Anion = 4;
  if (this->anion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->anion(), output);
  }

  // bool ChildLock = 5;
  if (this->childlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->childlock(), output);
  }

  // bool Light = 6;
  if (this->light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->light(), output);
  }

  // bool Uv = 7;
  if (this->uv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->uv(), output);
  }

  // bool Wet = 8;
  if (this->wet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->wet(), output);
  }

  // bool FliterReset = 9;
  if (this->fliterreset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->fliterreset(), output);
  }

  // uint32 SetTemp = 10;
  if (this->settemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->settemp(), output);
  }

  // uint32 SetHumi = 11;
  if (this->sethumi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sethumi(), output);
  }

  // bool SleepMode = 12;
  if (this->sleepmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->sleepmode(), output);
  }

  // bool ConstantTemp = 13;
  if (this->constanttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->constanttemp(), output);
  }

  // bool ConstantHume = 14;
  if (this->constanthume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->constanthume(), output);
  }

  // bool ConstantFresh = 15;
  if (this->constantfresh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->constantfresh(), output);
  }

  // uint32 FreshFanSpeed = 16;
  if (this->freshfanspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->freshfanspeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.airConditioningList)
}

::google::protobuf::uint8* airConditioningList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.airConditioningList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->switch_(), target);
  }

  // .pb.airConditioningMode AirConditioningMode = 2;
  if (this->airconditioningmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->airconditioningmode(), target);
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 3;
  if (this->airconditioningflowspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->airconditioningflowspeed(), target);
  }

  // bool Anion = 4;
  if (this->anion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->anion(), target);
  }

  // bool ChildLock = 5;
  if (this->childlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->childlock(), target);
  }

  // bool Light = 6;
  if (this->light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->light(), target);
  }

  // bool Uv = 7;
  if (this->uv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->uv(), target);
  }

  // bool Wet = 8;
  if (this->wet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->wet(), target);
  }

  // bool FliterReset = 9;
  if (this->fliterreset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->fliterreset(), target);
  }

  // uint32 SetTemp = 10;
  if (this->settemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->settemp(), target);
  }

  // uint32 SetHumi = 11;
  if (this->sethumi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sethumi(), target);
  }

  // bool SleepMode = 12;
  if (this->sleepmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->sleepmode(), target);
  }

  // bool ConstantTemp = 13;
  if (this->constanttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->constanttemp(), target);
  }

  // bool ConstantHume = 14;
  if (this->constanthume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->constanthume(), target);
  }

  // bool ConstantFresh = 15;
  if (this->constantfresh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->constantfresh(), target);
  }

  // uint32 FreshFanSpeed = 16;
  if (this->freshfanspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->freshfanspeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.airConditioningList)
  return target;
}

size_t airConditioningList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.airConditioningList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.airConditioningMode AirConditioningMode = 2;
  if (this->airconditioningmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->airconditioningmode());
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 3;
  if (this->airconditioningflowspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->airconditioningflowspeed());
  }

  // bool Switch = 1;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // bool Anion = 4;
  if (this->anion() != 0) {
    total_size += 1 + 1;
  }

  // bool ChildLock = 5;
  if (this->childlock() != 0) {
    total_size += 1 + 1;
  }

  // bool Light = 6;
  if (this->light() != 0) {
    total_size += 1 + 1;
  }

  // bool Uv = 7;
  if (this->uv() != 0) {
    total_size += 1 + 1;
  }

  // bool Wet = 8;
  if (this->wet() != 0) {
    total_size += 1 + 1;
  }

  // bool FliterReset = 9;
  if (this->fliterreset() != 0) {
    total_size += 1 + 1;
  }

  // bool SleepMode = 12;
  if (this->sleepmode() != 0) {
    total_size += 1 + 1;
  }

  // uint32 SetTemp = 10;
  if (this->settemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->settemp());
  }

  // uint32 SetHumi = 11;
  if (this->sethumi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sethumi());
  }

  // bool ConstantTemp = 13;
  if (this->constanttemp() != 0) {
    total_size += 1 + 1;
  }

  // bool ConstantHume = 14;
  if (this->constanthume() != 0) {
    total_size += 1 + 1;
  }

  // bool ConstantFresh = 15;
  if (this->constantfresh() != 0) {
    total_size += 1 + 1;
  }

  // uint32 FreshFanSpeed = 16;
  if (this->freshfanspeed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->freshfanspeed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void airConditioningList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.airConditioningList)
  GOOGLE_DCHECK_NE(&from, this);
  const airConditioningList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const airConditioningList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.airConditioningList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.airConditioningList)
    MergeFrom(*source);
  }
}

void airConditioningList::MergeFrom(const airConditioningList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.airConditioningList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.airconditioningmode() != 0) {
    set_airconditioningmode(from.airconditioningmode());
  }
  if (from.airconditioningflowspeed() != 0) {
    set_airconditioningflowspeed(from.airconditioningflowspeed());
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.anion() != 0) {
    set_anion(from.anion());
  }
  if (from.childlock() != 0) {
    set_childlock(from.childlock());
  }
  if (from.light() != 0) {
    set_light(from.light());
  }
  if (from.uv() != 0) {
    set_uv(from.uv());
  }
  if (from.wet() != 0) {
    set_wet(from.wet());
  }
  if (from.fliterreset() != 0) {
    set_fliterreset(from.fliterreset());
  }
  if (from.sleepmode() != 0) {
    set_sleepmode(from.sleepmode());
  }
  if (from.settemp() != 0) {
    set_settemp(from.settemp());
  }
  if (from.sethumi() != 0) {
    set_sethumi(from.sethumi());
  }
  if (from.constanttemp() != 0) {
    set_constanttemp(from.constanttemp());
  }
  if (from.constanthume() != 0) {
    set_constanthume(from.constanthume());
  }
  if (from.constantfresh() != 0) {
    set_constantfresh(from.constantfresh());
  }
  if (from.freshfanspeed() != 0) {
    set_freshfanspeed(from.freshfanspeed());
  }
}

void airConditioningList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.airConditioningList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void airConditioningList::CopyFrom(const airConditioningList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.airConditioningList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool airConditioningList::IsInitialized() const {
  return true;
}

void airConditioningList::Swap(airConditioningList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void airConditioningList::InternalSwap(airConditioningList* other) {
  using std::swap;
  swap(airconditioningmode_, other->airconditioningmode_);
  swap(airconditioningflowspeed_, other->airconditioningflowspeed_);
  swap(switch__, other->switch__);
  swap(anion_, other->anion_);
  swap(childlock_, other->childlock_);
  swap(light_, other->light_);
  swap(uv_, other->uv_);
  swap(wet_, other->wet_);
  swap(fliterreset_, other->fliterreset_);
  swap(sleepmode_, other->sleepmode_);
  swap(settemp_, other->settemp_);
  swap(sethumi_, other->sethumi_);
  swap(constanttemp_, other->constanttemp_);
  swap(constanthume_, other->constanthume_);
  swap(constantfresh_, other->constantfresh_);
  swap(freshfanspeed_, other->freshfanspeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata airConditioningList::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void airConditioningState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int airConditioningState::kSwitchFieldNumber;
const int airConditioningState::kPM25FieldNumber;
const int airConditioningState::kAirConditioningModeFieldNumber;
const int airConditioningState::kAirConditioningFlowSpeedFieldNumber;
const int airConditioningState::kFilterLifeFieldNumber;
const int airConditioningState::kAnionFieldNumber;
const int airConditioningState::kChildLockFieldNumber;
const int airConditioningState::kLightFieldNumber;
const int airConditioningState::kUvFieldNumber;
const int airConditioningState::kWetFieldNumber;
const int airConditioningState::kFliterResetFieldNumber;
const int airConditioningState::kIndoorTempFieldNumber;
const int airConditioningState::kOutdoorTempFieldNumber;
const int airConditioningState::kIndoorHumidityFieldNumber;
const int airConditioningState::kOutdoorHumidityFieldNumber;
const int airConditioningState::kCO2FieldNumber;
const int airConditioningState::kCh2OValueFieldNumber;
const int airConditioningState::kFaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

airConditioningState::airConditioningState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsairConditioningState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.airConditioningState)
}
airConditioningState::airConditioningState(const airConditioningState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fault_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fault().size() > 0) {
    fault_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fault_);
  }
  ::memcpy(&pm25_, &from.pm25_,
    static_cast<size_t>(reinterpret_cast<char*>(&ch2ovalue_) -
    reinterpret_cast<char*>(&pm25_)) + sizeof(ch2ovalue_));
  // @@protoc_insertion_point(copy_constructor:pb.airConditioningState)
}

void airConditioningState::SharedCtor() {
  fault_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pm25_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ch2ovalue_) -
      reinterpret_cast<char*>(&pm25_)) + sizeof(ch2ovalue_));
  _cached_size_ = 0;
}

airConditioningState::~airConditioningState() {
  // @@protoc_insertion_point(destructor:pb.airConditioningState)
  SharedDtor();
}

void airConditioningState::SharedDtor() {
  fault_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void airConditioningState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* airConditioningState::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const airConditioningState& airConditioningState::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsairConditioningState();
  return *internal_default_instance();
}

airConditioningState* airConditioningState::New(::google::protobuf::Arena* arena) const {
  airConditioningState* n = new airConditioningState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void airConditioningState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.airConditioningState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fault_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pm25_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ch2ovalue_) -
      reinterpret_cast<char*>(&pm25_)) + sizeof(ch2ovalue_));
  _internal_metadata_.Clear();
}

bool airConditioningState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.airConditioningState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Switch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &switch__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PM25 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pm25_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningMode AirConditioningMode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_airconditioningmode(static_cast< ::pb::airConditioningMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_airconditioningflowspeed(static_cast< ::pb::airConditioningFlowSpeed >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FilterLife = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filterlife_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Anion = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &anion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ChildLock = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &childlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Light = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Uv = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Wet = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool FliterReset = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fliterreset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IndoorTemp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indoortemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OutdoorTemp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outdoortemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IndoorHumidity = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indoorhumidity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OutdoorHumidity = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outdoorhumidity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CO2 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &co2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Ch2oValue = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ch2ovalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Fault = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fault()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fault().data(), static_cast<int>(this->fault().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.airConditioningState.Fault"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.airConditioningState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.airConditioningState)
  return false;
#undef DO_
}

void airConditioningState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.airConditioningState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->switch_(), output);
  }

  // uint32 PM25 = 2;
  if (this->pm25() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pm25(), output);
  }

  // .pb.airConditioningMode AirConditioningMode = 3;
  if (this->airconditioningmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->airconditioningmode(), output);
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 4;
  if (this->airconditioningflowspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->airconditioningflowspeed(), output);
  }

  // uint32 FilterLife = 5;
  if (this->filterlife() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->filterlife(), output);
  }

  // bool Anion = 6;
  if (this->anion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->anion(), output);
  }

  // bool ChildLock = 7;
  if (this->childlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->childlock(), output);
  }

  // bool Light = 8;
  if (this->light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->light(), output);
  }

  // bool Uv = 9;
  if (this->uv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->uv(), output);
  }

  // bool Wet = 10;
  if (this->wet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->wet(), output);
  }

  // bool FliterReset = 11;
  if (this->fliterreset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->fliterreset(), output);
  }

  // uint32 IndoorTemp = 12;
  if (this->indoortemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->indoortemp(), output);
  }

  // uint32 OutdoorTemp = 13;
  if (this->outdoortemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->outdoortemp(), output);
  }

  // uint32 IndoorHumidity = 14;
  if (this->indoorhumidity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->indoorhumidity(), output);
  }

  // uint32 OutdoorHumidity = 15;
  if (this->outdoorhumidity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->outdoorhumidity(), output);
  }

  // uint32 CO2 = 16;
  if (this->co2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->co2(), output);
  }

  // uint32 Ch2oValue = 17;
  if (this->ch2ovalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->ch2ovalue(), output);
  }

  // string Fault = 18;
  if (this->fault().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fault().data(), static_cast<int>(this->fault().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.airConditioningState.Fault");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->fault(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.airConditioningState)
}

::google::protobuf::uint8* airConditioningState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.airConditioningState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Switch = 1;
  if (this->switch_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->switch_(), target);
  }

  // uint32 PM25 = 2;
  if (this->pm25() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pm25(), target);
  }

  // .pb.airConditioningMode AirConditioningMode = 3;
  if (this->airconditioningmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->airconditioningmode(), target);
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 4;
  if (this->airconditioningflowspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->airconditioningflowspeed(), target);
  }

  // uint32 FilterLife = 5;
  if (this->filterlife() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->filterlife(), target);
  }

  // bool Anion = 6;
  if (this->anion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->anion(), target);
  }

  // bool ChildLock = 7;
  if (this->childlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->childlock(), target);
  }

  // bool Light = 8;
  if (this->light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->light(), target);
  }

  // bool Uv = 9;
  if (this->uv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->uv(), target);
  }

  // bool Wet = 10;
  if (this->wet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->wet(), target);
  }

  // bool FliterReset = 11;
  if (this->fliterreset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->fliterreset(), target);
  }

  // uint32 IndoorTemp = 12;
  if (this->indoortemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->indoortemp(), target);
  }

  // uint32 OutdoorTemp = 13;
  if (this->outdoortemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->outdoortemp(), target);
  }

  // uint32 IndoorHumidity = 14;
  if (this->indoorhumidity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->indoorhumidity(), target);
  }

  // uint32 OutdoorHumidity = 15;
  if (this->outdoorhumidity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->outdoorhumidity(), target);
  }

  // uint32 CO2 = 16;
  if (this->co2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->co2(), target);
  }

  // uint32 Ch2oValue = 17;
  if (this->ch2ovalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->ch2ovalue(), target);
  }

  // string Fault = 18;
  if (this->fault().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fault().data(), static_cast<int>(this->fault().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.airConditioningState.Fault");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->fault(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.airConditioningState)
  return target;
}

size_t airConditioningState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.airConditioningState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Fault = 18;
  if (this->fault().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fault());
  }

  // uint32 PM25 = 2;
  if (this->pm25() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pm25());
  }

  // .pb.airConditioningMode AirConditioningMode = 3;
  if (this->airconditioningmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->airconditioningmode());
  }

  // .pb.airConditioningFlowSpeed AirConditioningFlowSpeed = 4;
  if (this->airconditioningflowspeed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->airconditioningflowspeed());
  }

  // uint32 FilterLife = 5;
  if (this->filterlife() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filterlife());
  }

  // bool Switch = 1;
  if (this->switch_() != 0) {
    total_size += 1 + 1;
  }

  // bool Anion = 6;
  if (this->anion() != 0) {
    total_size += 1 + 1;
  }

  // bool ChildLock = 7;
  if (this->childlock() != 0) {
    total_size += 1 + 1;
  }

  // bool Light = 8;
  if (this->light() != 0) {
    total_size += 1 + 1;
  }

  // bool Uv = 9;
  if (this->uv() != 0) {
    total_size += 1 + 1;
  }

  // bool Wet = 10;
  if (this->wet() != 0) {
    total_size += 1 + 1;
  }

  // bool FliterReset = 11;
  if (this->fliterreset() != 0) {
    total_size += 1 + 1;
  }

  // uint32 IndoorTemp = 12;
  if (this->indoortemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->indoortemp());
  }

  // uint32 OutdoorTemp = 13;
  if (this->outdoortemp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outdoortemp());
  }

  // uint32 IndoorHumidity = 14;
  if (this->indoorhumidity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->indoorhumidity());
  }

  // uint32 OutdoorHumidity = 15;
  if (this->outdoorhumidity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outdoorhumidity());
  }

  // uint32 CO2 = 16;
  if (this->co2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->co2());
  }

  // uint32 Ch2oValue = 17;
  if (this->ch2ovalue() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ch2ovalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void airConditioningState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.airConditioningState)
  GOOGLE_DCHECK_NE(&from, this);
  const airConditioningState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const airConditioningState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.airConditioningState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.airConditioningState)
    MergeFrom(*source);
  }
}

void airConditioningState::MergeFrom(const airConditioningState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.airConditioningState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fault().size() > 0) {

    fault_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fault_);
  }
  if (from.pm25() != 0) {
    set_pm25(from.pm25());
  }
  if (from.airconditioningmode() != 0) {
    set_airconditioningmode(from.airconditioningmode());
  }
  if (from.airconditioningflowspeed() != 0) {
    set_airconditioningflowspeed(from.airconditioningflowspeed());
  }
  if (from.filterlife() != 0) {
    set_filterlife(from.filterlife());
  }
  if (from.switch_() != 0) {
    set_switch_(from.switch_());
  }
  if (from.anion() != 0) {
    set_anion(from.anion());
  }
  if (from.childlock() != 0) {
    set_childlock(from.childlock());
  }
  if (from.light() != 0) {
    set_light(from.light());
  }
  if (from.uv() != 0) {
    set_uv(from.uv());
  }
  if (from.wet() != 0) {
    set_wet(from.wet());
  }
  if (from.fliterreset() != 0) {
    set_fliterreset(from.fliterreset());
  }
  if (from.indoortemp() != 0) {
    set_indoortemp(from.indoortemp());
  }
  if (from.outdoortemp() != 0) {
    set_outdoortemp(from.outdoortemp());
  }
  if (from.indoorhumidity() != 0) {
    set_indoorhumidity(from.indoorhumidity());
  }
  if (from.outdoorhumidity() != 0) {
    set_outdoorhumidity(from.outdoorhumidity());
  }
  if (from.co2() != 0) {
    set_co2(from.co2());
  }
  if (from.ch2ovalue() != 0) {
    set_ch2ovalue(from.ch2ovalue());
  }
}

void airConditioningState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.airConditioningState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void airConditioningState::CopyFrom(const airConditioningState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.airConditioningState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool airConditioningState::IsInitialized() const {
  return true;
}

void airConditioningState::Swap(airConditioningState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void airConditioningState::InternalSwap(airConditioningState* other) {
  using std::swap;
  fault_.Swap(&other->fault_);
  swap(pm25_, other->pm25_);
  swap(airconditioningmode_, other->airconditioningmode_);
  swap(airconditioningflowspeed_, other->airconditioningflowspeed_);
  swap(filterlife_, other->filterlife_);
  swap(switch__, other->switch__);
  swap(anion_, other->anion_);
  swap(childlock_, other->childlock_);
  swap(light_, other->light_);
  swap(uv_, other->uv_);
  swap(wet_, other->wet_);
  swap(fliterreset_, other->fliterreset_);
  swap(indoortemp_, other->indoortemp_);
  swap(outdoortemp_, other->outdoortemp_);
  swap(indoorhumidity_, other->indoorhumidity_);
  swap(outdoorhumidity_, other->outdoorhumidity_);
  swap(co2_, other->co2_);
  swap(ch2ovalue_, other->ch2ovalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata airConditioningState::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DevicedisconnReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DevicedisconnReq::kDeviceTypeFieldNumber;
const int DevicedisconnReq::kDeviceIdFieldNumber;
const int DevicedisconnReq::kMsgSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DevicedisconnReq::DevicedisconnReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iot_2eproto::InitDefaultsDevicedisconnReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DevicedisconnReq)
}
DevicedisconnReq::DevicedisconnReq(const DevicedisconnReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgseq().size() > 0) {
    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  devicetype_ = from.devicetype_;
  // @@protoc_insertion_point(copy_constructor:pb.DevicedisconnReq)
}

void DevicedisconnReq::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _cached_size_ = 0;
}

DevicedisconnReq::~DevicedisconnReq() {
  // @@protoc_insertion_point(destructor:pb.DevicedisconnReq)
  SharedDtor();
}

void DevicedisconnReq::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DevicedisconnReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevicedisconnReq::descriptor() {
  ::protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DevicedisconnReq& DevicedisconnReq::default_instance() {
  ::protobuf_iot_2eproto::InitDefaultsDevicedisconnReq();
  return *internal_default_instance();
}

DevicedisconnReq* DevicedisconnReq::New(::google::protobuf::Arena* arena) const {
  DevicedisconnReq* n = new DevicedisconnReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DevicedisconnReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DevicedisconnReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgseq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool DevicedisconnReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DevicedisconnReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DeviceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), static_cast<int>(this->deviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DevicedisconnReq.DeviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgSeq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgseq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgseq().data(), static_cast<int>(this->msgseq().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DevicedisconnReq.MsgSeq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DevicedisconnReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DevicedisconnReq)
  return false;
#undef DO_
}

void DevicedisconnReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DevicedisconnReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->devicetype(), output);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DevicedisconnReq.DeviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // string MsgSeq = 3;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DevicedisconnReq.MsgSeq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msgseq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DevicedisconnReq)
}

::google::protobuf::uint8* DevicedisconnReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DevicedisconnReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->devicetype(), target);
  }

  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), static_cast<int>(this->deviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DevicedisconnReq.DeviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // string MsgSeq = 3;
  if (this->msgseq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgseq().data(), static_cast<int>(this->msgseq().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DevicedisconnReq.MsgSeq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msgseq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DevicedisconnReq)
  return target;
}

size_t DevicedisconnReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DevicedisconnReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string MsgSeq = 3;
  if (this->msgseq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgseq());
  }

  // uint32 DeviceType = 1;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevicedisconnReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DevicedisconnReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DevicedisconnReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DevicedisconnReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DevicedisconnReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DevicedisconnReq)
    MergeFrom(*source);
  }
}

void DevicedisconnReq::MergeFrom(const DevicedisconnReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DevicedisconnReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.msgseq().size() > 0) {

    msgseq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgseq_);
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
}

void DevicedisconnReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DevicedisconnReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevicedisconnReq::CopyFrom(const DevicedisconnReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DevicedisconnReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevicedisconnReq::IsInitialized() const {
  return true;
}

void DevicedisconnReq::Swap(DevicedisconnReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DevicedisconnReq::InternalSwap(DevicedisconnReq* other) {
  using std::swap;
  deviceid_.Swap(&other->deviceid_);
  msgseq_.Swap(&other->msgseq_);
  swap(devicetype_, other->devicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DevicedisconnReq::GetMetadata() const {
  protobuf_iot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb

// @@protoc_insertion_point(global_scope)
