// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meet.proto

/*
Package lite is a generated protocol buffer package.

Multimedia control parameters
每个参数直接给出所有的输入值列表，枚举a|b|c,范围a~b,当前值最后$分割

It is generated from these files:
	meet.proto

It has these top-level messages:
	AudioController
	InOut
	CmdParm
	CentralController
	Power
	RecordDevice
	VideoConteroller
*/
package lite

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AudioController struct {
	Name    string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	DefName string `protobuf:"bytes,2,opt,name=DefName" json:"DefName,omitempty"`
	Volume  *InOut `protobuf:"bytes,3,opt,name=Volume" json:"Volume,omitempty"`
	Mute    *InOut `protobuf:"bytes,4,opt,name=Mute" json:"Mute,omitempty"`
	Level   *InOut `protobuf:"bytes,5,opt,name=Level" json:"Level,omitempty"`
}

func (m *AudioController) Reset()                    { *m = AudioController{} }
func (m *AudioController) String() string            { return proto.CompactTextString(m) }
func (*AudioController) ProtoMessage()               {}
func (*AudioController) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AudioController) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AudioController) GetDefName() string {
	if m != nil {
		return m.DefName
	}
	return ""
}

func (m *AudioController) GetVolume() *InOut {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *AudioController) GetMute() *InOut {
	if m != nil {
		return m.Mute
	}
	return nil
}

func (m *AudioController) GetLevel() *InOut {
	if m != nil {
		return m.Level
	}
	return nil
}

type InOut struct {
	Name   string     `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	OutPut []*CmdParm `protobuf:"bytes,2,rep,name=OutPut" json:"OutPut,omitempty"`
	InPut  []*CmdParm `protobuf:"bytes,3,rep,name=InPut" json:"InPut,omitempty"`
}

func (m *InOut) Reset()                    { *m = InOut{} }
func (m *InOut) String() string            { return proto.CompactTextString(m) }
func (*InOut) ProtoMessage()               {}
func (*InOut) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InOut) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InOut) GetOutPut() []*CmdParm {
	if m != nil {
		return m.OutPut
	}
	return nil
}

func (m *InOut) GetInPut() []*CmdParm {
	if m != nil {
		return m.InPut
	}
	return nil
}

type CmdParm struct {
	Name            string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Chanel          string `protobuf:"bytes,2,opt,name=Chanel" json:"Chanel,omitempty"`
	Value           string `protobuf:"bytes,3,opt,name=Value" json:"Value,omitempty"`
	Id              string `protobuf:"bytes,4,opt,name=Id" json:"Id,omitempty"`
	DefId           string `protobuf:"bytes,5,opt,name=DefId" json:"DefId,omitempty"`
	Join            string `protobuf:"bytes,6,opt,name=Join" json:"Join,omitempty"`
	DefJoin         string `protobuf:"bytes,7,opt,name=DefJoin" json:"DefJoin,omitempty"`
	Press           string `protobuf:"bytes,8,opt,name=Press" json:"Press,omitempty"`
	Switch          string `protobuf:"bytes,9,opt,name=Switch" json:"Switch,omitempty"`
	PressSwitchMode string `protobuf:"bytes,10,opt,name=PressSwitchMode" json:"PressSwitchMode,omitempty"`
	Sort            string `protobuf:"bytes,11,opt,name=Sort" json:"Sort,omitempty"`
}

func (m *CmdParm) Reset()                    { *m = CmdParm{} }
func (m *CmdParm) String() string            { return proto.CompactTextString(m) }
func (*CmdParm) ProtoMessage()               {}
func (*CmdParm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CmdParm) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CmdParm) GetChanel() string {
	if m != nil {
		return m.Chanel
	}
	return ""
}

func (m *CmdParm) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CmdParm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CmdParm) GetDefId() string {
	if m != nil {
		return m.DefId
	}
	return ""
}

func (m *CmdParm) GetJoin() string {
	if m != nil {
		return m.Join
	}
	return ""
}

func (m *CmdParm) GetDefJoin() string {
	if m != nil {
		return m.DefJoin
	}
	return ""
}

func (m *CmdParm) GetPress() string {
	if m != nil {
		return m.Press
	}
	return ""
}

func (m *CmdParm) GetSwitch() string {
	if m != nil {
		return m.Switch
	}
	return ""
}

func (m *CmdParm) GetPressSwitchMode() string {
	if m != nil {
		return m.PressSwitchMode
	}
	return ""
}

func (m *CmdParm) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

type CentralController struct {
	Name    string     `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	DefName string     `protobuf:"bytes,2,opt,name=DefName" json:"DefName,omitempty"`
	Parm    []*CmdParm `protobuf:"bytes,3,rep,name=Parm" json:"Parm,omitempty"`
}

func (m *CentralController) Reset()                    { *m = CentralController{} }
func (m *CentralController) String() string            { return proto.CompactTextString(m) }
func (*CentralController) ProtoMessage()               {}
func (*CentralController) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CentralController) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CentralController) GetDefName() string {
	if m != nil {
		return m.DefName
	}
	return ""
}

func (m *CentralController) GetParm() []*CmdParm {
	if m != nil {
		return m.Parm
	}
	return nil
}

type Power struct {
	Name    string     `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	DefName string     `protobuf:"bytes,2,opt,name=DefName" json:"DefName,omitempty"`
	Parm    []*CmdParm `protobuf:"bytes,3,rep,name=Parm" json:"Parm,omitempty"`
}

func (m *Power) Reset()                    { *m = Power{} }
func (m *Power) String() string            { return proto.CompactTextString(m) }
func (*Power) ProtoMessage()               {}
func (*Power) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Power) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Power) GetDefName() string {
	if m != nil {
		return m.DefName
	}
	return ""
}

func (m *Power) GetParm() []*CmdParm {
	if m != nil {
		return m.Parm
	}
	return nil
}

type RecordDevice struct {
	Name       string     `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	DefName    string     `protobuf:"bytes,2,opt,name=DefName" json:"DefName,omitempty"`
	ChanelParm []*CmdParm `protobuf:"bytes,3,rep,name=ChanelParm" json:"ChanelParm,omitempty"`
	ActiveParm []*CmdParm `protobuf:"bytes,4,rep,name=ActiveParm" json:"ActiveParm,omitempty"`
}

func (m *RecordDevice) Reset()                    { *m = RecordDevice{} }
func (m *RecordDevice) String() string            { return proto.CompactTextString(m) }
func (*RecordDevice) ProtoMessage()               {}
func (*RecordDevice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RecordDevice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RecordDevice) GetDefName() string {
	if m != nil {
		return m.DefName
	}
	return ""
}

func (m *RecordDevice) GetChanelParm() []*CmdParm {
	if m != nil {
		return m.ChanelParm
	}
	return nil
}

func (m *RecordDevice) GetActiveParm() []*CmdParm {
	if m != nil {
		return m.ActiveParm
	}
	return nil
}

type VideoConteroller struct {
	Key []*CmdParm `protobuf:"bytes,1,rep,name=Key" json:"Key,omitempty"`
}

func (m *VideoConteroller) Reset()                    { *m = VideoConteroller{} }
func (m *VideoConteroller) String() string            { return proto.CompactTextString(m) }
func (*VideoConteroller) ProtoMessage()               {}
func (*VideoConteroller) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *VideoConteroller) GetKey() []*CmdParm {
	if m != nil {
		return m.Key
	}
	return nil
}

func init() {
	proto.RegisterType((*AudioController)(nil), "lite.AudioController")
	proto.RegisterType((*InOut)(nil), "lite.InOut")
	proto.RegisterType((*CmdParm)(nil), "lite.CmdParm")
	proto.RegisterType((*CentralController)(nil), "lite.CentralController")
	proto.RegisterType((*Power)(nil), "lite.Power")
	proto.RegisterType((*RecordDevice)(nil), "lite.RecordDevice")
	proto.RegisterType((*VideoConteroller)(nil), "lite.VideoConteroller")
}

func init() { proto.RegisterFile("meet.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xbf, 0xc1, 0x63, 0xa0, 0xb0, 0xaa, 0xd0, 0xde, 0x9a, 0xba, 0x42, 0xf2, 0x85,
	0x1c, 0xda, 0x27, 0xa8, 0x9c, 0x8b, 0x81, 0x52, 0xcb, 0x95, 0x22, 0xae, 0xc6, 0x3b, 0x25, 0x96,
	0xd6, 0x5e, 0xb4, 0x59, 0x27, 0xe2, 0x19, 0x78, 0x03, 0x9e, 0x80, 0xc7, 0x44, 0x3b, 0x6b, 0xfe,
	0x88, 0x98, 0x03, 0x48, 0xbd, 0xed, 0x37, 0xdf, 0x2f, 0x33, 0xb3, 0x5f, 0xbc, 0x00, 0x3d, 0xa2,
	0x59, 0x7d, 0xd2, 0xca, 0x28, 0x16, 0xca, 0xce, 0x60, 0xf6, 0xcd, 0x83, 0x93, 0xeb, 0x51, 0x74,
	0xaa, 0x50, 0x83, 0xd1, 0x4a, 0x4a, 0xd4, 0x8c, 0x41, 0xf8, 0xae, 0xe9, 0x91, 0x7b, 0x4b, 0x2f,
	0x4f, 0x6a, 0x3a, 0x33, 0x0e, 0x8b, 0x35, 0xde, 0x53, 0xd9, 0xa7, 0xf2, 0x0f, 0xc9, 0x2e, 0x20,
	0xde, 0x28, 0x39, 0xf6, 0xc8, 0x83, 0xa5, 0x97, 0xa7, 0x97, 0xe9, 0xca, 0x36, 0x5e, 0x95, 0xc3,
	0xed, 0x68, 0xea, 0xc9, 0x62, 0x67, 0x10, 0xde, 0x8c, 0x06, 0x79, 0x78, 0x8c, 0x90, 0xc1, 0xce,
	0x21, 0x7a, 0x8b, 0x7b, 0x94, 0x3c, 0x3a, 0x26, 0x9c, 0x93, 0x7d, 0x84, 0x88, 0xf4, 0xec, 0x7e,
	0x2f, 0x21, 0xbe, 0x1d, 0x4d, 0x35, 0x1a, 0xee, 0x2f, 0x83, 0x3c, 0xbd, 0x7c, 0xe2, 0x1a, 0x14,
	0xbd, 0xa8, 0x1a, 0xdd, 0xd7, 0x93, 0xc9, 0x2e, 0x6c, 0x0f, 0x4b, 0x05, 0x73, 0x94, 0xf3, 0xb2,
	0x2f, 0x3e, 0x2c, 0xa6, 0xd2, 0xec, 0xac, 0x17, 0x10, 0x17, 0xdb, 0x66, 0x40, 0x39, 0x45, 0x31,
	0x29, 0x76, 0x0a, 0xd1, 0xa6, 0x91, 0xa3, 0x0b, 0x22, 0xa9, 0x9d, 0x60, 0x4f, 0xc1, 0x2f, 0x05,
	0x5d, 0x3c, 0xa9, 0xfd, 0x52, 0x58, 0x6a, 0x8d, 0xf7, 0xa5, 0xa0, 0x9b, 0x26, 0xb5, 0x13, 0x76,
	0xce, 0x6b, 0xd5, 0x0d, 0x3c, 0x76, 0x73, 0xec, 0x79, 0xca, 0x9c, 0xca, 0x8b, 0x9f, 0x99, 0x93,
	0x73, 0x0a, 0x51, 0xa5, 0x71, 0xb7, 0xe3, 0x8f, 0x5c, 0x0f, 0x12, 0x76, 0xaf, 0xbb, 0x43, 0x67,
	0xda, 0x2d, 0x4f, 0xdc, 0x5e, 0x4e, 0xb1, 0x1c, 0x4e, 0x08, 0x70, 0xf2, 0x46, 0x09, 0xe4, 0x40,
	0xc0, 0x9f, 0x65, 0xbb, 0xc5, 0x9d, 0xd2, 0x86, 0xa7, 0x6e, 0x0b, 0x7b, 0xce, 0x04, 0x3c, 0x2f,
	0x70, 0x30, 0xba, 0x91, 0xff, 0xfd, 0x89, 0x9c, 0x43, 0x68, 0xc3, 0x9c, 0x0f, 0x9d, 0xac, 0xec,
	0x3d, 0x44, 0x95, 0x3a, 0x3c, 0x44, 0xe7, 0xaf, 0x1e, 0x3c, 0xae, 0xb1, 0x55, 0x5a, 0xac, 0x71,
	0xdf, 0xb5, 0xf8, 0x8f, 0x13, 0x5e, 0x01, 0xb8, 0xbf, 0xf7, 0xef, 0x73, 0x7e, 0x03, 0x2c, 0x7e,
	0xdd, 0x9a, 0x6e, 0x8f, 0x84, 0x87, 0xb3, 0xf8, 0x2f, 0x20, 0xbb, 0x82, 0x67, 0x9b, 0x4e, 0x20,
	0xbd, 0x3e, 0x9c, 0xb2, 0x3d, 0x83, 0xe0, 0x0d, 0x7e, 0xe6, 0xde, 0xdc, 0x6f, 0xad, 0xf3, 0x21,
	0xa6, 0x07, 0x7c, 0xf5, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x07, 0xb2, 0xcb, 0xe8, 0xce, 0x03, 0x00,
	0x00,
}
